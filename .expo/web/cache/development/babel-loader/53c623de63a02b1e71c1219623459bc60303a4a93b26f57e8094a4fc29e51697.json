{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nexport default {\n  get name() {\n    return 'ExpoGoogleSignIn';\n  },\n  get ERRORS() {\n    return {};\n  },\n  get SCOPES() {\n    return {};\n  },\n  get TYPES() {\n    return {};\n  },\n  isConnectedAsync() {\n    return _asyncToGenerator(function* () {\n      return false;\n    })();\n  }\n};","map":{"version":3,"names":["name","ERRORS","SCOPES","TYPES","isConnectedAsync","_asyncToGenerator"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-google-sign-in/src/ExpoGoogleSignIn.web.ts"],"sourcesContent":["export default {\n  get name(): string {\n    return 'ExpoGoogleSignIn';\n  },\n  get ERRORS(): { [key: string]: string } {\n    return {};\n  },\n  get SCOPES(): { [key: string]: string } {\n    return {};\n  },\n  get TYPES(): { [key: string]: string } {\n    return {};\n  },\n  async isConnectedAsync(): Promise<boolean> {\n    return false;\n  },\n};\n"],"mappings":";;AAAA,eAAe;EACb,IAAIA,IAAIA,CAAA;IACN,OAAO,kBAAkB;EAC3B,CAAC;EACD,IAAIC,MAAMA,CAAA;IACR,OAAO,EAAE;EACX,CAAC;EACD,IAAIC,MAAMA,CAAA;IACR,OAAO,EAAE;EACX,CAAC;EACD,IAAIC,KAAKA,CAAA;IACP,OAAO,EAAE;EACX,CAAC;EACKC,gBAAgBA,CAAA;IAAA,OAAAC,iBAAA;MACpB,OAAO,KAAK;IAAC;EACf;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}