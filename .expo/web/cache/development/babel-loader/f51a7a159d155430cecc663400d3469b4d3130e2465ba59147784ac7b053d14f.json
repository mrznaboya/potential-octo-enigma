{"ast":null,"code":"import invariant from 'invariant';\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\nexport class EventEmitter {\n  constructor(nativeModule) {\n    this._listenerCount = 0;\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule);\n  }\n  addListener(eventName, listener) {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n    this._listenerCount++;\n    var nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    var subscription = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      }\n    };\n    return subscription;\n  }\n  removeAllListeners(eventName) {\n    var removedListenerCount = this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(this._listenerCount >= 0, \"EventEmitter must have a non-negative number of listeners\");\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n  removeSubscription(subscription) {\n    var nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n    this._eventEmitter.removeSubscription(nativeEmitterSubscription);\n    this._listenerCount--;\n    delete subscription[nativeEmitterSubscriptionKey];\n    subscription.remove = () => {};\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n  emit(eventName) {\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}","map":{"version":3,"names":["invariant","NativeEventEmitter","Platform","nativeEmitterSubscriptionKey","EventEmitter","constructor","nativeModule","_listenerCount","_nativeModule","_eventEmitter","addListener","eventName","listener","OS","startObserving","nativeEmitterSubscription","subscription","remove","removeSubscription","removeAllListeners","removedListenerCount","listeners","length","stopObserving","emit","_len","arguments","params","Array","_key"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/@unimodules/react-native-adapter/src/EventEmitter.ts"],"sourcesContent":["import invariant from 'invariant';\nimport { NativeEventEmitter, Platform } from 'react-native';\n\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\n\ntype NativeModule = {\n  startObserving?: () => void;\n  stopObserving?: () => void;\n  addListener: (eventName: string) => void;\n  removeListeners: (count: number) => void;\n};\n\nexport type Subscription = {\n  remove: () => void;\n};\n\nexport class EventEmitter {\n  _listenerCount = 0;\n  _nativeModule: NativeModule;\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\n  }\n\n  addListener<T>(eventName: string, listener: (event: T) => void): Subscription {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      },\n    };\n    return subscription;\n  }\n\n  removeAllListeners(eventName: string): void {\n    const removedListenerCount = this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(\n      this._listenerCount >= 0,\n      `EventEmitter must have a non-negative number of listeners`\n    );\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  removeSubscription(subscription: Subscription): void {\n    const nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n\n    this._eventEmitter.removeSubscription(nativeEmitterSubscription!);\n    this._listenerCount--;\n\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\n    // called again with the same subscription\n    delete subscription[nativeEmitterSubscriptionKey];\n\n    // Release closed-over references to the emitter\n    subscription.remove = () => {};\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  emit(eventName: string, ...params: any[]): void {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,WAAW;AAAC,OAAAC,kBAAA;AAAA,OAAAC,QAAA;AAGlC,IAAMC,4BAA4B,GAAG,+BAA+B;AAapE,OAAM,MAAOC,YAAY;EAKvBC,YAAYC,YAA0B;IAJtC,KAAAC,cAAc,GAAG,CAAC;IAKhB,IAAI,CAACC,aAAa,GAAGF,YAAY;IACjC,IAAI,CAACG,aAAa,GAAG,IAAIR,kBAAkB,CAACK,YAAmB,CAAC;EAClE;EAEAI,WAAWA,CAAIC,SAAiB,EAAEC,QAA4B;IAC5D,IAAI,CAAC,IAAI,CAACL,cAAc,IAAIL,QAAQ,CAACW,EAAE,KAAK,KAAK,IAAI,IAAI,CAACL,aAAa,CAACM,cAAc,EAAE;MACtF,IAAI,CAACN,aAAa,CAACM,cAAc,EAAE;;IAGrC,IAAI,CAACP,cAAc,EAAE;IACrB,IAAMQ,yBAAyB,GAAG,IAAI,CAACN,aAAa,CAACC,WAAW,CAACC,SAAS,EAAEC,QAAQ,CAAC;IACrF,IAAMI,YAAY,GAAG;MACnB,CAACb,4BAA4B,GAAGY,yBAAyB;MACzDE,MAAM,EAAEA,CAAA,KAAK;QACX,IAAI,CAACC,kBAAkB,CAACF,YAAY,CAAC;MACvC;KACD;IACD,OAAOA,YAAY;EACrB;EAEAG,kBAAkBA,CAACR,SAAiB;IAClC,IAAMS,oBAAoB,GAAG,IAAI,CAACX,aAAa,CAACY,SAAS,CAACV,SAAS,CAAC,CAACW,MAAM;IAC3E,IAAI,CAACb,aAAa,CAACU,kBAAkB,CAACR,SAAS,CAAC;IAChD,IAAI,CAACJ,cAAc,IAAIa,oBAAoB;IAC3CpB,SAAS,CACP,IAAI,CAACO,cAAc,IAAI,CAAC,6DACmC,CAC5D;IAED,IAAI,CAAC,IAAI,CAACA,cAAc,IAAIL,QAAQ,CAACW,EAAE,KAAK,KAAK,IAAI,IAAI,CAACL,aAAa,CAACe,aAAa,EAAE;MACrF,IAAI,CAACf,aAAa,CAACe,aAAa,EAAE;;EAEtC;EAEAL,kBAAkBA,CAACF,YAA0B;IAC3C,IAAMD,yBAAyB,GAAGC,YAAY,CAACb,4BAA4B,CAAC;IAC5E,IAAI,CAACY,yBAAyB,EAAE;MAC9B;;IAGF,IAAI,CAACN,aAAa,CAACS,kBAAkB,CAACH,yBAA0B,CAAC;IACjE,IAAI,CAACR,cAAc,EAAE;IAIrB,OAAOS,YAAY,CAACb,4BAA4B,CAAC;IAGjDa,YAAY,CAACC,MAAM,GAAG,MAAK,CAAE,CAAC;IAE9B,IAAI,CAAC,IAAI,CAACV,cAAc,IAAIL,QAAQ,CAACW,EAAE,KAAK,KAAK,IAAI,IAAI,CAACL,aAAa,CAACe,aAAa,EAAE;MACrF,IAAI,CAACf,aAAa,CAACe,aAAa,EAAE;;EAEtC;EAEAC,IAAIA,CAACb,SAAiB,EAAkB;IAAA,SAAAc,IAAA,GAAAC,SAAA,CAAAJ,MAAA,EAAbK,MAAa,OAAAC,KAAA,CAAAH,IAAA,OAAAA,IAAA,WAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;MAAbF,MAAa,CAAAE,IAAA,QAAAH,SAAA,CAAAG,IAAA;IAAA;IACtC,IAAI,CAACpB,aAAa,CAACe,IAAI,CAACb,SAAS,EAAE,GAAGgB,MAAM,CAAC;EAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}