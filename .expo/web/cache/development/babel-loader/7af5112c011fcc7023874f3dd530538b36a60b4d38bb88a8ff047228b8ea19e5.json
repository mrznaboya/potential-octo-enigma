{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport { UnavailabilityError } from '@unimodules/core';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport ExpoCalendar from \"./ExpoCalendar\";\n;\nexport function getCalendarsAsync(_x) {\n  return _getCalendarsAsync.apply(this, arguments);\n}\nfunction _getCalendarsAsync() {\n  _getCalendarsAsync = _asyncToGenerator(function* (entityType) {\n    if (!ExpoCalendar.getCalendarsAsync) {\n      throw new UnavailabilityError('Calendar', 'getCalendarsAsync');\n    }\n    if (!entityType) {\n      return ExpoCalendar.getCalendarsAsync(null);\n    }\n    return ExpoCalendar.getCalendarsAsync(entityType);\n  });\n  return _getCalendarsAsync.apply(this, arguments);\n}\nexport function createCalendarAsync() {\n  return _createCalendarAsync.apply(this, arguments);\n}\nfunction _createCalendarAsync() {\n  _createCalendarAsync = _asyncToGenerator(function* () {\n    var details = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!ExpoCalendar.saveCalendarAsync) {\n      throw new UnavailabilityError('Calendar', 'createCalendarAsync');\n    }\n    var color = details.color ? processColor(details.color) : undefined;\n    var newDetails = _objectSpread({}, details, {\n      id: undefined,\n      color\n    });\n    return ExpoCalendar.saveCalendarAsync(newDetails);\n  });\n  return _createCalendarAsync.apply(this, arguments);\n}\nexport function updateCalendarAsync(_x2) {\n  return _updateCalendarAsync.apply(this, arguments);\n}\nfunction _updateCalendarAsync() {\n  _updateCalendarAsync = _asyncToGenerator(function* (id) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExpoCalendar.saveCalendarAsync) {\n      throw new UnavailabilityError('Calendar', 'updateCalendarAsync');\n    }\n    if (!id) {\n      throw new Error('updateCalendarAsync must be called with an id (string) of the target calendar');\n    }\n    var color = details.color ? processColor(details.color) : undefined;\n    if (Platform.OS === 'android') {\n      if (details.hasOwnProperty('source') || details.hasOwnProperty('color') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities') || details.hasOwnProperty('isPrimary') || details.hasOwnProperty('ownerAccount') || details.hasOwnProperty('timeZone') || details.hasOwnProperty('allowedReminders') || details.hasOwnProperty('allowedAttendeeTypes') || details.hasOwnProperty('accessLevel')) {\n        console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n      }\n    } else {\n      if (details.hasOwnProperty('source') || details.hasOwnProperty('type') || details.hasOwnProperty('entityType') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities')) {\n        console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n      }\n    }\n    var newDetails = _objectSpread({}, details, {\n      id,\n      color\n    });\n    return ExpoCalendar.saveCalendarAsync(newDetails);\n  });\n  return _updateCalendarAsync.apply(this, arguments);\n}\nexport function deleteCalendarAsync(_x3) {\n  return _deleteCalendarAsync.apply(this, arguments);\n}\nfunction _deleteCalendarAsync() {\n  _deleteCalendarAsync = _asyncToGenerator(function* (id) {\n    if (!ExpoCalendar.deleteCalendarAsync) {\n      throw new UnavailabilityError('Calendar', 'deleteCalendarAsync');\n    }\n    if (!id) {\n      throw new Error('deleteCalendarAsync must be called with an id (string) of the target calendar');\n    }\n    return ExpoCalendar.deleteCalendarAsync(id);\n  });\n  return _deleteCalendarAsync.apply(this, arguments);\n}\nexport function getEventsAsync(_x4, _x5, _x6) {\n  return _getEventsAsync.apply(this, arguments);\n}\nfunction _getEventsAsync() {\n  _getEventsAsync = _asyncToGenerator(function* (calendarIds, startDate, endDate) {\n    if (!ExpoCalendar.getEventsAsync) {\n      throw new UnavailabilityError('Calendar', 'getEventsAsync');\n    }\n    if (!startDate) {\n      throw new Error('getEventsAsync must be called with a startDate (date) to search for events');\n    }\n    if (!endDate) {\n      throw new Error('getEventsAsync must be called with an endDate (date) to search for events');\n    }\n    if (!calendarIds || !calendarIds.length) {\n      throw new Error('getEventsAsync must be called with a non-empty array of calendarIds to search');\n    }\n    return ExpoCalendar.getEventsAsync(stringifyIfDate(startDate), stringifyIfDate(endDate), calendarIds);\n  });\n  return _getEventsAsync.apply(this, arguments);\n}\nexport function getEventAsync(_x7) {\n  return _getEventAsync.apply(this, arguments);\n}\nfunction _getEventAsync() {\n  _getEventAsync = _asyncToGenerator(function* (id) {\n    var {\n      futureEvents = false,\n      instanceStartDate\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExpoCalendar.getEventByIdAsync) {\n      throw new UnavailabilityError('Calendar', 'getEventAsync');\n    }\n    if (!id) {\n      throw new Error('getEventAsync must be called with an id (string) of the target event');\n    }\n    if (Platform.OS === 'ios') {\n      return ExpoCalendar.getEventByIdAsync(id, instanceStartDate);\n    } else {\n      return ExpoCalendar.getEventByIdAsync(id);\n    }\n  });\n  return _getEventAsync.apply(this, arguments);\n}\nexport function createEventAsync(_x8) {\n  return _createEventAsync.apply(this, arguments);\n}\nfunction _createEventAsync() {\n  _createEventAsync = _asyncToGenerator(function* (calendarId) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExpoCalendar.saveEventAsync) {\n      throw new UnavailabilityError('Calendar', 'createEventAsync');\n    }\n    if (!calendarId) {\n      throw new Error('createEventAsync must be called with an id (string) of the target calendar');\n    }\n    if (Platform.OS === 'android') {\n      if (!details.startDate) {\n        throw new Error('createEventAsync requires a startDate (Date)');\n      }\n      if (!details.endDate) {\n        throw new Error('createEventAsync requires an endDate (Date)');\n      }\n    }\n    var newDetails = _objectSpread({}, details, {\n      id: undefined,\n      calendarId: calendarId === DEFAULT ? undefined : calendarId\n    });\n    return ExpoCalendar.saveEventAsync(stringifyDateValues(newDetails), {});\n  });\n  return _createEventAsync.apply(this, arguments);\n}\nexport function updateEventAsync(_x9) {\n  return _updateEventAsync.apply(this, arguments);\n}\nfunction _updateEventAsync() {\n  _updateEventAsync = _asyncToGenerator(function* (id) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var {\n      futureEvents = false,\n      instanceStartDate\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (!ExpoCalendar.saveEventAsync) {\n      throw new UnavailabilityError('Calendar', 'updateEventAsync');\n    }\n    if (!id) {\n      throw new Error('updateEventAsync must be called with an id (string) of the target event');\n    }\n    if (Platform.OS === 'ios') {\n      if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate') || details.hasOwnProperty('originalStartDate') || details.hasOwnProperty('isDetached') || details.hasOwnProperty('status') || details.hasOwnProperty('organizer')) {\n        console.warn('updateEventAsync was called with one or more read-only properties, which will not be updated');\n      }\n    }\n    var newDetails = _objectSpread({}, details, {\n      id,\n      instanceStartDate\n    });\n    return ExpoCalendar.saveEventAsync(stringifyDateValues(newDetails), {\n      futureEvents\n    });\n  });\n  return _updateEventAsync.apply(this, arguments);\n}\nexport function deleteEventAsync(_x10) {\n  return _deleteEventAsync.apply(this, arguments);\n}\nfunction _deleteEventAsync() {\n  _deleteEventAsync = _asyncToGenerator(function* (id) {\n    var {\n      futureEvents = false,\n      instanceStartDate\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExpoCalendar.deleteEventAsync) {\n      throw new UnavailabilityError('Calendar', 'deleteEventAsync');\n    }\n    if (!id) {\n      throw new Error('deleteEventAsync must be called with an id (string) of the target event');\n    }\n    return ExpoCalendar.deleteEventAsync({\n      id,\n      instanceStartDate\n    }, {\n      futureEvents\n    });\n  });\n  return _deleteEventAsync.apply(this, arguments);\n}\nexport function getAttendeesForEventAsync(_x11) {\n  return _getAttendeesForEventAsync.apply(this, arguments);\n}\nfunction _getAttendeesForEventAsync() {\n  _getAttendeesForEventAsync = _asyncToGenerator(function* (id) {\n    var {\n      futureEvents = false,\n      instanceStartDate\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExpoCalendar.getAttendeesForEventAsync) {\n      throw new UnavailabilityError('Calendar', 'getAttendeesForEventAsync');\n    }\n    if (!id) {\n      throw new Error('getAttendeesForEventAsync must be called with an id (string) of the target event');\n    }\n    var params = Platform.OS === 'ios' ? {\n      id,\n      instanceStartDate\n    } : id;\n    return ExpoCalendar.getAttendeesForEventAsync(params);\n  });\n  return _getAttendeesForEventAsync.apply(this, arguments);\n}\nexport function createAttendeeAsync(_x12) {\n  return _createAttendeeAsync.apply(this, arguments);\n}\nfunction _createAttendeeAsync() {\n  _createAttendeeAsync = _asyncToGenerator(function* (eventId) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExpoCalendar.saveAttendeeForEventAsync) {\n      throw new UnavailabilityError('Calendar', 'createAttendeeAsync');\n    }\n    if (!eventId) {\n      throw new Error('createAttendeeAsync must be called with an id (string) of the target event');\n    }\n    if (!details.email) {\n      throw new Error('createAttendeeAsync requires an email (string)');\n    }\n    if (!details.role) {\n      throw new Error('createAttendeeAsync requires a role (string)');\n    }\n    if (!details.type) {\n      throw new Error('createAttendeeAsync requires a type (string)');\n    }\n    if (!details.status) {\n      throw new Error('createAttendeeAsync requires a status (string)');\n    }\n    var newDetails = _objectSpread({}, details, {\n      id: undefined\n    });\n    return ExpoCalendar.saveAttendeeForEventAsync(newDetails, eventId);\n  });\n  return _createAttendeeAsync.apply(this, arguments);\n}\nexport function updateAttendeeAsync(_x13) {\n  return _updateAttendeeAsync.apply(this, arguments);\n}\nfunction _updateAttendeeAsync() {\n  _updateAttendeeAsync = _asyncToGenerator(function* (id) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExpoCalendar.saveAttendeeForEventAsync) {\n      throw new UnavailabilityError('Calendar', 'updateAttendeeAsync');\n    }\n    if (!id) {\n      throw new Error('updateAttendeeAsync must be called with an id (string) of the target event');\n    }\n    var newDetails = _objectSpread({}, details, {\n      id\n    });\n    return ExpoCalendar.saveAttendeeForEventAsync(newDetails, null);\n  });\n  return _updateAttendeeAsync.apply(this, arguments);\n}\nexport function deleteAttendeeAsync(_x14) {\n  return _deleteAttendeeAsync.apply(this, arguments);\n}\nfunction _deleteAttendeeAsync() {\n  _deleteAttendeeAsync = _asyncToGenerator(function* (id) {\n    if (!ExpoCalendar.deleteAttendeeAsync) {\n      throw new UnavailabilityError('Calendar', 'deleteAttendeeAsync');\n    }\n    if (!id) {\n      throw new Error('deleteAttendeeAsync must be called with an id (string) of the target event');\n    }\n    return ExpoCalendar.deleteAttendeeAsync(id);\n  });\n  return _deleteAttendeeAsync.apply(this, arguments);\n}\nexport function getRemindersAsync(_x15, _x16, _x17, _x18) {\n  return _getRemindersAsync.apply(this, arguments);\n}\nfunction _getRemindersAsync() {\n  _getRemindersAsync = _asyncToGenerator(function* (calendarIds, status, startDate, endDate) {\n    if (!ExpoCalendar.getRemindersAsync) {\n      throw new UnavailabilityError('Calendar', 'getRemindersAsync');\n    }\n    if (status && !startDate) {\n      throw new Error('getRemindersAsync must be called with a startDate (date) to search for reminders');\n    }\n    if (status && !endDate) {\n      throw new Error('getRemindersAsync must be called with an endDate (date) to search for reminders');\n    }\n    if (!calendarIds || !calendarIds.length) {\n      throw new Error('getRemindersAsync must be called with a non-empty array of calendarIds to search');\n    }\n    return ExpoCalendar.getRemindersAsync(stringifyIfDate(startDate) || null, stringifyIfDate(endDate) || null, calendarIds, status || null);\n  });\n  return _getRemindersAsync.apply(this, arguments);\n}\nexport function getReminderAsync(_x19) {\n  return _getReminderAsync.apply(this, arguments);\n}\nfunction _getReminderAsync() {\n  _getReminderAsync = _asyncToGenerator(function* (id) {\n    if (!ExpoCalendar.getReminderByIdAsync) {\n      throw new UnavailabilityError('Calendar', 'getReminderAsync');\n    }\n    if (!id) {\n      throw new Error('getReminderAsync must be called with an id (string) of the target reminder');\n    }\n    return ExpoCalendar.getReminderByIdAsync(id);\n  });\n  return _getReminderAsync.apply(this, arguments);\n}\nexport function createReminderAsync(_x20) {\n  return _createReminderAsync.apply(this, arguments);\n}\nfunction _createReminderAsync() {\n  _createReminderAsync = _asyncToGenerator(function* (calendarId) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExpoCalendar.saveReminderAsync) {\n      throw new UnavailabilityError('Calendar', 'createReminderAsync');\n    }\n    if (!calendarId) {\n      throw new Error('createReminderAsync must be called with an id (string) of the target calendar');\n    }\n    var newDetails = _objectSpread({}, details, {\n      id: undefined,\n      calendarId: calendarId === DEFAULT ? undefined : calendarId\n    });\n    return ExpoCalendar.saveReminderAsync(stringifyDateValues(newDetails));\n  });\n  return _createReminderAsync.apply(this, arguments);\n}\nexport function updateReminderAsync(_x21) {\n  return _updateReminderAsync.apply(this, arguments);\n}\nfunction _updateReminderAsync() {\n  _updateReminderAsync = _asyncToGenerator(function* (id) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!ExpoCalendar.saveReminderAsync) {\n      throw new UnavailabilityError('Calendar', 'updateReminderAsync');\n    }\n    if (!id) {\n      throw new Error('updateReminderAsync must be called with an id (string) of the target reminder');\n    }\n    if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate')) {\n      console.warn('updateReminderAsync was called with one or more read-only properties, which will not be updated');\n    }\n    var newDetails = _objectSpread({}, details, {\n      id\n    });\n    return ExpoCalendar.saveReminderAsync(stringifyDateValues(newDetails));\n  });\n  return _updateReminderAsync.apply(this, arguments);\n}\nexport function deleteReminderAsync(_x22) {\n  return _deleteReminderAsync.apply(this, arguments);\n}\nfunction _deleteReminderAsync() {\n  _deleteReminderAsync = _asyncToGenerator(function* (id) {\n    if (!ExpoCalendar.deleteReminderAsync) {\n      throw new UnavailabilityError('Calendar', 'deleteReminderAsync');\n    }\n    if (!id) {\n      throw new Error('deleteReminderAsync must be called with an id (string) of the target reminder');\n    }\n    return ExpoCalendar.deleteReminderAsync(id);\n  });\n  return _deleteReminderAsync.apply(this, arguments);\n}\nexport function getSourcesAsync() {\n  return _getSourcesAsync.apply(this, arguments);\n}\nfunction _getSourcesAsync() {\n  _getSourcesAsync = _asyncToGenerator(function* () {\n    if (!ExpoCalendar.getSourcesAsync) {\n      throw new UnavailabilityError('Calendar', 'getSourcesAsync');\n    }\n    return ExpoCalendar.getSourcesAsync();\n  });\n  return _getSourcesAsync.apply(this, arguments);\n}\nexport function getSourceAsync(_x23) {\n  return _getSourceAsync.apply(this, arguments);\n}\nfunction _getSourceAsync() {\n  _getSourceAsync = _asyncToGenerator(function* (id) {\n    if (!ExpoCalendar.getSourceByIdAsync) {\n      throw new UnavailabilityError('Calendar', 'getSourceAsync');\n    }\n    if (!id) {\n      throw new Error('getSourceAsync must be called with an id (string) of the target source');\n    }\n    return ExpoCalendar.getSourceByIdAsync(id);\n  });\n  return _getSourceAsync.apply(this, arguments);\n}\nexport function openEventInCalendar(id) {\n  if (!ExpoCalendar.openEventInCalendar) {\n    console.warn(\"openEventInCalendar is not available on platform: \".concat(Platform.OS));\n    return;\n  }\n  if (!id) {\n    throw new Error('openEventInCalendar must be called with an id (string) of the target event');\n  }\n  return ExpoCalendar.openEventInCalendar(parseInt(id, 10));\n}\nexport function requestPermissionsAsync() {\n  return _requestPermissionsAsync.apply(this, arguments);\n}\nfunction _requestPermissionsAsync() {\n  _requestPermissionsAsync = _asyncToGenerator(function* () {\n    if (!ExpoCalendar.requestPermissionsAsync) {\n      throw new UnavailabilityError('Calendar', 'requestPermissionsAsync');\n    }\n    return yield ExpoCalendar.requestPermissionsAsync();\n  });\n  return _requestPermissionsAsync.apply(this, arguments);\n}\nexport function requestRemindersPermissionsAsync() {\n  return _requestRemindersPermissionsAsync.apply(this, arguments);\n}\nfunction _requestRemindersPermissionsAsync() {\n  _requestRemindersPermissionsAsync = _asyncToGenerator(function* () {\n    if (!ExpoCalendar.requestRemindersPermissionsAsync) {\n      throw new UnavailabilityError('Calendar', 'requestRemindersPermissionsAsync');\n    }\n    return yield ExpoCalendar.requestRemindersPermissionsAsync();\n  });\n  return _requestRemindersPermissionsAsync.apply(this, arguments);\n}\nexport var EntityTypes = {\n  EVENT: 'event',\n  REMINDER: 'reminder'\n};\nexport var Frequency = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  YEARLY: 'yearly'\n};\nexport var Availability = {\n  NOT_SUPPORTED: 'notSupported',\n  BUSY: 'busy',\n  FREE: 'free',\n  TENTATIVE: 'tentative',\n  UNAVAILABLE: 'unavailable'\n};\nexport var CalendarType = {\n  LOCAL: 'local',\n  CALDAV: 'caldav',\n  EXCHANGE: 'exchange',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays'\n};\nexport var EventStatus = {\n  NONE: 'none',\n  CONFIRMED: 'confirmed',\n  TENTATIVE: 'tentative',\n  CANCELED: 'canceled'\n};\nexport var SourceType = {\n  LOCAL: 'local',\n  EXCHANGE: 'exchange',\n  CALDAV: 'caldav',\n  MOBILEME: 'mobileme',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays'\n};\nexport var AttendeeRole = {\n  UNKNOWN: 'unknown',\n  REQUIRED: 'required',\n  OPTIONAL: 'optional',\n  CHAIR: 'chair',\n  NON_PARTICIPANT: 'nonParticipant',\n  ATTENDEE: 'attendee',\n  ORGANIZER: 'organizer',\n  PERFORMER: 'performer',\n  SPEAKER: 'speaker',\n  NONE: 'none'\n};\nexport var AttendeeStatus = {\n  UNKNOWN: 'unknown',\n  PENDING: 'pending',\n  ACCEPTED: 'accepted',\n  DECLINED: 'declined',\n  TENTATIVE: 'tentative',\n  DELEGATED: 'delegated',\n  COMPLETED: 'completed',\n  IN_PROCESS: 'inProcess',\n  INVITED: 'invited',\n  NONE: 'none'\n};\nexport var AttendeeType = {\n  UNKNOWN: 'unknown',\n  PERSON: 'person',\n  ROOM: 'room',\n  GROUP: 'group',\n  RESOURCE: 'resource',\n  OPTIONAL: 'optional',\n  REQUIRED: 'required',\n  NONE: 'none'\n};\nexport var AlarmMethod = {\n  ALARM: 'alarm',\n  ALERT: 'alert',\n  EMAIL: 'email',\n  SMS: 'sms',\n  DEFAULT: 'default'\n};\nexport var EventAccessLevel = {\n  CONFIDENTIAL: 'confidential',\n  PRIVATE: 'private',\n  PUBLIC: 'public',\n  DEFAULT: 'default'\n};\nexport var CalendarAccessLevel = {\n  CONTRIBUTOR: 'contributor',\n  EDITOR: 'editor',\n  FREEBUSY: 'freebusy',\n  OVERRIDE: 'override',\n  OWNER: 'owner',\n  READ: 'read',\n  RESPOND: 'respond',\n  ROOT: 'root',\n  NONE: 'none'\n};\nexport var ReminderStatus = {\n  COMPLETED: 'completed',\n  INCOMPLETE: 'incomplete'\n};\nexport var DEFAULT = 'default';\nfunction stringifyIfDate(date) {\n  return date instanceof Date ? date.toISOString() : date;\n}\nfunction stringifyDateValues(obj) {\n  return Object.keys(obj).reduce((acc, key) => {\n    acc[key] = stringifyIfDate(obj[key]);\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["UnavailabilityError","Platform","processColor","ExpoCalendar","getCalendarsAsync","_x","_getCalendarsAsync","apply","arguments","_asyncToGenerator","entityType","createCalendarAsync","_createCalendarAsync","details","length","undefined","saveCalendarAsync","color","newDetails","_objectSpread","id","updateCalendarAsync","_x2","_updateCalendarAsync","Error","OS","hasOwnProperty","console","warn","deleteCalendarAsync","_x3","_deleteCalendarAsync","getEventsAsync","_x4","_x5","_x6","_getEventsAsync","calendarIds","startDate","endDate","stringifyIfDate","getEventAsync","_x7","_getEventAsync","futureEvents","instanceStartDate","getEventByIdAsync","createEventAsync","_x8","_createEventAsync","calendarId","saveEventAsync","DEFAULT","stringifyDateValues","updateEventAsync","_x9","_updateEventAsync","deleteEventAsync","_x10","_deleteEventAsync","getAttendeesForEventAsync","_x11","_getAttendeesForEventAsync","params","createAttendeeAsync","_x12","_createAttendeeAsync","eventId","saveAttendeeForEventAsync","email","role","type","status","updateAttendeeAsync","_x13","_updateAttendeeAsync","deleteAttendeeAsync","_x14","_deleteAttendeeAsync","getRemindersAsync","_x15","_x16","_x17","_x18","_getRemindersAsync","getReminderAsync","_x19","_getReminderAsync","getReminderByIdAsync","createReminderAsync","_x20","_createReminderAsync","saveReminderAsync","updateReminderAsync","_x21","_updateReminderAsync","deleteReminderAsync","_x22","_deleteReminderAsync","getSourcesAsync","_getSourcesAsync","getSourceAsync","_x23","_getSourceAsync","getSourceByIdAsync","openEventInCalendar","concat","parseInt","requestPermissionsAsync","_requestPermissionsAsync","requestRemindersPermissionsAsync","_requestRemindersPermissionsAsync","EntityTypes","EVENT","REMINDER","Frequency","DAILY","WEEKLY","MONTHLY","YEARLY","Availability","NOT_SUPPORTED","BUSY","FREE","TENTATIVE","UNAVAILABLE","CalendarType","LOCAL","CALDAV","EXCHANGE","SUBSCRIBED","BIRTHDAYS","EventStatus","NONE","CONFIRMED","CANCELED","SourceType","MOBILEME","AttendeeRole","UNKNOWN","REQUIRED","OPTIONAL","CHAIR","NON_PARTICIPANT","ATTENDEE","ORGANIZER","PERFORMER","SPEAKER","AttendeeStatus","PENDING","ACCEPTED","DECLINED","DELEGATED","COMPLETED","IN_PROCESS","INVITED","AttendeeType","PERSON","ROOM","GROUP","RESOURCE","AlarmMethod","ALARM","ALERT","EMAIL","SMS","EventAccessLevel","CONFIDENTIAL","PRIVATE","PUBLIC","CalendarAccessLevel","CONTRIBUTOR","EDITOR","FREEBUSY","OVERRIDE","OWNER","READ","RESPOND","ROOT","ReminderStatus","INCOMPLETE","date","Date","toISOString","obj","Object","keys","reduce","acc","key"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-calendar/src/Calendar.ts"],"sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport { Platform, processColor } from 'react-native';\n\nimport ExpoCalendar from './ExpoCalendar';\n\ntype RecurringEventOptions = {\n  futureEvents?: boolean;\n  instanceStartDate?: string | Date;\n}; // iOS\n\nexport interface Calendar {\n  id?: string;\n  title?: string;\n  sourceId?: string; // iOS\n  source?: Source;\n  type?: string; // iOS\n  color?: string;\n  entityType?: string; // iOS\n  allowsModifications?: boolean;\n  allowedAvailabilities?: string[];\n  isPrimary?: boolean; // Android\n  name?: string; // Android\n  ownerAccount?: string; // Android\n  timeZone?: string; // Android\n  allowedReminders?: string[]; // Android\n  allowedAttendeeTypes?: string[]; // Android\n  isVisible?: boolean; // Android\n  isSynced?: boolean; // Android\n  accessLevel?: string; // Android\n};\n\ntype Source = {\n  id?: string; // iOS only ??\n  type?: string;\n  name?: string;\n  isLocalAccount?: boolean; // Android\n};\n\nexport type Event = {\n  id?: string;\n  calendarId?: string;\n  title?: string;\n  location?: string;\n  creationDate?: string | Date; // iOS\n  lastModifiedDate?: string | Date; // iOS\n  timeZone?: string;\n  endTimeZone?: string; // Android\n  url?: string; // iOS\n  notes?: string;\n  alarms?: Alarm[];\n  recurrenceRule?: RecurrenceRule;\n  startDate?: string | Date;\n  endDate?: string | Date;\n  originalStartDate?: string | Date; // iOS\n  isDetached?: boolean; // iOS\n  allDay?: boolean;\n  availability?: string; // Availability\n  status?: string; // Status\n  organizer?: string; // Organizer - iOS\n  organizerEmail?: string; // Android\n  accessLevel?: string; // Android,\n  guestsCanModify?: boolean; // Android,\n  guestsCanInviteOthers?: boolean; // Android\n  guestsCanSeeGuests?: boolean; // Android\n  originalId?: string; // Android\n  instanceId?: string; // Android\n};\n\nexport interface Reminder {\n  id?: string;\n  calendarId?: string;\n  title?: string;\n  location?: string;\n  creationDate?: string | Date;\n  lastModifiedDate?: string | Date;\n  timeZone?: string;\n  url?: string;\n  notes?: string;\n  alarms?: Alarm[];\n  recurrenceRule?: RecurrenceRule;\n  startDate?: string | Date;\n  dueDate?: string | Date;\n  completed?: boolean;\n  completionDate?: string | Date;\n}\n\ntype Attendee = {\n  id?: string; // Android\n  isCurrentUser?: boolean; // iOS\n  name?: string;\n  role?: string;\n  status?: string;\n  type?: string;\n  url?: string; // iOS\n  email?: string; // Android\n};\n\ntype Alarm = {\n  absoluteDate?: string; // iOS\n  relativeOffset?: string;\n  structuredLocation?: {\n    // iOS\n    title?: string;\n    proximity?: string; // Proximity\n    radius?: number;\n    coords?: {\n      latitude?: number;\n      longitude?: number;\n    };\n  };\n  method?: string; // Method, Android\n};\n\ntype RecurrenceRule = {\n  frequency: string; // Frequency\n  interval?: number;\n  endDate?: string;\n  occurrence?: number;\n};\n\nexport async function getCalendarsAsync(entityType?: string): Promise<void> {\n  if (!ExpoCalendar.getCalendarsAsync) {\n    throw new UnavailabilityError('Calendar', 'getCalendarsAsync');\n  }\n  if (!entityType) {\n    return ExpoCalendar.getCalendarsAsync(null);\n  }\n  return ExpoCalendar.getCalendarsAsync(entityType);\n}\n\nexport async function createCalendarAsync(details: Calendar = {}): Promise<string> {\n  if (!ExpoCalendar.saveCalendarAsync) {\n    throw new UnavailabilityError('Calendar', 'createCalendarAsync');\n  }\n  let color = details.color ? processColor(details.color) : undefined;\n  const newDetails = { ...details, id: undefined, color };\n  return ExpoCalendar.saveCalendarAsync(newDetails);\n}\n\nexport async function updateCalendarAsync(id: string, details: Calendar = {}): Promise<string> {\n  if (!ExpoCalendar.saveCalendarAsync) {\n    throw new UnavailabilityError('Calendar', 'updateCalendarAsync');\n  }\n  if (!id) {\n    throw new Error(\n      'updateCalendarAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  let color = details.color ? processColor(details.color) : undefined;\n\n  if (Platform.OS === 'android') {\n    if (\n      details.hasOwnProperty('source') ||\n      details.hasOwnProperty('color') ||\n      details.hasOwnProperty('allowsModifications') ||\n      details.hasOwnProperty('allowedAvailabilities') ||\n      details.hasOwnProperty('isPrimary') ||\n      details.hasOwnProperty('ownerAccount') ||\n      details.hasOwnProperty('timeZone') ||\n      details.hasOwnProperty('allowedReminders') ||\n      details.hasOwnProperty('allowedAttendeeTypes') ||\n      details.hasOwnProperty('accessLevel')\n    ) {\n      console.warn(\n        'updateCalendarAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  } else {\n    if (\n      details.hasOwnProperty('source') ||\n      details.hasOwnProperty('type') ||\n      details.hasOwnProperty('entityType') ||\n      details.hasOwnProperty('allowsModifications') ||\n      details.hasOwnProperty('allowedAvailabilities')\n    ) {\n      console.warn(\n        'updateCalendarAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  }\n\n  const newDetails = { ...details, id, color };\n  return ExpoCalendar.saveCalendarAsync(newDetails);\n}\n\nexport async function deleteCalendarAsync(id: string): Promise<void> {\n  if (!ExpoCalendar.deleteCalendarAsync) {\n    throw new UnavailabilityError('Calendar', 'deleteCalendarAsync');\n  }\n  if (!id) {\n    throw new Error(\n      'deleteCalendarAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  return ExpoCalendar.deleteCalendarAsync(id);\n}\n\nexport async function getEventsAsync(\n  calendarIds: string[],\n  startDate: Date,\n  endDate: Date\n): Promise<Event[]> {\n  if (!ExpoCalendar.getEventsAsync) {\n    throw new UnavailabilityError('Calendar', 'getEventsAsync');\n  }\n  if (!startDate) {\n    throw new Error('getEventsAsync must be called with a startDate (date) to search for events');\n  }\n  if (!endDate) {\n    throw new Error('getEventsAsync must be called with an endDate (date) to search for events');\n  }\n  if (!calendarIds || !calendarIds.length) {\n    throw new Error(\n      'getEventsAsync must be called with a non-empty array of calendarIds to search'\n    );\n  }\n  return ExpoCalendar.getEventsAsync(\n    stringifyIfDate(startDate),\n    stringifyIfDate(endDate),\n    calendarIds\n  );\n}\n\nexport async function getEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<Event> {\n  if (!ExpoCalendar.getEventByIdAsync) {\n    throw new UnavailabilityError('Calendar', 'getEventAsync');\n  }\n  if (!id) {\n    throw new Error('getEventAsync must be called with an id (string) of the target event');\n  }\n  if (Platform.OS === 'ios') {\n    return ExpoCalendar.getEventByIdAsync(id, instanceStartDate);\n  } else {\n    return ExpoCalendar.getEventByIdAsync(id);\n  }\n}\n\nexport async function createEventAsync(calendarId: string, details: Event = {}): Promise<string> {\n  if (!ExpoCalendar.saveEventAsync) {\n    throw new UnavailabilityError('Calendar', 'createEventAsync');\n  }\n  if (!calendarId) {\n    throw new Error('createEventAsync must be called with an id (string) of the target calendar');\n  }\n\n  if (Platform.OS === 'android') {\n    if (!details.startDate) {\n      throw new Error('createEventAsync requires a startDate (Date)');\n    }\n    if (!details.endDate) {\n      throw new Error('createEventAsync requires an endDate (Date)');\n    }\n  }\n\n  const newDetails = {\n    ...details,\n    id: undefined,\n    calendarId: calendarId === DEFAULT ? undefined : calendarId,\n  };\n  return ExpoCalendar.saveEventAsync(stringifyDateValues(newDetails), {});\n}\n\nexport async function updateEventAsync(\n  id: string,\n  details: Event = {},\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<string> {\n  if (!ExpoCalendar.saveEventAsync) {\n    throw new UnavailabilityError('Calendar', 'updateEventAsync');\n  }\n  if (!id) {\n    throw new Error('updateEventAsync must be called with an id (string) of the target event');\n  }\n\n  if (Platform.OS === 'ios') {\n    if (\n      details.hasOwnProperty('creationDate') ||\n      details.hasOwnProperty('lastModifiedDate') ||\n      details.hasOwnProperty('originalStartDate') ||\n      details.hasOwnProperty('isDetached') ||\n      details.hasOwnProperty('status') ||\n      details.hasOwnProperty('organizer')\n    ) {\n      console.warn(\n        'updateEventAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  }\n\n  const newDetails = { ...details, id, instanceStartDate };\n  return ExpoCalendar.saveEventAsync(stringifyDateValues(newDetails), { futureEvents });\n}\n\nexport async function deleteEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<void> {\n  if (!ExpoCalendar.deleteEventAsync) {\n    throw new UnavailabilityError('Calendar', 'deleteEventAsync');\n  }\n  if (!id) {\n    throw new Error('deleteEventAsync must be called with an id (string) of the target event');\n  }\n  return ExpoCalendar.deleteEventAsync({ id, instanceStartDate }, { futureEvents });\n}\n\nexport async function getAttendeesForEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<Attendee[]> {\n  if (!ExpoCalendar.getAttendeesForEventAsync) {\n    throw new UnavailabilityError('Calendar', 'getAttendeesForEventAsync');\n  }\n  if (!id) {\n    throw new Error(\n      'getAttendeesForEventAsync must be called with an id (string) of the target event'\n    );\n  }\n  // Android only takes an ID, iOS takes an object\n  const params = Platform.OS === 'ios' ? { id, instanceStartDate } : id;\n  return ExpoCalendar.getAttendeesForEventAsync(params);\n}\n\nexport async function createAttendeeAsync(\n  eventId: string,\n  details: Attendee = {}\n): Promise<string> {\n  if (!ExpoCalendar.saveAttendeeForEventAsync) {\n    throw new UnavailabilityError('Calendar', 'createAttendeeAsync');\n  }\n  if (!eventId) {\n    throw new Error('createAttendeeAsync must be called with an id (string) of the target event');\n  }\n  if (!details.email) {\n    throw new Error('createAttendeeAsync requires an email (string)');\n  }\n  if (!details.role) {\n    throw new Error('createAttendeeAsync requires a role (string)');\n  }\n  if (!details.type) {\n    throw new Error('createAttendeeAsync requires a type (string)');\n  }\n  if (!details.status) {\n    throw new Error('createAttendeeAsync requires a status (string)');\n  }\n  const newDetails = { ...details, id: undefined };\n  return ExpoCalendar.saveAttendeeForEventAsync(newDetails, eventId);\n} // Android\n\nexport async function updateAttendeeAsync(id: string, details: Attendee = {}): Promise<string> {\n  if (!ExpoCalendar.saveAttendeeForEventAsync) {\n    throw new UnavailabilityError('Calendar', 'updateAttendeeAsync');\n  }\n  if (!id) {\n    throw new Error('updateAttendeeAsync must be called with an id (string) of the target event');\n  }\n  const newDetails = { ...details, id };\n  return ExpoCalendar.saveAttendeeForEventAsync(newDetails, null);\n} // Android\n\nexport async function deleteAttendeeAsync(id: string): Promise<void> {\n  if (!ExpoCalendar.deleteAttendeeAsync) {\n    throw new UnavailabilityError('Calendar', 'deleteAttendeeAsync');\n  }\n  if (!id) {\n    throw new Error('deleteAttendeeAsync must be called with an id (string) of the target event');\n  }\n  return ExpoCalendar.deleteAttendeeAsync(id);\n} // Android\n\nexport async function getRemindersAsync(\n  calendarIds: string[],\n  status: string | null,\n  startDate: Date,\n  endDate: Date\n): Promise<Reminder[]> {\n  if (!ExpoCalendar.getRemindersAsync) {\n    throw new UnavailabilityError('Calendar', 'getRemindersAsync');\n  }\n  if (status && !startDate) {\n    throw new Error(\n      'getRemindersAsync must be called with a startDate (date) to search for reminders'\n    );\n  }\n  if (status && !endDate) {\n    throw new Error(\n      'getRemindersAsync must be called with an endDate (date) to search for reminders'\n    );\n  }\n  if (!calendarIds || !calendarIds.length) {\n    throw new Error(\n      'getRemindersAsync must be called with a non-empty array of calendarIds to search'\n    );\n  }\n  return ExpoCalendar.getRemindersAsync(\n    stringifyIfDate(startDate) || null,\n    stringifyIfDate(endDate) || null,\n    calendarIds,\n    status || null\n  );\n} // iOS\n\nexport async function getReminderAsync(id: string): Promise<Reminder> {\n  if (!ExpoCalendar.getReminderByIdAsync) {\n    throw new UnavailabilityError('Calendar', 'getReminderAsync');\n  }\n  if (!id) {\n    throw new Error('getReminderAsync must be called with an id (string) of the target reminder');\n  }\n  return ExpoCalendar.getReminderByIdAsync(id);\n} // iOS\n\nexport async function createReminderAsync(\n  calendarId: string,\n  details: Reminder = {}\n): Promise<string> {\n  if (!ExpoCalendar.saveReminderAsync) {\n    throw new UnavailabilityError('Calendar', 'createReminderAsync');\n  }\n  if (!calendarId) {\n    throw new Error(\n      'createReminderAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  const newDetails = {\n    ...details,\n    id: undefined,\n    calendarId: calendarId === DEFAULT ? undefined : calendarId,\n  };\n  return ExpoCalendar.saveReminderAsync(stringifyDateValues(newDetails));\n} // iOS\n\nexport async function updateReminderAsync(id: string, details: Reminder = {}): Promise<string> {\n  if (!ExpoCalendar.saveReminderAsync) {\n    throw new UnavailabilityError('Calendar', 'updateReminderAsync');\n  }\n  if (!id) {\n    throw new Error(\n      'updateReminderAsync must be called with an id (string) of the target reminder'\n    );\n  }\n\n  if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate')) {\n    console.warn(\n      'updateReminderAsync was called with one or more read-only properties, which will not be updated'\n    );\n  }\n\n  const newDetails = { ...details, id };\n  return ExpoCalendar.saveReminderAsync(stringifyDateValues(newDetails));\n} // iOS\n\nexport async function deleteReminderAsync(id: string): Promise<void> {\n  if (!ExpoCalendar.deleteReminderAsync) {\n    throw new UnavailabilityError('Calendar', 'deleteReminderAsync');\n  }\n  if (!id) {\n    throw new Error(\n      'deleteReminderAsync must be called with an id (string) of the target reminder'\n    );\n  }\n  return ExpoCalendar.deleteReminderAsync(id);\n} // iOS\n\nexport async function getSourcesAsync(): Promise<Source[]> {\n  if (!ExpoCalendar.getSourcesAsync) {\n    throw new UnavailabilityError('Calendar', 'getSourcesAsync');\n  }\n  return ExpoCalendar.getSourcesAsync();\n} // iOS\n\nexport async function getSourceAsync(id: string): Promise<Source> {\n  if (!ExpoCalendar.getSourceByIdAsync) {\n    throw new UnavailabilityError('Calendar', 'getSourceAsync');\n  }\n  if (!id) {\n    throw new Error('getSourceAsync must be called with an id (string) of the target source');\n  }\n  return ExpoCalendar.getSourceByIdAsync(id);\n} // iOS\n\nexport function openEventInCalendar(id: string): void {\n  if (!ExpoCalendar.openEventInCalendar) {\n    console.warn(`openEventInCalendar is not available on platform: ${Platform.OS}`);\n    return;\n  }\n  if (!id) {\n    throw new Error('openEventInCalendar must be called with an id (string) of the target event');\n  }\n  return ExpoCalendar.openEventInCalendar(parseInt(id, 10));\n} // Android\n\nexport async function requestPermissionsAsync(): Promise<void> {\n  if (!ExpoCalendar.requestPermissionsAsync) {\n    throw new UnavailabilityError('Calendar', 'requestPermissionsAsync');\n  }\n  return await ExpoCalendar.requestPermissionsAsync();\n}\n\nexport async function requestRemindersPermissionsAsync(): Promise<void> {\n  if (!ExpoCalendar.requestRemindersPermissionsAsync) {\n    throw new UnavailabilityError('Calendar', 'requestRemindersPermissionsAsync');\n  }\n  return await ExpoCalendar.requestRemindersPermissionsAsync();\n}\n\nexport const EntityTypes = {\n  EVENT: 'event',\n  REMINDER: 'reminder',\n};\n\nexport const Frequency = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  YEARLY: 'yearly',\n};\n\nexport const Availability = {\n  NOT_SUPPORTED: 'notSupported', // iOS\n  BUSY: 'busy',\n  FREE: 'free',\n  TENTATIVE: 'tentative',\n  UNAVAILABLE: 'unavailable', // iOS\n};\n\nexport const CalendarType = {\n  LOCAL: 'local',\n  CALDAV: 'caldav',\n  EXCHANGE: 'exchange',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays',\n}; // iOS\n\nexport const EventStatus = {\n  NONE: 'none',\n  CONFIRMED: 'confirmed',\n  TENTATIVE: 'tentative',\n  CANCELED: 'canceled',\n};\n\nexport const SourceType = {\n  LOCAL: 'local',\n  EXCHANGE: 'exchange',\n  CALDAV: 'caldav',\n  MOBILEME: 'mobileme',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays',\n};\n\nexport const AttendeeRole = {\n  UNKNOWN: 'unknown', // iOS\n  REQUIRED: 'required', // iOS\n  OPTIONAL: 'optional', // iOS\n  CHAIR: 'chair', // iOS\n  NON_PARTICIPANT: 'nonParticipant', // iOS\n  ATTENDEE: 'attendee', // Android\n  ORGANIZER: 'organizer', // Android\n  PERFORMER: 'performer', // Android\n  SPEAKER: 'speaker', // Android\n  NONE: 'none', // Android\n};\n\nexport const AttendeeStatus = {\n  UNKNOWN: 'unknown', // iOS\n  PENDING: 'pending', // iOS\n  ACCEPTED: 'accepted',\n  DECLINED: 'declined',\n  TENTATIVE: 'tentative',\n  DELEGATED: 'delegated', // iOS\n  COMPLETED: 'completed', // iOS\n  IN_PROCESS: 'inProcess', // iOS\n  INVITED: 'invited', // Android\n  NONE: 'none', // Android\n};\n\nexport const AttendeeType = {\n  UNKNOWN: 'unknown', // iOS\n  PERSON: 'person', // iOS\n  ROOM: 'room', // iOS\n  GROUP: 'group', // iOS\n  RESOURCE: 'resource',\n  OPTIONAL: 'optional', // Android\n  REQUIRED: 'required', // Android\n  NONE: 'none', // Android\n};\n\nexport const AlarmMethod = {\n  ALARM: 'alarm',\n  ALERT: 'alert',\n  EMAIL: 'email',\n  SMS: 'sms',\n  DEFAULT: 'default',\n};\n\nexport const EventAccessLevel = {\n  CONFIDENTIAL: 'confidential',\n  PRIVATE: 'private',\n  PUBLIC: 'public',\n  DEFAULT: 'default',\n};\n\nexport const CalendarAccessLevel = {\n  CONTRIBUTOR: 'contributor',\n  EDITOR: 'editor',\n  FREEBUSY: 'freebusy',\n  OVERRIDE: 'override',\n  OWNER: 'owner',\n  READ: 'read',\n  RESPOND: 'respond',\n  ROOT: 'root',\n  NONE: 'none',\n};\n\nexport const ReminderStatus = {\n  COMPLETED: 'completed',\n  INCOMPLETE: 'incomplete',\n};\n\nexport const DEFAULT = 'default';\n\nfunction stringifyIfDate(date: any): any {\n  return date instanceof Date ? date.toISOString() : date;\n}\n\nfunction stringifyDateValues(obj: object): object {\n  return Object.keys(obj).reduce((acc, key) => {\n    acc[key] = stringifyIfDate(obj[key]);\n    return acc;\n  }, {});\n}\n"],"mappings":";;;;;;;AAAA,SAASA,mBAAmB,QAAQ,kBAAkB;AAAC,OAAAC,QAAA;AAAA,OAAAC,YAAA;AAGvD,OAAOC,YAAY;AA0BlB;AA2FD,gBAAsBC,iBAAiBA,CAAAC,EAAA;EAAA,OAAAC,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAQtC,SAAAF,mBAAA;EAAAA,kBAAA,GAAAG,iBAAA,CARM,WAAiCC,UAAmB;IACzD,IAAI,CAACP,YAAY,CAACC,iBAAiB,EAAE;MACnC,MAAM,IAAIJ,mBAAmB,CAAC,UAAU,EAAE,mBAAmB,CAAC;;IAEhE,IAAI,CAACU,UAAU,EAAE;MACf,OAAOP,YAAY,CAACC,iBAAiB,CAAC,IAAI,CAAC;;IAE7C,OAAOD,YAAY,CAACC,iBAAiB,CAACM,UAAU,CAAC;EACnD,CAAC;EAAA,OAAAJ,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBG,mBAAmBA,CAAA;EAAA,OAAAC,oBAAA,CAAAL,KAAA,OAAAC,SAAA;AAAA;AAOxC,SAAAI,qBAAA;EAAAA,oBAAA,GAAAH,iBAAA,CAPM,aAAyD;IAAA,IAAtBI,OAAA,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAoB,EAAE;IAC9D,IAAI,CAACL,YAAY,CAACa,iBAAiB,EAAE;MACnC,MAAM,IAAIhB,mBAAmB,CAAC,UAAU,EAAE,qBAAqB,CAAC;;IAElE,IAAIiB,KAAK,GAAGJ,OAAO,CAACI,KAAK,GAAGf,YAAY,CAACW,OAAO,CAACI,KAAK,CAAC,GAAGF,SAAS;IACnE,IAAMG,UAAU,GAAAC,aAAA,KAAQN,OAAO;MAAEO,EAAE,EAAEL,SAAS;MAAEE;IAAK,EAAE;IACvD,OAAOd,YAAY,CAACa,iBAAiB,CAACE,UAAU,CAAC;EACnD,CAAC;EAAA,OAAAN,oBAAA,CAAAL,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBa,mBAAmBA,CAAAC,GAAA;EAAA,OAAAC,oBAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA;AA4CxC,SAAAe,qBAAA;EAAAA,oBAAA,GAAAd,iBAAA,CA5CM,WAAmCW,EAAU,EAAwB;IAAA,IAAtBP,OAAA,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAoB,EAAE;IAC1E,IAAI,CAACL,YAAY,CAACa,iBAAiB,EAAE;MACnC,MAAM,IAAIhB,mBAAmB,CAAC,UAAU,EAAE,qBAAqB,CAAC;;IAElE,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CACb,+EAA+E,CAChF;;IAEH,IAAIP,KAAK,GAAGJ,OAAO,CAACI,KAAK,GAAGf,YAAY,CAACW,OAAO,CAACI,KAAK,CAAC,GAAGF,SAAS;IAEnE,IAAId,QAAQ,CAACwB,EAAE,KAAK,SAAS,EAAE;MAC7B,IACEZ,OAAO,CAACa,cAAc,CAAC,QAAQ,CAAC,IAChCb,OAAO,CAACa,cAAc,CAAC,OAAO,CAAC,IAC/Bb,OAAO,CAACa,cAAc,CAAC,qBAAqB,CAAC,IAC7Cb,OAAO,CAACa,cAAc,CAAC,uBAAuB,CAAC,IAC/Cb,OAAO,CAACa,cAAc,CAAC,WAAW,CAAC,IACnCb,OAAO,CAACa,cAAc,CAAC,cAAc,CAAC,IACtCb,OAAO,CAACa,cAAc,CAAC,UAAU,CAAC,IAClCb,OAAO,CAACa,cAAc,CAAC,kBAAkB,CAAC,IAC1Cb,OAAO,CAACa,cAAc,CAAC,sBAAsB,CAAC,IAC9Cb,OAAO,CAACa,cAAc,CAAC,aAAa,CAAC,EACrC;QACAC,OAAO,CAACC,IAAI,CACV,iGAAiG,CAClG;;KAEJ,MAAM;MACL,IACEf,OAAO,CAACa,cAAc,CAAC,QAAQ,CAAC,IAChCb,OAAO,CAACa,cAAc,CAAC,MAAM,CAAC,IAC9Bb,OAAO,CAACa,cAAc,CAAC,YAAY,CAAC,IACpCb,OAAO,CAACa,cAAc,CAAC,qBAAqB,CAAC,IAC7Cb,OAAO,CAACa,cAAc,CAAC,uBAAuB,CAAC,EAC/C;QACAC,OAAO,CAACC,IAAI,CACV,iGAAiG,CAClG;;;IAIL,IAAMV,UAAU,GAAAC,aAAA,KAAQN,OAAO;MAAEO,EAAE;MAAEH;IAAK,EAAE;IAC5C,OAAOd,YAAY,CAACa,iBAAiB,CAACE,UAAU,CAAC;EACnD,CAAC;EAAA,OAAAK,oBAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBqB,mBAAmBA,CAAAC,GAAA;EAAA,OAAAC,oBAAA,CAAAxB,KAAA,OAAAC,SAAA;AAAA;AAUxC,SAAAuB,qBAAA;EAAAA,oBAAA,GAAAtB,iBAAA,CAVM,WAAmCW,EAAU;IAClD,IAAI,CAACjB,YAAY,CAAC0B,mBAAmB,EAAE;MACrC,MAAM,IAAI7B,mBAAmB,CAAC,UAAU,EAAE,qBAAqB,CAAC;;IAElE,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CACb,+EAA+E,CAChF;;IAEH,OAAOrB,YAAY,CAAC0B,mBAAmB,CAACT,EAAE,CAAC;EAC7C,CAAC;EAAA,OAAAW,oBAAA,CAAAxB,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBwB,cAAcA,CAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,eAAA,CAAA7B,KAAA,OAAAC,SAAA;AAAA;AAwBnC,SAAA4B,gBAAA;EAAAA,eAAA,GAAA3B,iBAAA,CAxBM,WACL4B,WAAqB,EACrBC,SAAe,EACfC,OAAa;IAEb,IAAI,CAACpC,YAAY,CAAC6B,cAAc,EAAE;MAChC,MAAM,IAAIhC,mBAAmB,CAAC,UAAU,EAAE,gBAAgB,CAAC;;IAE7D,IAAI,CAACsC,SAAS,EAAE;MACd,MAAM,IAAId,KAAK,CAAC,4EAA4E,CAAC;;IAE/F,IAAI,CAACe,OAAO,EAAE;MACZ,MAAM,IAAIf,KAAK,CAAC,2EAA2E,CAAC;;IAE9F,IAAI,CAACa,WAAW,IAAI,CAACA,WAAW,CAACvB,MAAM,EAAE;MACvC,MAAM,IAAIU,KAAK,CACb,+EAA+E,CAChF;;IAEH,OAAOrB,YAAY,CAAC6B,cAAc,CAChCQ,eAAe,CAACF,SAAS,CAAC,EAC1BE,eAAe,CAACD,OAAO,CAAC,EACxBF,WAAW,CACZ;EACH,CAAC;EAAA,OAAAD,eAAA,CAAA7B,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBiC,aAAaA,CAAAC,GAAA;EAAA,OAAAC,cAAA,CAAApC,KAAA,OAAAC,SAAA;AAAA;AAelC,SAAAmC,eAAA;EAAAA,cAAA,GAAAlC,iBAAA,CAfM,WACLW,EAAU,EAC6D;IAAA,IAAvE;MAAEwB,YAAY,GAAG,KAAK;MAAEC;IAAiB,IAAArC,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAA4B,EAAE;IAEvE,IAAI,CAACL,YAAY,CAAC2C,iBAAiB,EAAE;MACnC,MAAM,IAAI9C,mBAAmB,CAAC,UAAU,EAAE,eAAe,CAAC;;IAE5D,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CAAC,sEAAsE,CAAC;;IAEzF,IAAIvB,QAAQ,CAACwB,EAAE,KAAK,KAAK,EAAE;MACzB,OAAOtB,YAAY,CAAC2C,iBAAiB,CAAC1B,EAAE,EAAEyB,iBAAiB,CAAC;KAC7D,MAAM;MACL,OAAO1C,YAAY,CAAC2C,iBAAiB,CAAC1B,EAAE,CAAC;;EAE7C,CAAC;EAAA,OAAAuB,cAAA,CAAApC,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBuC,gBAAgBA,CAAAC,GAAA;EAAA,OAAAC,iBAAA,CAAA1C,KAAA,OAAAC,SAAA;AAAA;AAuBrC,SAAAyC,kBAAA;EAAAA,iBAAA,GAAAxC,iBAAA,CAvBM,WAAgCyC,UAAkB,EAAqB;IAAA,IAAnBrC,OAAA,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAiB,EAAE;IAC5E,IAAI,CAACL,YAAY,CAACgD,cAAc,EAAE;MAChC,MAAM,IAAInD,mBAAmB,CAAC,UAAU,EAAE,kBAAkB,CAAC;;IAE/D,IAAI,CAACkD,UAAU,EAAE;MACf,MAAM,IAAI1B,KAAK,CAAC,4EAA4E,CAAC;;IAG/F,IAAIvB,QAAQ,CAACwB,EAAE,KAAK,SAAS,EAAE;MAC7B,IAAI,CAACZ,OAAO,CAACyB,SAAS,EAAE;QACtB,MAAM,IAAId,KAAK,CAAC,8CAA8C,CAAC;;MAEjE,IAAI,CAACX,OAAO,CAAC0B,OAAO,EAAE;QACpB,MAAM,IAAIf,KAAK,CAAC,6CAA6C,CAAC;;;IAIlE,IAAMN,UAAU,GAAAC,aAAA,KACXN,OAAO;MACVO,EAAE,EAAEL,SAAS;MACbmC,UAAU,EAAEA,UAAU,KAAKE,OAAO,GAAGrC,SAAS,GAAGmC;IAAU,EAC5D;IACD,OAAO/C,YAAY,CAACgD,cAAc,CAACE,mBAAmB,CAACnC,UAAU,CAAC,EAAE,EAAE,CAAC;EACzE,CAAC;EAAA,OAAA+B,iBAAA,CAAA1C,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsB8C,gBAAgBA,CAAAC,GAAA;EAAA,OAAAC,iBAAA,CAAAjD,KAAA,OAAAC,SAAA;AAAA;AA6BrC,SAAAgD,kBAAA;EAAAA,iBAAA,GAAA/C,iBAAA,CA7BM,WACLW,EAAU,EAE6D;IAAA,IADvEP,OAAA,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAiB,EAAE;IAAA,IACnB;MAAEoC,YAAY,GAAG,KAAK;MAAEC;IAAiB,IAAArC,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAA4B,EAAE;IAEvE,IAAI,CAACL,YAAY,CAACgD,cAAc,EAAE;MAChC,MAAM,IAAInD,mBAAmB,CAAC,UAAU,EAAE,kBAAkB,CAAC;;IAE/D,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CAAC,yEAAyE,CAAC;;IAG5F,IAAIvB,QAAQ,CAACwB,EAAE,KAAK,KAAK,EAAE;MACzB,IACEZ,OAAO,CAACa,cAAc,CAAC,cAAc,CAAC,IACtCb,OAAO,CAACa,cAAc,CAAC,kBAAkB,CAAC,IAC1Cb,OAAO,CAACa,cAAc,CAAC,mBAAmB,CAAC,IAC3Cb,OAAO,CAACa,cAAc,CAAC,YAAY,CAAC,IACpCb,OAAO,CAACa,cAAc,CAAC,QAAQ,CAAC,IAChCb,OAAO,CAACa,cAAc,CAAC,WAAW,CAAC,EACnC;QACAC,OAAO,CAACC,IAAI,CACV,8FAA8F,CAC/F;;;IAIL,IAAMV,UAAU,GAAAC,aAAA,KAAQN,OAAO;MAAEO,EAAE;MAAEyB;IAAiB,EAAE;IACxD,OAAO1C,YAAY,CAACgD,cAAc,CAACE,mBAAmB,CAACnC,UAAU,CAAC,EAAE;MAAE0B;IAAY,CAAE,CAAC;EACvF,CAAC;EAAA,OAAAY,iBAAA,CAAAjD,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBiD,gBAAgBA,CAAAC,IAAA;EAAA,OAAAC,iBAAA,CAAApD,KAAA,OAAAC,SAAA;AAAA;AAWrC,SAAAmD,kBAAA;EAAAA,iBAAA,GAAAlD,iBAAA,CAXM,WACLW,EAAU,EAC6D;IAAA,IAAvE;MAAEwB,YAAY,GAAG,KAAK;MAAEC;IAAiB,IAAArC,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAA4B,EAAE;IAEvE,IAAI,CAACL,YAAY,CAACsD,gBAAgB,EAAE;MAClC,MAAM,IAAIzD,mBAAmB,CAAC,UAAU,EAAE,kBAAkB,CAAC;;IAE/D,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CAAC,yEAAyE,CAAC;;IAE5F,OAAOrB,YAAY,CAACsD,gBAAgB,CAAC;MAAErC,EAAE;MAAEyB;IAAiB,CAAE,EAAE;MAAED;IAAY,CAAE,CAAC;EACnF,CAAC;EAAA,OAAAe,iBAAA,CAAApD,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBoD,yBAAyBA,CAAAC,IAAA;EAAA,OAAAC,0BAAA,CAAAvD,KAAA,OAAAC,SAAA;AAAA;AAe9C,SAAAsD,2BAAA;EAAAA,0BAAA,GAAArD,iBAAA,CAfM,WACLW,EAAU,EAC6D;IAAA,IAAvE;MAAEwB,YAAY,GAAG,KAAK;MAAEC;IAAiB,IAAArC,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAA4B,EAAE;IAEvE,IAAI,CAACL,YAAY,CAACyD,yBAAyB,EAAE;MAC3C,MAAM,IAAI5D,mBAAmB,CAAC,UAAU,EAAE,2BAA2B,CAAC;;IAExE,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CACb,kFAAkF,CACnF;;IAGH,IAAMuC,MAAM,GAAG9D,QAAQ,CAACwB,EAAE,KAAK,KAAK,GAAG;MAAEL,EAAE;MAAEyB;IAAiB,CAAE,GAAGzB,EAAE;IACrE,OAAOjB,YAAY,CAACyD,yBAAyB,CAACG,MAAM,CAAC;EACvD,CAAC;EAAA,OAAAD,0BAAA,CAAAvD,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBwD,mBAAmBA,CAAAC,IAAA;EAAA,OAAAC,oBAAA,CAAA3D,KAAA,OAAAC,SAAA;AAAA;AAwBxC,SAAA0D,qBAAA;EAAAA,oBAAA,GAAAzD,iBAAA,CAxBM,WACL0D,OAAe,EACO;IAAA,IAAtBtD,OAAA,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAoB,EAAE;IAEtB,IAAI,CAACL,YAAY,CAACiE,yBAAyB,EAAE;MAC3C,MAAM,IAAIpE,mBAAmB,CAAC,UAAU,EAAE,qBAAqB,CAAC;;IAElE,IAAI,CAACmE,OAAO,EAAE;MACZ,MAAM,IAAI3C,KAAK,CAAC,4EAA4E,CAAC;;IAE/F,IAAI,CAACX,OAAO,CAACwD,KAAK,EAAE;MAClB,MAAM,IAAI7C,KAAK,CAAC,gDAAgD,CAAC;;IAEnE,IAAI,CAACX,OAAO,CAACyD,IAAI,EAAE;MACjB,MAAM,IAAI9C,KAAK,CAAC,8CAA8C,CAAC;;IAEjE,IAAI,CAACX,OAAO,CAAC0D,IAAI,EAAE;MACjB,MAAM,IAAI/C,KAAK,CAAC,8CAA8C,CAAC;;IAEjE,IAAI,CAACX,OAAO,CAAC2D,MAAM,EAAE;MACnB,MAAM,IAAIhD,KAAK,CAAC,gDAAgD,CAAC;;IAEnE,IAAMN,UAAU,GAAAC,aAAA,KAAQN,OAAO;MAAEO,EAAE,EAAEL;IAAS,EAAE;IAChD,OAAOZ,YAAY,CAACiE,yBAAyB,CAAClD,UAAU,EAAEiD,OAAO,CAAC;EACpE,CAAC;EAAA,OAAAD,oBAAA,CAAA3D,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBiE,mBAAmBA,CAAAC,IAAA;EAAA,OAAAC,oBAAA,CAAApE,KAAA,OAAAC,SAAA;AAAA;AASxC,SAAAmE,qBAAA;EAAAA,oBAAA,GAAAlE,iBAAA,CATM,WAAmCW,EAAU,EAAwB;IAAA,IAAtBP,OAAA,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAoB,EAAE;IAC1E,IAAI,CAACL,YAAY,CAACiE,yBAAyB,EAAE;MAC3C,MAAM,IAAIpE,mBAAmB,CAAC,UAAU,EAAE,qBAAqB,CAAC;;IAElE,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CAAC,4EAA4E,CAAC;;IAE/F,IAAMN,UAAU,GAAAC,aAAA,KAAQN,OAAO;MAAEO;IAAE,EAAE;IACrC,OAAOjB,YAAY,CAACiE,yBAAyB,CAAClD,UAAU,EAAE,IAAI,CAAC;EACjE,CAAC;EAAA,OAAAyD,oBAAA,CAAApE,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBoE,mBAAmBA,CAAAC,IAAA;EAAA,OAAAC,oBAAA,CAAAvE,KAAA,OAAAC,SAAA;AAAA;AAQxC,SAAAsE,qBAAA;EAAAA,oBAAA,GAAArE,iBAAA,CARM,WAAmCW,EAAU;IAClD,IAAI,CAACjB,YAAY,CAACyE,mBAAmB,EAAE;MACrC,MAAM,IAAI5E,mBAAmB,CAAC,UAAU,EAAE,qBAAqB,CAAC;;IAElE,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CAAC,4EAA4E,CAAC;;IAE/F,OAAOrB,YAAY,CAACyE,mBAAmB,CAACxD,EAAE,CAAC;EAC7C,CAAC;EAAA,OAAA0D,oBAAA,CAAAvE,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBuE,iBAAiBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,kBAAA,CAAA7E,KAAA,OAAAC,SAAA;AAAA;AA8BtC,SAAA4E,mBAAA;EAAAA,kBAAA,GAAA3E,iBAAA,CA9BM,WACL4B,WAAqB,EACrBmC,MAAqB,EACrBlC,SAAe,EACfC,OAAa;IAEb,IAAI,CAACpC,YAAY,CAAC4E,iBAAiB,EAAE;MACnC,MAAM,IAAI/E,mBAAmB,CAAC,UAAU,EAAE,mBAAmB,CAAC;;IAEhE,IAAIwE,MAAM,IAAI,CAAClC,SAAS,EAAE;MACxB,MAAM,IAAId,KAAK,CACb,kFAAkF,CACnF;;IAEH,IAAIgD,MAAM,IAAI,CAACjC,OAAO,EAAE;MACtB,MAAM,IAAIf,KAAK,CACb,iFAAiF,CAClF;;IAEH,IAAI,CAACa,WAAW,IAAI,CAACA,WAAW,CAACvB,MAAM,EAAE;MACvC,MAAM,IAAIU,KAAK,CACb,kFAAkF,CACnF;;IAEH,OAAOrB,YAAY,CAAC4E,iBAAiB,CACnCvC,eAAe,CAACF,SAAS,CAAC,IAAI,IAAI,EAClCE,eAAe,CAACD,OAAO,CAAC,IAAI,IAAI,EAChCF,WAAW,EACXmC,MAAM,IAAI,IAAI,CACf;EACH,CAAC;EAAA,OAAAY,kBAAA,CAAA7E,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsB6E,gBAAgBA,CAAAC,IAAA;EAAA,OAAAC,iBAAA,CAAAhF,KAAA,OAAAC,SAAA;AAAA;AAQrC,SAAA+E,kBAAA;EAAAA,iBAAA,GAAA9E,iBAAA,CARM,WAAgCW,EAAU;IAC/C,IAAI,CAACjB,YAAY,CAACqF,oBAAoB,EAAE;MACtC,MAAM,IAAIxF,mBAAmB,CAAC,UAAU,EAAE,kBAAkB,CAAC;;IAE/D,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CAAC,4EAA4E,CAAC;;IAE/F,OAAOrB,YAAY,CAACqF,oBAAoB,CAACpE,EAAE,CAAC;EAC9C,CAAC;EAAA,OAAAmE,iBAAA,CAAAhF,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBiF,mBAAmBA,CAAAC,IAAA;EAAA,OAAAC,oBAAA,CAAApF,KAAA,OAAAC,SAAA;AAAA;AAkBxC,SAAAmF,qBAAA;EAAAA,oBAAA,GAAAlF,iBAAA,CAlBM,WACLyC,UAAkB,EACI;IAAA,IAAtBrC,OAAA,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAoB,EAAE;IAEtB,IAAI,CAACL,YAAY,CAACyF,iBAAiB,EAAE;MACnC,MAAM,IAAI5F,mBAAmB,CAAC,UAAU,EAAE,qBAAqB,CAAC;;IAElE,IAAI,CAACkD,UAAU,EAAE;MACf,MAAM,IAAI1B,KAAK,CACb,+EAA+E,CAChF;;IAEH,IAAMN,UAAU,GAAAC,aAAA,KACXN,OAAO;MACVO,EAAE,EAAEL,SAAS;MACbmC,UAAU,EAAEA,UAAU,KAAKE,OAAO,GAAGrC,SAAS,GAAGmC;IAAU,EAC5D;IACD,OAAO/C,YAAY,CAACyF,iBAAiB,CAACvC,mBAAmB,CAACnC,UAAU,CAAC,CAAC;EACxE,CAAC;EAAA,OAAAyE,oBAAA,CAAApF,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBqF,mBAAmBA,CAAAC,IAAA;EAAA,OAAAC,oBAAA,CAAAxF,KAAA,OAAAC,SAAA;AAAA;AAkBxC,SAAAuF,qBAAA;EAAAA,oBAAA,GAAAtF,iBAAA,CAlBM,WAAmCW,EAAU,EAAwB;IAAA,IAAtBP,OAAA,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAoB,EAAE;IAC1E,IAAI,CAACL,YAAY,CAACyF,iBAAiB,EAAE;MACnC,MAAM,IAAI5F,mBAAmB,CAAC,UAAU,EAAE,qBAAqB,CAAC;;IAElE,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CACb,+EAA+E,CAChF;;IAGH,IAAIX,OAAO,CAACa,cAAc,CAAC,cAAc,CAAC,IAAIb,OAAO,CAACa,cAAc,CAAC,kBAAkB,CAAC,EAAE;MACxFC,OAAO,CAACC,IAAI,CACV,iGAAiG,CAClG;;IAGH,IAAMV,UAAU,GAAAC,aAAA,KAAQN,OAAO;MAAEO;IAAE,EAAE;IACrC,OAAOjB,YAAY,CAACyF,iBAAiB,CAACvC,mBAAmB,CAACnC,UAAU,CAAC,CAAC;EACxE,CAAC;EAAA,OAAA6E,oBAAA,CAAAxF,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBwF,mBAAmBA,CAAAC,IAAA;EAAA,OAAAC,oBAAA,CAAA3F,KAAA,OAAAC,SAAA;AAAA;AAUxC,SAAA0F,qBAAA;EAAAA,oBAAA,GAAAzF,iBAAA,CAVM,WAAmCW,EAAU;IAClD,IAAI,CAACjB,YAAY,CAAC6F,mBAAmB,EAAE;MACrC,MAAM,IAAIhG,mBAAmB,CAAC,UAAU,EAAE,qBAAqB,CAAC;;IAElE,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CACb,+EAA+E,CAChF;;IAEH,OAAOrB,YAAY,CAAC6F,mBAAmB,CAAC5E,EAAE,CAAC;EAC7C,CAAC;EAAA,OAAA8E,oBAAA,CAAA3F,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsB2F,eAAeA,CAAA;EAAA,OAAAC,gBAAA,CAAA7F,KAAA,OAAAC,SAAA;AAAA;AAKpC,SAAA4F,iBAAA;EAAAA,gBAAA,GAAA3F,iBAAA,CALM,aAA8B;IACnC,IAAI,CAACN,YAAY,CAACgG,eAAe,EAAE;MACjC,MAAM,IAAInG,mBAAmB,CAAC,UAAU,EAAE,iBAAiB,CAAC;;IAE9D,OAAOG,YAAY,CAACgG,eAAe,EAAE;EACvC,CAAC;EAAA,OAAAC,gBAAA,CAAA7F,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsB6F,cAAcA,CAAAC,IAAA;EAAA,OAAAC,eAAA,CAAAhG,KAAA,OAAAC,SAAA;AAAA;AAQnC,SAAA+F,gBAAA;EAAAA,eAAA,GAAA9F,iBAAA,CARM,WAA8BW,EAAU;IAC7C,IAAI,CAACjB,YAAY,CAACqG,kBAAkB,EAAE;MACpC,MAAM,IAAIxG,mBAAmB,CAAC,UAAU,EAAE,gBAAgB,CAAC;;IAE7D,IAAI,CAACoB,EAAE,EAAE;MACP,MAAM,IAAII,KAAK,CAAC,wEAAwE,CAAC;;IAE3F,OAAOrB,YAAY,CAACqG,kBAAkB,CAACpF,EAAE,CAAC;EAC5C,CAAC;EAAA,OAAAmF,eAAA,CAAAhG,KAAA,OAAAC,SAAA;AAAA;AAED,OAAM,SAAUiG,mBAAmBA,CAACrF,EAAU;EAC5C,IAAI,CAACjB,YAAY,CAACsG,mBAAmB,EAAE;IACrC9E,OAAO,CAACC,IAAI,sDAAA8E,MAAA,CAAsDzG,QAAQ,CAACwB,EAAE,CAAE,CAAC;IAChF;;EAEF,IAAI,CAACL,EAAE,EAAE;IACP,MAAM,IAAII,KAAK,CAAC,4EAA4E,CAAC;;EAE/F,OAAOrB,YAAY,CAACsG,mBAAmB,CAACE,QAAQ,CAACvF,EAAE,EAAE,EAAE,CAAC,CAAC;AAC3D;AAEA,gBAAsBwF,uBAAuBA,CAAA;EAAA,OAAAC,wBAAA,CAAAtG,KAAA,OAAAC,SAAA;AAAA;AAK5C,SAAAqG,yBAAA;EAAAA,wBAAA,GAAApG,iBAAA,CALM,aAAsC;IAC3C,IAAI,CAACN,YAAY,CAACyG,uBAAuB,EAAE;MACzC,MAAM,IAAI5G,mBAAmB,CAAC,UAAU,EAAE,yBAAyB,CAAC;;IAEtE,aAAaG,YAAY,CAACyG,uBAAuB,EAAE;EACrD,CAAC;EAAA,OAAAC,wBAAA,CAAAtG,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBsG,gCAAgCA,CAAA;EAAA,OAAAC,iCAAA,CAAAxG,KAAA,OAAAC,SAAA;AAAA;AAKrD,SAAAuG,kCAAA;EAAAA,iCAAA,GAAAtG,iBAAA,CALM,aAA+C;IACpD,IAAI,CAACN,YAAY,CAAC2G,gCAAgC,EAAE;MAClD,MAAM,IAAI9G,mBAAmB,CAAC,UAAU,EAAE,kCAAkC,CAAC;;IAE/E,aAAaG,YAAY,CAAC2G,gCAAgC,EAAE;EAC9D,CAAC;EAAA,OAAAC,iCAAA,CAAAxG,KAAA,OAAAC,SAAA;AAAA;AAED,OAAO,IAAMwG,WAAW,GAAG;EACzBC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE;CACX;AAED,OAAO,IAAMC,SAAS,GAAG;EACvBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE;CACT;AAED,OAAO,IAAMC,YAAY,GAAG;EAC1BC,aAAa,EAAE,cAAc;EAC7BC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAE,WAAW;EACtBC,WAAW,EAAE;CACd;AAED,OAAO,IAAMC,YAAY,GAAG;EAC1BC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE,YAAY;EACxBC,SAAS,EAAE;CACZ;AAED,OAAO,IAAMC,WAAW,GAAG;EACzBC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAE,WAAW;EACtBV,SAAS,EAAE,WAAW;EACtBW,QAAQ,EAAE;CACX;AAED,OAAO,IAAMC,UAAU,GAAG;EACxBT,KAAK,EAAE,OAAO;EACdE,QAAQ,EAAE,UAAU;EACpBD,MAAM,EAAE,QAAQ;EAChBS,QAAQ,EAAE,UAAU;EACpBP,UAAU,EAAE,YAAY;EACxBC,SAAS,EAAE;CACZ;AAED,OAAO,IAAMO,YAAY,GAAG;EAC1BC,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,KAAK,EAAE,OAAO;EACdC,eAAe,EAAE,gBAAgB;EACjCC,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE,WAAW;EACtBC,SAAS,EAAE,WAAW;EACtBC,OAAO,EAAE,SAAS;EAClBd,IAAI,EAAE;CACP;AAED,OAAO,IAAMe,cAAc,GAAG;EAC5BT,OAAO,EAAE,SAAS;EAClBU,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpB3B,SAAS,EAAE,WAAW;EACtB4B,SAAS,EAAE,WAAW;EACtBC,SAAS,EAAE,WAAW;EACtBC,UAAU,EAAE,WAAW;EACvBC,OAAO,EAAE,SAAS;EAClBtB,IAAI,EAAE;CACP;AAED,OAAO,IAAMuB,YAAY,GAAG;EAC1BjB,OAAO,EAAE,SAAS;EAClBkB,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE,UAAU;EACpBnB,QAAQ,EAAE,UAAU;EACpBD,QAAQ,EAAE,UAAU;EACpBP,IAAI,EAAE;CACP;AAED,OAAO,IAAM4B,WAAW,GAAG;EACzBC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,KAAK;EACVjH,OAAO,EAAE;CACV;AAED,OAAO,IAAMkH,gBAAgB,GAAG;EAC9BC,YAAY,EAAE,cAAc;EAC5BC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBrH,OAAO,EAAE;CACV;AAED,OAAO,IAAMsH,mBAAmB,GAAG;EACjCC,WAAW,EAAE,aAAa;EAC1BC,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE,SAAS;EAClBC,IAAI,EAAE,MAAM;EACZ7C,IAAI,EAAE;CACP;AAED,OAAO,IAAM8C,cAAc,GAAG;EAC5B1B,SAAS,EAAE,WAAW;EACtB2B,UAAU,EAAE;CACb;AAED,OAAO,IAAMhI,OAAO,GAAG,SAAS;AAEhC,SAASZ,eAAeA,CAAC6I,IAAS;EAChC,OAAOA,IAAI,YAAYC,IAAI,GAAGD,IAAI,CAACE,WAAW,EAAE,GAAGF,IAAI;AACzD;AAEA,SAAShI,mBAAmBA,CAACmI,GAAW;EACtC,OAAOC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAI;IAC1CD,GAAG,CAACC,GAAG,CAAC,GAAGrJ,eAAe,CAACgJ,GAAG,CAACK,GAAG,CAAC,CAAC;IACpC,OAAOD,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}