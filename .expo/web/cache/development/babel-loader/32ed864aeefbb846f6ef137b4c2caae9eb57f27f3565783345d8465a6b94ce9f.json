{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport { SyntheticPlatformEmitter } from '@unimodules/core';\nimport { isSensorEnabledAsync } from \"./utils/isSensorEnabledAsync.web\";\nvar eventName = 'devicemotion';\nexport default {\n  get name() {\n    return 'ExponentGyroscope';\n  },\n  isAvailableAsync() {\n    return _asyncToGenerator(function* () {\n      if (typeof DeviceMotionEvent === 'undefined') {\n        return false;\n      }\n      return yield isSensorEnabledAsync(eventName);\n    })();\n  },\n  _handleMotion(_ref) {\n    var {\n      accelerationIncludingGravity\n    } = _ref;\n    SyntheticPlatformEmitter.emit('gyroscopeDidUpdate', {\n      x: accelerationIncludingGravity.x,\n      y: accelerationIncludingGravity.y,\n      z: accelerationIncludingGravity.z\n    });\n  },\n  startObserving() {\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  }\n};","map":{"version":3,"names":["SyntheticPlatformEmitter","isSensorEnabledAsync","eventName","name","isAvailableAsync","_asyncToGenerator","DeviceMotionEvent","_handleMotion","_ref","accelerationIncludingGravity","emit","x","y","z","startObserving","window","addEventListener","stopObserving","removeEventListener"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-sensors/src/ExponentGyroscope.web.ts"],"sourcesContent":["import { SyntheticPlatformEmitter } from '@unimodules/core';\n\nimport { isSensorEnabledAsync } from './utils/isSensorEnabledAsync.web';\n\nconst eventName = 'devicemotion';\n\nexport default {\n  get name(): string {\n    return 'ExponentGyroscope';\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    if (typeof DeviceMotionEvent === 'undefined') {\n      return false;\n    }\n    return await isSensorEnabledAsync(eventName);\n  },\n  _handleMotion({ accelerationIncludingGravity }) {\n    SyntheticPlatformEmitter.emit('gyroscopeDidUpdate', {\n      x: accelerationIncludingGravity.x,\n      y: accelerationIncludingGravity.y,\n      z: accelerationIncludingGravity.z,\n    });\n  },\n  startObserving() {\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  },\n};\n"],"mappings":";;AAAA,SAASA,wBAAwB,QAAQ,kBAAkB;AAE3D,SAASC,oBAAoB;AAE7B,IAAMC,SAAS,GAAG,cAAc;AAEhC,eAAe;EACb,IAAIC,IAAIA,CAAA;IACN,OAAO,mBAAmB;EAC5B,CAAC;EACKC,gBAAgBA,CAAA;IAAA,OAAAC,iBAAA;MACpB,IAAI,OAAOC,iBAAiB,KAAK,WAAW,EAAE;QAC5C,OAAO,KAAK;;MAEd,aAAaL,oBAAoB,CAACC,SAAS,CAAC;IAAC;EAC/C,CAAC;EACDK,aAAaA,CAAAC,IAAA,EAAiC;IAAA,IAAhC;MAAEC;IAA4B,CAAE,GAAAD,IAAA;IAC5CR,wBAAwB,CAACU,IAAI,CAAC,oBAAoB,EAAE;MAClDC,CAAC,EAAEF,4BAA4B,CAACE,CAAC;MACjCC,CAAC,EAAEH,4BAA4B,CAACG,CAAC;MACjCC,CAAC,EAAEJ,4BAA4B,CAACI;KACjC,CAAC;EACJ,CAAC;EACDC,cAAcA,CAAA;IACZC,MAAM,CAACC,gBAAgB,CAACd,SAAS,EAAE,IAAI,CAACK,aAAa,CAAC;EACxD,CAAC;EACDU,aAAaA,CAAA;IACXF,MAAM,CAACG,mBAAmB,CAAChB,SAAS,EAAE,IAAI,CAACK,aAAa,CAAC;EAC3D;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}