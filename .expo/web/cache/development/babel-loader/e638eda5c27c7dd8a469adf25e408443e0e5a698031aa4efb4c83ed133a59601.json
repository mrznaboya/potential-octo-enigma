{"ast":null,"code":"import Constants from 'expo-constants';\nimport * as FileSystem from 'expo-file-system';\nvar bundledAssets = new Set(FileSystem.bundledAssets || []);\nexport function getEmbeddedAssetUri(hash, type) {\n  var assetName = \"asset_\".concat(hash).concat(type ? \".\".concat(type) : '');\n  if (__DEV__ || Constants.appOwnership !== 'standalone' || !bundledAssets.has(assetName)) {\n    return null;\n  }\n  return \"\".concat(FileSystem.bundleDirectory).concat(assetName);\n}","map":{"version":3,"names":["Constants","FileSystem","bundledAssets","Set","getEmbeddedAssetUri","hash","type","assetName","concat","__DEV__","appOwnership","has","bundleDirectory"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-asset/src/EmbeddedAssets.ts"],"sourcesContent":["import Constants from 'expo-constants';\nimport * as FileSystem from 'expo-file-system';\n\n// Fast lookup check if assets are available in the local bundle\nconst bundledAssets = new Set(FileSystem.bundledAssets || []);\n\n/**\n * Returns the local URI of an embedded asset from its hash and type, or null if the asset is not\n * included in the app bundle.\n */\nexport function getEmbeddedAssetUri(hash: string, type: string | null): string | null {\n  const assetName = `asset_${hash}${type ? `.${type}` : ''}`;\n  if (__DEV__ || Constants.appOwnership !== 'standalone' || !bundledAssets.has(assetName)) {\n    return null;\n  }\n  return `${FileSystem.bundleDirectory}${assetName}`;\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,gBAAgB;AACtC,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAG9C,IAAMC,aAAa,GAAG,IAAIC,GAAG,CAACF,UAAU,CAACC,aAAa,IAAI,EAAE,CAAC;AAM7D,OAAM,SAAUE,mBAAmBA,CAACC,IAAY,EAAEC,IAAmB;EACnE,IAAMC,SAAS,YAAAC,MAAA,CAAYH,IAAI,EAAAG,MAAA,CAAGF,IAAI,OAAAE,MAAA,CAAOF,IAAI,IAAK,EAAE,CAAE;EAC1D,IAAIG,OAAO,IAAIT,SAAS,CAACU,YAAY,KAAK,YAAY,IAAI,CAACR,aAAa,CAACS,GAAG,CAACJ,SAAS,CAAC,EAAE;IACvF,OAAO,IAAI;;EAEb,UAAAC,MAAA,CAAUP,UAAU,CAACW,eAAe,EAAAJ,MAAA,CAAGD,SAAS;AAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}