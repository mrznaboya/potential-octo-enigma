{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport Constants from 'expo-constants';\nimport qs from 'qs';\nimport Linking from \"./LinkingModule\";\nvar {\n  manifest\n} = Constants;\nvar USES_CUSTOM_SCHEME = Constants.appOwnership === 'standalone' && manifest.scheme;\nvar HOST_URI = manifest.hostUri;\nif (!HOST_URI && !USES_CUSTOM_SCHEME) {\n  HOST_URI = _removeScheme(Constants.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n}\nvar IS_EXPO_HOSTED = HOST_URI && (/^(.*\\.)?(expo\\.io|exp\\.host|exp\\.direct|expo\\.test)(:.*)?(\\/.*)?$/.test(HOST_URI) || manifest.developer);\nfunction _removeScheme(url) {\n  return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n}\nfunction _removePort(url) {\n  return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n}\nfunction _removeLeadingSlash(url) {\n  return url.replace(/^\\//, '');\n}\nfunction _removeTrailingSlash(url) {\n  return url.replace(/\\/$/, '');\n}\nfunction _removeTrailingSlashAndQueryString(url) {\n  return url.replace(/\\/?\\?.*$/, '');\n}\nfunction makeUrl() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var scheme = 'exp';\n  if (Constants.appOwnership === 'standalone') {\n    scheme = manifest.scheme || manifest.detach && manifest.detach.scheme;\n  }\n  if (!scheme) {\n    throw new Error('Cannot make a deep link into a standalone app with no custom scheme defined');\n  }\n  var hostUri = HOST_URI || '';\n  if (USES_CUSTOM_SCHEME && IS_EXPO_HOSTED) {\n    hostUri = '';\n  }\n  if (path) {\n    if (IS_EXPO_HOSTED && hostUri) {\n      path = \"/--/\".concat(_removeLeadingSlash(path));\n    }\n    if (!path.startsWith('/') && hostUri) {\n      path = \"/\".concat(path);\n    } else if (path.startsWith('/') && !hostUri) {\n      path = path.substr(1);\n    }\n  } else {\n    path = '';\n  }\n  var queryString = '';\n  var queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    hostUri = queryStringMatchResult[1];\n    queryString = queryStringMatchResult[2];\n    var paramsFromHostUri = {};\n    try {\n      var parsedParams = qs.parse(queryString);\n      if (typeof parsedParams === 'object') {\n        paramsFromHostUri = parsedParams;\n      }\n    } catch (e) {}\n    queryParams = _objectSpread({}, queryParams, {}, paramsFromHostUri);\n  }\n  queryString = qs.stringify(queryParams);\n  if (queryString) {\n    queryString = \"?\".concat(queryString);\n  }\n  hostUri = _removeTrailingSlash(hostUri);\n  return encodeURI(\"\".concat(scheme, \"://\").concat(hostUri).concat(path).concat(queryString));\n}\nfunction parse(url) {\n  if (!url) {\n    throw new Error('parse cannot be called with a null value');\n  }\n  var decodedUrl = _removePort(decodeURI(url));\n  var path;\n  var queryParams = {};\n  var queryStringMatchResult = decodedUrl.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    decodedUrl = queryStringMatchResult[1];\n    queryParams = qs.parse(queryStringMatchResult[2]);\n  }\n  var hostUri = HOST_URI || '';\n  var hostUriStripped = _removePort(_removeTrailingSlashAndQueryString(hostUri));\n  if (hostUriStripped && decodedUrl.indexOf(hostUriStripped) > -1) {\n    path = decodedUrl.substr(decodedUrl.indexOf(hostUriStripped) + hostUriStripped.length);\n  } else {\n    path = _removeScheme(decodedUrl);\n  }\n  path = _removeLeadingSlash(path);\n  if (IS_EXPO_HOSTED && !USES_CUSTOM_SCHEME && path.startsWith('--/')) {\n    path = path.substr(3);\n  } else if (path.indexOf('+') > -1) {\n    path = path.substr(path.indexOf('+') + 1);\n  }\n  return {\n    path,\n    queryParams\n  };\n}\nfunction parseInitialURLAsync() {\n  return _parseInitialURLAsync.apply(this, arguments);\n}\nfunction _parseInitialURLAsync() {\n  _parseInitialURLAsync = _asyncToGenerator(function* () {\n    var initialUrl = yield Linking.getInitialURL();\n    if (!initialUrl) {\n      return {\n        path: null,\n        queryParams: null\n      };\n    }\n    return parse(initialUrl);\n  });\n  return _parseInitialURLAsync.apply(this, arguments);\n}\nvar newLinking = new Linking.constructor();\nnewLinking.makeUrl = makeUrl;\nnewLinking.parse = parse;\nnewLinking.parseInitialURLAsync = parseInitialURLAsync;\nexport default newLinking;","map":{"version":3,"names":["Constants","qs","Linking","manifest","USES_CUSTOM_SCHEME","appOwnership","scheme","HOST_URI","hostUri","_removeScheme","linkingUri","replace","IS_EXPO_HOSTED","test","developer","url","_removePort","_removeLeadingSlash","_removeTrailingSlash","_removeTrailingSlashAndQueryString","makeUrl","path","arguments","length","undefined","queryParams","detach","Error","concat","startsWith","substr","queryString","queryStringMatchResult","match","paramsFromHostUri","parsedParams","parse","e","_objectSpread","stringify","encodeURI","decodedUrl","decodeURI","hostUriStripped","indexOf","parseInitialURLAsync","_parseInitialURLAsync","apply","_asyncToGenerator","initialUrl","getInitialURL","newLinking","constructor"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo/src/Linking/Linking.ts"],"sourcesContent":["import Constants from 'expo-constants';\nimport qs from 'qs';\n\nimport { ParsedURL } from './Linking.types';\nimport Linking from './LinkingModule';\n\nconst { manifest } = Constants;\n\nconst USES_CUSTOM_SCHEME = Constants.appOwnership === 'standalone' && manifest.scheme;\n\nlet HOST_URI = manifest.hostUri;\nif (!HOST_URI && !USES_CUSTOM_SCHEME) {\n  // we're probably not using up-to-date xdl, so just fake it for now\n  // we have to remove the /--/ on the end since this will be inserted again later\n  HOST_URI = _removeScheme(Constants.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n}\nconst IS_EXPO_HOSTED =\n  HOST_URI &&\n  (/^(.*\\.)?(expo\\.io|exp\\.host|exp\\.direct|expo\\.test)(:.*)?(\\/.*)?$/.test(HOST_URI) ||\n    manifest.developer);\n\nfunction _removeScheme(url) {\n  return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n}\n\nfunction _removePort(url) {\n  return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n}\n\nfunction _removeLeadingSlash(url) {\n  return url.replace(/^\\//, '');\n}\n\nfunction _removeTrailingSlash(url) {\n  return url.replace(/\\/$/, '');\n}\n\nfunction _removeTrailingSlashAndQueryString(url) {\n  return url.replace(/\\/?\\?.*$/, '');\n}\n\nfunction makeUrl(path: string = '', queryParams: Object = {}): string {\n  let scheme = 'exp';\n  if (Constants.appOwnership === 'standalone') {\n    scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  }\n  if (!scheme) {\n    throw new Error('Cannot make a deep link into a standalone app with no custom scheme defined');\n  }\n\n  let hostUri = HOST_URI || '';\n  if (USES_CUSTOM_SCHEME && IS_EXPO_HOSTED) {\n    hostUri = '';\n  }\n\n  if (path) {\n    if (IS_EXPO_HOSTED && hostUri) {\n      path = `/--/${_removeLeadingSlash(path)}`;\n    }\n\n    if (!path.startsWith('/') && hostUri) {\n      path = `/${path}`;\n    } else if (path.startsWith('/') && !hostUri) {\n      path = path.substr(1);\n    }\n  } else {\n    path = '';\n  }\n\n  // merge user-provided query params with any that were already in the hostUri\n  // e.g. release-channel\n  let queryString = '';\n  let queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    hostUri = queryStringMatchResult[1];\n    queryString = queryStringMatchResult[2];\n    let paramsFromHostUri = {};\n    try {\n      let parsedParams = qs.parse(queryString);\n      if (typeof parsedParams === 'object') {\n        paramsFromHostUri = parsedParams;\n      }\n    } catch (e) {}\n    queryParams = {\n      ...queryParams,\n      ...paramsFromHostUri,\n    };\n  }\n  queryString = qs.stringify(queryParams);\n  if (queryString) {\n    queryString = `?${queryString}`;\n  }\n\n  hostUri = _removeTrailingSlash(hostUri);\n\n  return encodeURI(`${scheme}://${hostUri}${path}${queryString}`);\n}\n\nfunction parse(url: string): ParsedURL {\n  if (!url) {\n    throw new Error('parse cannot be called with a null value');\n  }\n  // iOS client sometimes strips out the port from the initial URL\n  // even when it's included in the hostUri.\n  // This function should be able to handle both cases, so we strip off the port\n  // both here and from the hostUri.\n  let decodedUrl = _removePort(decodeURI(url));\n  let path: string;\n  let queryParams = {};\n\n  let queryStringMatchResult = decodedUrl.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    decodedUrl = queryStringMatchResult[1];\n    queryParams = qs.parse(queryStringMatchResult[2]);\n  }\n\n  // strip off the hostUri from the host and path\n  let hostUri = HOST_URI || '';\n  let hostUriStripped = _removePort(_removeTrailingSlashAndQueryString(hostUri));\n  if (hostUriStripped && decodedUrl.indexOf(hostUriStripped) > -1) {\n    path = decodedUrl.substr(decodedUrl.indexOf(hostUriStripped) + hostUriStripped.length);\n  } else {\n    path = _removeScheme(decodedUrl);\n  }\n\n  path = _removeLeadingSlash(path);\n\n  if (IS_EXPO_HOSTED && !USES_CUSTOM_SCHEME && path.startsWith('--/')) {\n    path = path.substr(3);\n  } else if (path.indexOf('+') > -1) {\n    path = path.substr(path.indexOf('+') + 1);\n  }\n\n  return { path, queryParams };\n}\n\nasync function parseInitialURLAsync(): Promise<ParsedURL> {\n  const initialUrl = await Linking.getInitialURL();\n  if (!initialUrl) {\n    return {\n      path: null,\n      queryParams: null,\n    };\n  }\n\n  return parse(initialUrl);\n}\n\n// @ts-ignore fix this...\nlet newLinking = new Linking.constructor();\n\nnewLinking.makeUrl = makeUrl;\nnewLinking.parse = parse;\nnewLinking.parseInitialURLAsync = parseInitialURLAsync;\n\nexport default newLinking;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}