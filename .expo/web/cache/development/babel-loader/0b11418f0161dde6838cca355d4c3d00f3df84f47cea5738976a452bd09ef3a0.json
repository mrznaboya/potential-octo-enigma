{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/brentvatne/coding/react-navigation-stack/src/views/StackView/createPointerEventsContainer.tsx\";\nimport * as React from 'react';\nvar MIN_POSITION_OFFSET = 0.01;\nexport default function createPointerEventsContainer(Component) {\n  var Container = function (_React$Component) {\n    _inherits(Container, _React$Component);\n    function Container() {\n      var _getPrototypeOf2;\n      var _this;\n      _classCallCheck(this, Container);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Container)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.pointerEvents = _this.computePointerEvents();\n      _this.component = null;\n      _this.handleComponentRef = function (component) {\n        _this.component = component;\n        if (component && typeof component.setNativeProps !== 'function') {\n          throw new Error('Component must implement method `setNativeProps`');\n        }\n      };\n      _this.handlePositionChange = function () {\n        if (_this.component) {\n          var pointerEvents = _this.computePointerEvents();\n          if (_this.pointerEvents !== pointerEvents) {\n            _this.pointerEvents = pointerEvents;\n            _this.component.setNativeProps({\n              pointerEvents: pointerEvents\n            });\n          }\n        }\n      };\n      return _this;\n    }\n    _createClass(Container, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.positionListener && this.positionListener.remove();\n      }\n    }, {\n      key: \"bindPosition\",\n      value: function bindPosition() {\n        this.positionListener && this.positionListener.remove();\n        this.positionListener = new AnimatedValueSubscription(this.props.realPosition, this.handlePositionChange);\n      }\n    }, {\n      key: \"computePointerEvents\",\n      value: function computePointerEvents() {\n        var _this$props = this.props,\n          navigation = _this$props.navigation,\n          realPosition = _this$props.realPosition,\n          scene = _this$props.scene;\n        if (scene.isStale || navigation.state.index !== scene.index) {\n          return scene.index > navigation.state.index ? 'box-only' : 'none';\n        }\n        var offset = realPosition.__getAnimatedValue() - navigation.state.index;\n        if (Math.abs(offset) > MIN_POSITION_OFFSET) {\n          return 'box-only';\n        }\n        return 'auto';\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        this.bindPosition();\n        this.pointerEvents = this.computePointerEvents();\n        return React.createElement(Component, _extends({}, this.props, {\n          pointerEvents: this.pointerEvents,\n          onComponentRef: this.handleComponentRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          }\n        }));\n      }\n    }]);\n    return Container;\n  }(React.Component);\n  return Container;\n}\nvar AnimatedValueSubscription = function () {\n  function AnimatedValueSubscription(value, callback) {\n    _classCallCheck(this, AnimatedValueSubscription);\n    this.value = value;\n    this.token = value.addListener(callback);\n  }\n  _createClass(AnimatedValueSubscription, [{\n    key: \"remove\",\n    value: function remove() {\n      this.value.removeListener(this.token);\n    }\n  }]);\n  return AnimatedValueSubscription;\n}();","map":{"version":3,"names":["React","MIN_POSITION_OFFSET","createPointerEventsContainer","Component","Container","_React$Component","_inherits","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","pointerEvents","computePointerEvents","component","handleComponentRef","setNativeProps","Error","handlePositionChange","_createClass","key","value","componentWillUnmount","positionListener","remove","bindPosition","AnimatedValueSubscription","props","realPosition","_this$props","navigation","scene","isStale","state","index","offset","__getAnimatedValue","Math","abs","render","createElement","_extends","onComponentRef","__source","fileName","_jsxFileName","lineNumber","callback","token","addListener","removeListener"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-stack/lib/module/views/StackView/createPointerEventsContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View } from 'react-native';\nimport { NavigationProp, Scene } from '../../types';\n\nconst MIN_POSITION_OFFSET = 0.01;\n\nexport type PointerEvents = 'box-only' | 'none' | 'auto';\n\nexport type InputProps = {\n  scene: Scene;\n  navigation: NavigationProp;\n  realPosition: Animated.Value;\n};\n\nexport type InjectedProps = {\n  pointerEvents: PointerEvents;\n  onComponentRef: (ref: View | null) => void;\n};\n\n/**\n * Create a higher-order component that automatically computes the\n * `pointerEvents` property for a component whenever navigation position\n * changes.\n */\nexport default function createPointerEventsContainer<\n  Props extends InjectedProps & InputProps\n>(\n  Component: React.ComponentType<Props>\n): React.ComponentType<Pick<Props, Exclude<keyof Props, keyof InjectedProps>>> {\n  class Container extends React.Component<Props> {\n    private pointerEvents = this.computePointerEvents();\n    private component: View | null = null;\n    private positionListener: AnimatedValueSubscription | undefined;\n\n    componentWillUnmount() {\n      this.positionListener && this.positionListener.remove();\n    }\n\n    private handleComponentRef = (component: View | null) => {\n      this.component = component;\n\n      if (component && typeof component.setNativeProps !== 'function') {\n        throw new Error('Component must implement method `setNativeProps`');\n      }\n    };\n\n    private bindPosition() {\n      this.positionListener && this.positionListener.remove();\n      this.positionListener = new AnimatedValueSubscription(\n        this.props.realPosition,\n        this.handlePositionChange\n      );\n    }\n\n    private handlePositionChange = (/* { value } */) => {\n      // This should log each frame when releasing the gesture or when pressing\n      // the back button! If not, something has gone wrong with the animated\n      // value subscription\n      // console.log(value);\n\n      if (this.component) {\n        const pointerEvents = this.computePointerEvents();\n        if (this.pointerEvents !== pointerEvents) {\n          this.pointerEvents = pointerEvents;\n          this.component.setNativeProps({ pointerEvents });\n        }\n      }\n    };\n\n    private computePointerEvents() {\n      const { navigation, realPosition, scene } = this.props;\n\n      if (scene.isStale || navigation.state.index !== scene.index) {\n        // The scene isn't focused.\n        return scene.index > navigation.state.index ? 'box-only' : 'none';\n      }\n\n      // @ts-ignore\n      const offset = realPosition.__getAnimatedValue() - navigation.state.index;\n      if (Math.abs(offset) > MIN_POSITION_OFFSET) {\n        // The positon is still away from scene's index.\n        // Scene's children should not receive touches until the position\n        // is close enough to scene's index.\n        return 'box-only';\n      }\n\n      return 'auto';\n    }\n\n    render() {\n      this.bindPosition();\n      this.pointerEvents = this.computePointerEvents();\n\n      return (\n        <Component\n          {...this.props}\n          pointerEvents={this.pointerEvents}\n          onComponentRef={this.handleComponentRef}\n        />\n      );\n    }\n  }\n\n  return Container as any;\n}\n\nclass AnimatedValueSubscription {\n  private value: Animated.Value;\n  private token: string;\n\n  constructor(value: Animated.Value, callback: Animated.ValueListenerCallback) {\n    this.value = value;\n    this.token = value.addListener(callback);\n  }\n\n  remove() {\n    this.value.removeListener(this.token);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}