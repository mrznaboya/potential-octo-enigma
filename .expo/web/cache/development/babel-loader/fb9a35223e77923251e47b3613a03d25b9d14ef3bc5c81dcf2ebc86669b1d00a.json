{"ast":null,"code":"var _jsxFileName = \"/Users/zuyax/Developer/rn-starter/node_modules/@react-navigation/native/dist/ResourceSavingSceneView.js\";\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SceneView } from '@react-navigation/core';\nvar FAR_FAR_AWAY = 3000;\nclass ResourceSavingSceneView extends React.PureComponent {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isFocused && !prevState.awake) {\n      return {\n        awake: true\n      };\n    } else {\n      return null;\n    }\n  }\n  constructor(props) {\n    super();\n    this._mustAlwaysBeVisible = () => {\n      return this.props.animationEnabled || this.props.swipeEnabled;\n    };\n    this.state = {\n      awake: props.lazy ? props.isFocused : true\n    };\n  }\n  render() {\n    var {\n      awake\n    } = this.state;\n    var _this$props = this.props,\n      {\n        isFocused,\n        childNavigation,\n        removeClippedSubviews\n      } = _this$props,\n      rest = _objectWithoutProperties(_this$props, [\"isFocused\", \"childNavigation\", \"removeClippedSubviews\"]);\n    return React.createElement(View, {\n      style: styles.container,\n      collapsable: false,\n      removeClippedSubviews: Platform.OS === 'android' ? removeClippedSubviews : !isFocused && removeClippedSubviews,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      }\n    }, React.createElement(View, {\n      style: this._mustAlwaysBeVisible() || isFocused ? styles.innerAttached : styles.innerDetached,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      }\n    }, awake ? React.createElement(SceneView, _extends({}, rest, {\n      navigation: childNavigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      }\n    })) : null));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  innerAttached: {\n    flex: 1\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});\nexport default ResourceSavingSceneView;","map":{"version":3,"names":["React","Platform","StyleSheet","View","SceneView","FAR_FAR_AWAY","ResourceSavingSceneView","PureComponent","getDerivedStateFromProps","nextProps","prevState","isFocused","awake","constructor","props","_mustAlwaysBeVisible","animationEnabled","swipeEnabled","state","lazy","render","_this$props","childNavigation","removeClippedSubviews","rest","_objectWithoutProperties","createElement","style","styles","container","collapsable","OS","__source","fileName","_jsxFileName","lineNumber","innerAttached","innerDetached","_extends","navigation","create","flex","overflow","top"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/@react-navigation/native/dist/ResourceSavingSceneView.js"],"sourcesContent":["import React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { SceneView } from '@react-navigation/core';\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nclass ResourceSavingSceneView extends React.PureComponent {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isFocused && !prevState.awake) {\n      return { awake: true };\n    } else {\n      return null;\n    }\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      awake: props.lazy ? props.isFocused : true\n    };\n  }\n\n  render() {\n    const { awake } = this.state;\n    const {\n      isFocused,\n      childNavigation,\n      removeClippedSubviews,\n      ...rest\n    } = this.props;\n\n    return <View style={styles.container} collapsable={false} removeClippedSubviews={Platform.OS === 'android' ? removeClippedSubviews : !isFocused && removeClippedSubviews}>\n        <View style={this._mustAlwaysBeVisible() || isFocused ? styles.innerAttached : styles.innerDetached}>\n          {awake ? <SceneView {...rest} navigation={childNavigation} /> : null}\n        </View>\n      </View>;\n  }\n\n  _mustAlwaysBeVisible = () => {\n    return this.props.animationEnabled || this.props.swipeEnabled;\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  innerAttached: {\n    flex: 1\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});\n\nexport default ResourceSavingSceneView;"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,SAAS,QAAQ,wBAAwB;AAElD,IAAMC,YAAY,GAAG,IAAI;AAEzB,MAAMC,uBAAuB,SAASN,KAAK,CAACO,aAAa,CAAC;EACxD,OAAOC,wBAAwBA,CAACC,SAAS,EAAEC,SAAS,EAAE;IACpD,IAAID,SAAS,CAACE,SAAS,IAAI,CAACD,SAAS,CAACE,KAAK,EAAE;MAC3C,OAAO;QAAEA,KAAK,EAAE;MAAK,CAAC;IACxB,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;EAEAC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAAC,CAAC;IAAC,KAuBVC,oBAAoB,GAAG,MAAM;MAC3B,OAAO,IAAI,CAACD,KAAK,CAACE,gBAAgB,IAAI,IAAI,CAACF,KAAK,CAACG,YAAY;IAC/D,CAAC;IAvBC,IAAI,CAACC,KAAK,GAAG;MACXN,KAAK,EAAEE,KAAK,CAACK,IAAI,GAAGL,KAAK,CAACH,SAAS,GAAG;IACxC,CAAC;EACH;EAEAS,MAAMA,CAAA,EAAG;IACP,IAAM;MAAER;IAAM,CAAC,GAAG,IAAI,CAACM,KAAK;IAC5B,IAAAG,WAAA,GAKI,IAAI,CAACP,KAAK;MALR;QACJH,SAAS;QACTW,eAAe;QACfC;MAEF,CAAC,GAAAF,WAAA;MADIG,IAAI,GAAAC,wBAAA,CAAAJ,WAAA;IAGT,OAAOrB,KAAA,CAAA0B,aAAA,CAACvB,IAAI;MAACwB,KAAK,EAAEC,MAAM,CAACC,SAAU;MAACC,WAAW,EAAE,KAAM;MAACP,qBAAqB,EAAEtB,QAAQ,CAAC8B,EAAE,KAAK,SAAS,GAAGR,qBAAqB,GAAG,CAACZ,SAAS,IAAIY,qBAAsB;MAAAS,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;MAAA;IAAA,GACrKnC,KAAA,CAAA0B,aAAA,CAACvB,IAAI;MAACwB,KAAK,EAAE,IAAI,CAACZ,oBAAoB,CAAC,CAAC,IAAIJ,SAAS,GAAGiB,MAAM,CAACQ,aAAa,GAAGR,MAAM,CAACS,aAAc;MAAAL,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;MAAA;IAAA,GACjGvB,KAAK,GAAGZ,KAAA,CAAA0B,aAAA,CAACtB,SAAS,EAAAkC,QAAA,KAAKd,IAAI;MAAEe,UAAU,EAAEjB,eAAgB;MAAAU,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;MAAA;IAAA,EAAE,CAAC,GAAG,IAC5D,CACF,CAAC;EACX;AAKF;AAEA,IAAMP,MAAM,GAAG1B,UAAU,CAACsC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ,CAAC;EACDN,aAAa,EAAE;IACbK,IAAI,EAAE;EACR,CAAC;EACDJ,aAAa,EAAE;IACbI,IAAI,EAAE,CAAC;IACPE,GAAG,EAAEtC;EACP;AACF,CAAC,CAAC;AAEF,eAAeC,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}