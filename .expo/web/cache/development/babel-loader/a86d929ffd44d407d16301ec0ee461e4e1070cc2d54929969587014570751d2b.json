{"ast":null,"code":"var _jsxFileName = \"/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-tabs/src/utils/withDimensions.js\";\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nexport var isOrientationLandscape = _ref => {\n  var {\n    width,\n    height\n  } = _ref;\n  return width > height;\n};\nexport default function withDimensions(WrappedComponent) {\n  var {\n    width,\n    height\n  } = Dimensions.get('window');\n  class EnhancedComponent extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        dimensions: {\n          width,\n          height\n        },\n        isLandscape: isOrientationLandscape({\n          width,\n          height\n        })\n      };\n      this.handleOrientationChange = _ref2 => {\n        var {\n          window\n        } = _ref2;\n        var isLandscape = isOrientationLandscape(window);\n        this.setState({\n          isLandscape\n        });\n      };\n    }\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n    render() {\n      return React.createElement(WrappedComponent, _extends({}, this.props, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }));\n    }\n  }\n  EnhancedComponent.displayName = \"withDimensions(\".concat(WrappedComponent.displayName, \")\");\n  return hoistNonReactStatic(EnhancedComponent, WrappedComponent);\n}","map":{"version":3,"names":["React","Dimensions","hoistNonReactStatic","isOrientationLandscape","_ref","width","height","withDimensions","WrappedComponent","get","EnhancedComponent","Component","constructor","arguments","state","dimensions","isLandscape","handleOrientationChange","_ref2","window","setState","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","createElement","_extends","props","__source","fileName","_jsxFileName","lineNumber","displayName","concat"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-tabs/src/utils/withDimensions.js"],"sourcesContent":["import * as React from 'react';\nimport { Dimensions } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\nexport const isOrientationLandscape = ({ width, height }) => width > height;\n\nexport default function withDimensions(WrappedComponent) {\n  const { width, height } = Dimensions.get('window');\n\n  class EnhancedComponent extends React.Component {\n    static displayName = `withDimensions(${WrappedComponent.displayName})`;\n\n    state = {\n      dimensions: { width, height },\n      isLandscape: isOrientationLandscape({ width, height }),\n    };\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    handleOrientationChange = ({ window }) => {\n      const isLandscape = isOrientationLandscape(window);\n      this.setState({ isLandscape });\n    };\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return hoistNonReactStatic(EnhancedComponent, WrappedComponent);\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAE/B,OAAOC,mBAAmB,MAAM,yBAAyB;AAEzD,OAAO,IAAMC,sBAAsB,GAAGC,IAAA;EAAA,IAAC;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAAA,OAAKC,KAAK,GAAGC,MAAM;AAAA;AAE3E,eAAe,SAASC,cAAcA,CAACC,gBAAgB,EAAE;EACvD,IAAM;IAAEH,KAAK;IAAEC;EAAO,CAAC,GAAGL,UAAU,CAACQ,GAAG,CAAC,QAAQ,CAAC;EAElD,MAAMC,iBAAiB,SAASV,KAAK,CAACW,SAAS,CAAC;IAAAC,YAAA;MAAA,SAAAC,SAAA;MAAA,KAG9CC,KAAK,GAAG;QACNC,UAAU,EAAE;UAAEV,KAAK;UAAEC;QAAO,CAAC;QAC7BU,WAAW,EAAEb,sBAAsB,CAAC;UAAEE,KAAK;UAAEC;QAAO,CAAC;MACvD,CAAC;MAAA,KAUDW,uBAAuB,GAAGC,KAAA,IAAgB;QAAA,IAAf;UAAEC;QAAO,CAAC,GAAAD,KAAA;QACnC,IAAMF,WAAW,GAAGb,sBAAsB,CAACgB,MAAM,CAAC;QAClD,IAAI,CAACC,QAAQ,CAAC;UAAEJ;QAAY,CAAC,CAAC;MAChC,CAAC;IAAA;IAXDK,iBAAiBA,CAAA,EAAG;MAClBpB,UAAU,CAACqB,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACL,uBAAuB,CAAC;IACrE;IAEAM,oBAAoBA,CAAA,EAAG;MACrBtB,UAAU,CAACuB,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACP,uBAAuB,CAAC;IACxE;IAOAQ,MAAMA,CAAA,EAAG;MACP,OAAOzB,KAAA,CAAA0B,aAAA,CAAClB,gBAAgB,EAAAmB,QAAA,KAAK,IAAI,CAACC,KAAK,EAAM,IAAI,CAACd,KAAK;QAAAe,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,EAAG,CAAC;IAC7D;EACF;EAxBMtB,iBAAiB,CACduB,WAAW,qBAAAC,MAAA,CAAqB1B,gBAAgB,CAACyB,WAAW;EAyBrE,OAAO/B,mBAAmB,CAACQ,iBAAiB,EAAEF,gBAAgB,CAAC;AACjE"},"metadata":{},"sourceType":"module","externalDependencies":[]}