{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleInterpolator from \"./StackViewStyleInterpolator\";\nimport { supportsImprovedSpringAnimation } from \"../../utils/ReactNativeFeatures\";\nvar IOSTransitionSpec;\nif (supportsImprovedSpringAnimation()) {\n  IOSTransitionSpec = {\n    timing: Animated.spring,\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01\n  };\n} else {\n  IOSTransitionSpec = {\n    duration: 500,\n    easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    timing: Animated.timing\n  };\n}\nvar SlideFromRightIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forHorizontal,\n  containerStyle: {\n    backgroundColor: '#eee'\n  }\n};\nvar ModalSlideFromBottomIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forVertical,\n  containerStyle: {\n    backgroundColor: '#eee'\n  }\n};\nvar FadeInFromBottomAndroid = {\n  transitionSpec: {\n    duration: 350,\n    easing: Easing.out(Easing.poly(5)),\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forFadeFromBottomAndroid\n};\nvar FadeOutToBottomAndroid = {\n  transitionSpec: {\n    duration: 150,\n    easing: Easing.in(Easing.linear),\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forFadeToBottomAndroid\n};\nvar NoAnimation = {\n  transitionSpec: {\n    duration: 0,\n    timing: Animated.timing\n  },\n  screenInterpolator: StyleInterpolator.forNoAnimation,\n  containerStyle: {\n    backgroundColor: '#eee'\n  }\n};\nfunction defaultTransitionConfig(transitionProps, prevTransitionProps, isModal) {\n  if (Platform.OS !== 'ios') {\n    if (prevTransitionProps && transitionProps.index < prevTransitionProps.index) {\n      return FadeOutToBottomAndroid;\n    }\n    return FadeInFromBottomAndroid;\n  }\n  if (isModal) {\n    return ModalSlideFromBottomIOS;\n  }\n  return SlideFromRightIOS;\n}\nfunction getTransitionConfig(transitionConfigurer, transitionProps, prevTransitionProps, isModal) {\n  var defaultConfig = defaultTransitionConfig(transitionProps, prevTransitionProps, isModal);\n  if (transitionConfigurer) {\n    return _objectSpread({}, defaultConfig, transitionConfigurer(transitionProps, prevTransitionProps, isModal));\n  }\n  return defaultConfig;\n}\nexport default {\n  defaultTransitionConfig: defaultTransitionConfig,\n  getTransitionConfig: getTransitionConfig,\n  SlideFromRightIOS: SlideFromRightIOS,\n  ModalSlideFromBottomIOS: ModalSlideFromBottomIOS,\n  FadeInFromBottomAndroid: FadeInFromBottomAndroid,\n  FadeOutToBottomAndroid: FadeOutToBottomAndroid,\n  NoAnimation: NoAnimation\n};","map":{"version":3,"names":["Animated","Easing","Platform","StyleInterpolator","supportsImprovedSpringAnimation","IOSTransitionSpec","timing","spring","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","duration","easing","bezier","SlideFromRightIOS","transitionSpec","screenInterpolator","forHorizontal","containerStyle","backgroundColor","ModalSlideFromBottomIOS","forVertical","FadeInFromBottomAndroid","out","poly","forFadeFromBottomAndroid","FadeOutToBottomAndroid","in","linear","forFadeToBottomAndroid","NoAnimation","forNoAnimation","defaultTransitionConfig","transitionProps","prevTransitionProps","isModal","OS","index","getTransitionConfig","transitionConfigurer","defaultConfig","_objectSpread"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-stack/lib/module/views/StackView/StackViewTransitionConfigs.tsx"],"sourcesContent":["import { Animated, Easing, Platform } from 'react-native';\nimport StyleInterpolator from './StackViewStyleInterpolator';\nimport { supportsImprovedSpringAnimation } from '../../utils/ReactNativeFeatures';\nimport { TransitionProps, TransitionConfig } from '../../types';\n\nlet IOSTransitionSpec;\nif (supportsImprovedSpringAnimation()) {\n  // These are the exact values from UINavigationController's animation configuration\n  IOSTransitionSpec = {\n    timing: Animated.spring,\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01,\n  };\n} else {\n  // This is an approximation of the IOS spring animation using a derived bezier curve\n  IOSTransitionSpec = {\n    duration: 500,\n    easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    timing: Animated.timing,\n  };\n}\n\n// Standard iOS navigation transition\nconst SlideFromRightIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forHorizontal,\n  containerStyle: {\n    backgroundColor: '#eee',\n  },\n};\n\n// Standard iOS navigation transition for modals\nconst ModalSlideFromBottomIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forVertical,\n  containerStyle: {\n    backgroundColor: '#eee',\n  },\n};\n\n// Standard Android navigation transition when opening an Activity\nconst FadeInFromBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_open_enter.xml\n  transitionSpec: {\n    duration: 350,\n    easing: Easing.out(Easing.poly(5)), // decelerate\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forFadeFromBottomAndroid,\n};\n\n// Standard Android navigation transition when closing an Activity\nconst FadeOutToBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_close_exit.xml\n  transitionSpec: {\n    duration: 150,\n    easing: Easing.in(Easing.linear), // accelerate\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forFadeToBottomAndroid,\n};\n\nconst NoAnimation = {\n  transitionSpec: {\n    duration: 0,\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forNoAnimation,\n  containerStyle: {\n    backgroundColor: '#eee',\n  },\n};\n\nfunction defaultTransitionConfig(\n  transitionProps: TransitionProps,\n  prevTransitionProps?: TransitionProps,\n  isModal?: boolean\n): TransitionConfig {\n  if (Platform.OS !== 'ios') {\n    // Use the default Android animation no matter if the screen is a modal.\n    // Android doesn't have full-screen modals like iOS does, it has dialogs.\n    if (\n      prevTransitionProps &&\n      transitionProps.index < prevTransitionProps.index\n    ) {\n      // Navigating back to the previous screen\n      return FadeOutToBottomAndroid;\n    }\n    return FadeInFromBottomAndroid;\n  }\n  // iOS and other platforms\n  if (isModal) {\n    return ModalSlideFromBottomIOS;\n  }\n  return SlideFromRightIOS;\n}\n\nfunction getTransitionConfig<T = {}>(\n  transitionConfigurer:\n    | undefined\n    | ((\n        transitionProps: TransitionProps,\n        prevTransitionProps?: TransitionProps,\n        isModal?: boolean\n      ) => T),\n  transitionProps: TransitionProps,\n  prevTransitionProps?: TransitionProps,\n  isModal?: boolean\n): TransitionConfig & T {\n  const defaultConfig = defaultTransitionConfig(\n    transitionProps,\n    prevTransitionProps,\n    isModal\n  );\n  if (transitionConfigurer) {\n    return {\n      ...defaultConfig,\n      ...transitionConfigurer(transitionProps, prevTransitionProps, isModal),\n    };\n  }\n\n  return defaultConfig as any;\n}\n\nexport default {\n  defaultTransitionConfig,\n  getTransitionConfig,\n  SlideFromRightIOS,\n  ModalSlideFromBottomIOS,\n  FadeInFromBottomAndroid,\n  FadeOutToBottomAndroid,\n  NoAnimation,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}