{"ast":null,"code":"var _jsxFileName = \"/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-drawer/dist/views/DrawerSidebar.js\";\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationActions } from '@react-navigation/core';\nimport invariant from \"../utils/invariant\";\nclass DrawerSidebar extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this._getScreenOptions = routeKey => {\n      var descriptor = this.props.descriptors[routeKey];\n      invariant(descriptor.options, 'Cannot access screen descriptor options from drawer sidebar');\n      return descriptor.options;\n    };\n    this._getLabel = _ref => {\n      var {\n        focused,\n        tintColor,\n        route\n      } = _ref;\n      var {\n        drawerLabel,\n        title\n      } = this._getScreenOptions(route.key);\n      if (drawerLabel) {\n        return typeof drawerLabel === 'function' ? drawerLabel({\n          tintColor,\n          focused\n        }) : drawerLabel;\n      }\n      if (typeof title === 'string') {\n        return title;\n      }\n      return route.routeName;\n    };\n    this._renderIcon = _ref2 => {\n      var {\n        focused,\n        tintColor,\n        route\n      } = _ref2;\n      var {\n        drawerIcon\n      } = this._getScreenOptions(route.key);\n      if (drawerIcon) {\n        return typeof drawerIcon === 'function' ? drawerIcon({\n          tintColor,\n          focused\n        }) : drawerIcon;\n      }\n      return null;\n    };\n    this._onItemPress = _ref3 => {\n      var {\n        route,\n        focused\n      } = _ref3;\n      if (focused) {\n        this.props.navigation.closeDrawer();\n      } else {\n        this.props.navigation.dispatch(NavigationActions.navigate({\n          routeName: route.routeName\n        }));\n      }\n    };\n  }\n  render() {\n    var ContentComponent = this.props.contentComponent;\n    if (!ContentComponent) {\n      return null;\n    }\n    var {\n      state\n    } = this.props.navigation;\n    invariant(typeof state.index === 'number', 'should be set');\n    return React.createElement(View, {\n      style: [styles.container, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      }\n    }, React.createElement(ContentComponent, _extends({}, this.props.contentOptions, {\n      navigation: this.props.navigation,\n      descriptors: this.props.descriptors,\n      drawerOpenProgress: this.props.drawerOpenProgress,\n      items: state.routes,\n      activeItemKey: state.routes[state.index] ? state.routes[state.index].key : null,\n      screenProps: this.props.screenProps,\n      getLabel: this._getLabel,\n      renderIcon: this._renderIcon,\n      onItemPress: this._onItemPress,\n      drawerPosition: this.props.drawerPosition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      }\n    })));\n  }\n}\nexport default DrawerSidebar;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","NavigationActions","invariant","DrawerSidebar","PureComponent","constructor","arguments","_getScreenOptions","routeKey","descriptor","props","descriptors","options","_getLabel","_ref","focused","tintColor","route","drawerLabel","title","key","routeName","_renderIcon","_ref2","drawerIcon","_onItemPress","_ref3","navigation","closeDrawer","dispatch","navigate","render","ContentComponent","contentComponent","state","index","createElement","style","styles","container","__source","fileName","_jsxFileName","lineNumber","_extends","contentOptions","drawerOpenProgress","items","routes","activeItemKey","screenProps","getLabel","renderIcon","onItemPress","drawerPosition","create","flex"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-drawer/dist/views/DrawerSidebar.js"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { NavigationActions } from '@react-navigation/core';\nimport invariant from '../utils/invariant';\n\n/**\n * Component that renders the sidebar screen of the drawer.\n */\n\nclass DrawerSidebar extends React.PureComponent {\n  _getScreenOptions = routeKey => {\n    const descriptor = this.props.descriptors[routeKey];\n    invariant(descriptor.options, 'Cannot access screen descriptor options from drawer sidebar');\n    return descriptor.options;\n  };\n\n  _getLabel = ({ focused, tintColor, route }) => {\n    const { drawerLabel, title } = this._getScreenOptions(route.key);\n    if (drawerLabel) {\n      return typeof drawerLabel === 'function' ? drawerLabel({ tintColor, focused }) : drawerLabel;\n    }\n\n    if (typeof title === 'string') {\n      return title;\n    }\n\n    return route.routeName;\n  };\n\n  _renderIcon = ({ focused, tintColor, route }) => {\n    const { drawerIcon } = this._getScreenOptions(route.key);\n    if (drawerIcon) {\n      return typeof drawerIcon === 'function' ? drawerIcon({ tintColor, focused }) : drawerIcon;\n    }\n    return null;\n  };\n\n  _onItemPress = ({ route, focused }) => {\n    if (focused) {\n      this.props.navigation.closeDrawer();\n    } else {\n      this.props.navigation.dispatch(NavigationActions.navigate({ routeName: route.routeName }));\n    }\n  };\n\n  render() {\n    const ContentComponent = this.props.contentComponent;\n    if (!ContentComponent) {\n      return null;\n    }\n    const { state } = this.props.navigation;\n    invariant(typeof state.index === 'number', 'should be set');\n    return <View style={[styles.container, this.props.style]}>\n        <ContentComponent {...this.props.contentOptions} navigation={this.props.navigation} descriptors={this.props.descriptors} drawerOpenProgress={this.props.drawerOpenProgress} items={state.routes} activeItemKey={state.routes[state.index] ? state.routes[state.index].key : null} screenProps={this.props.screenProps} getLabel={this._getLabel} renderIcon={this._renderIcon} onItemPress={this._onItemPress} drawerPosition={this.props.drawerPosition} />\n      </View>;\n  }\n}\n\nexport default DrawerSidebar;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}