{"ast":null,"code":"var _jsxFileName = \"/Users/zuyax/Developer/rn-starter/node_modules/react-native-gesture-handler/touchables/GenericTouchable.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { State, BaseButton } from \"../GestureHandler\";\nimport PropTypes from 'prop-types';\nexport var TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2\n};\nvar PublicPropTypes = {\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number\n};\nvar InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func\n};\nexport default class GenericTouchable extends Component {\n  constructor() {\n    super(...arguments);\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    this.STATE = TOUCHABLE_STATE.UNDETERMINED;\n    this.handlePressIn = () => {\n      if (this.props.delayPressIn) {\n        this.pressInTimeout = setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n          this.pressInTimeout = null;\n        }, this.props.delayPressIn);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      if (this.props.onLongPress) {\n        var time = (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n        this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n      }\n    };\n    this.handleMoveOutside = () => {\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = this.pressOutTimeout || setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n      }\n    };\n    this.handleGoToUndetermined = () => {\n      clearTimeout(this.pressOutTimeout);\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = setTimeout(() => {\n          if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n            this.moveToState(TOUCHABLE_STATE.BEGAN);\n          }\n          this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      }\n    };\n    this.moveToState = newState => {\n      if (newState === this.STATE) {\n        return;\n      }\n      if (newState === TOUCHABLE_STATE.BEGAN) {\n        this.props.onPressIn && this.props.onPressIn();\n      } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.props.onPressOut && this.props.onPressOut();\n      } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n        this.reset();\n        if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n          this.props.onPressOut && this.props.onPressOut();\n        }\n      }\n      this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n      this.STATE = newState;\n    };\n    this.onGestureEvent = _ref => {\n      var {\n        nativeEvent: {\n          pointerInside\n        }\n      } = _ref;\n      if (this.pointerInside !== pointerInside) {\n        if (pointerInside) {\n          this.onMoveIn();\n        } else {\n          this.onMoveOut();\n        }\n      }\n      this.pointerInside = pointerInside;\n    };\n    this.onHandlerStateChange = _ref2 => {\n      var {\n        nativeEvent\n      } = _ref2;\n      var {\n        state\n      } = nativeEvent;\n      if (state === State.CANCELLED || state === State.FAILED) {\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      } else if (state === (Platform.OS === 'ios' ? State.ACTIVE : State.BEGAN) && this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.handlePressIn();\n      } else if (state === State.END) {\n        var shouldCallOnPress = !this.longPressDetected && this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE && this.pressOutTimeout === null;\n        this.handleGoToUndetermined();\n        if (shouldCallOnPress) {\n          this.props.onPress && this.props.onPress();\n        }\n      }\n    };\n    this.onLongPressDetected = () => {\n      this.longPressDetected = true;\n      this.props.onLongPress();\n    };\n    this.onMoveIn = () => {\n      if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n    };\n    this.onMoveOut = () => {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = null;\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        this.handleMoveOutside();\n      }\n    };\n  }\n  componentDidMount() {\n    this.reset();\n  }\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout);\n    clearTimeout(this.pressOutTimeout);\n    clearTimeout(this.longPressTimeout);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n  componentWillUnmount() {\n    this.reset();\n  }\n  render() {\n    var coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      testID: this.props.testID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop\n    };\n    return React.createElement(BaseButton, _extends({\n      onHandlerStateChange: this.props.disabled ? null : this.onHandlerStateChange,\n      onGestureEvent: this.onGestureEvent,\n      hitSlop: this.props.hitSlop\n    }, this.props.extraButtonProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      }\n    }), React.createElement(Animated.View, _extends({}, coreProps, {\n      style: this.props.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      }\n    }), this.props.children));\n  }\n}\nGenericTouchable.publicPropTypes = PublicPropTypes;\nGenericTouchable.internalPropTypes = InternalPropTypes;\nGenericTouchable.propTypes = _objectSpread({}, InternalPropTypes, {}, PublicPropTypes);\nGenericTouchable.defaultProps = {\n  delayLongPress: 600,\n  extraButtonProps: {\n    rippleColor: 'transparent'\n  }\n};","map":{"version":3,"names":["React","Component","Animated","Platform","State","BaseButton","PropTypes","TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","PublicPropTypes","accessible","bool","accessibilityLabel","node","accessibilityHint","string","hitSlop","shape","top","number","left","bottom","right","disabled","onPress","func","onPressIn","onPressOut","onLayout","onLongPress","nativeID","testID","delayPressIn","delayPressOut","delayLongPress","InternalPropTypes","extraButtonProps","object","onStateChange","GenericTouchable","constructor","arguments","longPressDetected","pointerInside","STATE","handlePressIn","props","pressInTimeout","setTimeout","moveToState","time","longPressTimeout","onLongPressDetected","handleMoveOutside","pressOutTimeout","handleGoToUndetermined","clearTimeout","newState","reset","onGestureEvent","_ref","nativeEvent","onMoveIn","onMoveOut","onHandlerStateChange","_ref2","state","CANCELLED","FAILED","OS","ACTIVE","END","shouldCallOnPress","componentDidMount","componentWillUnmount","render","coreProps","accessibilityComponentType","accessibilityRole","accessibilityStates","accessibilityTraits","createElement","_extends","__source","fileName","_jsxFileName","lineNumber","View","style","children","publicPropTypes","internalPropTypes","propTypes","_objectSpread","defaultProps","rippleColor"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-native-gesture-handler/touchables/GenericTouchable.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { State, BaseButton } from '../GestureHandler';\nimport PropTypes from 'prop-types';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n};\n\nconst PublicPropTypes = {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props.\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number,\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number,\n};\n\nconst InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func,\n};\n\n/**\n * GenericTouchable is not intented to be used as it.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component {\n  static publicPropTypes = PublicPropTypes;\n  static internalPropTypes = InternalPropTypes;\n\n  // The prop type collections have to be outside of the class, as metro\n  // at this time does not compile `this.foo` correctly if HMR is enabled.\n  // https://github.com/kmagiera/react-native-gesture-handler/pull/406#issuecomment-453779977\n  static propTypes = {\n    ...InternalPropTypes,\n    ...PublicPropTypes,\n  };\n\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout;\n  pressOutTimeout;\n  longPressTimeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn = () => {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  };\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside = () => {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  };\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined = () => {\n    clearTimeout(this.pressOutTimeout);\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  };\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout);\n    clearTimeout(this.pressOutTimeout);\n    clearTimeout(this.longPressTimeout);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState = newState => {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn && this.props.onPressIn();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut && this.props.onPressOut();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut && this.props.onPressOut();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  };\n\n  onGestureEvent = ({ nativeEvent: { pointerInside } }) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({ nativeEvent }) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS === 'ios' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress && this.props.onPress();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn = () => {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttles with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  };\n\n  onMoveOut = () => {\n    // long press shouldn't be longer detected\n    clearTimeout(this.longPressTimeout);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  };\n\n  render() {\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      testID: this.props.testID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n    };\n\n    return (\n      <BaseButton\n        onHandlerStateChange={this.props.disabled ? null : this.onHandlerStateChange}\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={this.props.hitSlop}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}