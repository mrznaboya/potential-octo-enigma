{"ast":null,"code":"import PropTypes from 'prop-types';\nexport var availableApplePayNetworks = ['american_express', 'discover', 'master_card', 'visa'];\nexport var availableApplePayAddressFields = ['all', 'name', 'email', 'phone', 'postal_address'];\nexport var availableApplePayShippingTypes = ['shipping', 'delivery', 'store_pickup', 'service_pickup'];\nexport var availableSourceTypes = ['bancontact', 'giropay', 'ideal', 'sepaDebit', 'sofort', 'threeDSecure', 'alipay'];\nexport var setOptionsOptionsPropTypes = {\n  publishableKey: PropTypes.string,\n  merchantId: PropTypes.string,\n  androidPayMode: PropTypes.string\n};\nexport var availableApplePayNetworkPropTypes = PropTypes.oneOf(availableApplePayNetworks);\nexport var canMakeApplePayPaymentsOptionsPropTypes = {\n  networks: PropTypes.arrayOf(availableApplePayNetworkPropTypes)\n};\nexport var paymentRequestWithApplePayItemPropTypes = {\n  label: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['final', 'pending'])\n};\nexport var paymentRequestWithApplePayItemsPropTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape(paymentRequestWithApplePayItemPropTypes)).isRequired\n};\nexport var applePayAddressFieldsPropTypes = PropTypes.oneOf(availableApplePayAddressFields);\nexport var applePayOptionShippingMethodPropTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  detail: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired\n};\nexport var paymentRequestWithApplePayOptionsPropTypes = {\n  currencyCode: PropTypes.string,\n  countryCode: PropTypes.string,\n  requiredBillingAddressFields: PropTypes.arrayOf(applePayAddressFieldsPropTypes),\n  requiredShippingAddressFields: PropTypes.arrayOf(applePayAddressFieldsPropTypes),\n  shippingMethods: PropTypes.arrayOf(PropTypes.shape(applePayOptionShippingMethodPropTypes)),\n  shippingType: PropTypes.oneOf(availableApplePayShippingTypes)\n};\nexport var paymentRequestWithCardFormOptionsPropTypes = {\n  requiredBillingAddressFields: PropTypes.oneOf(['full', 'zip']),\n  managedAccountCurrency: PropTypes.string,\n  smsAutofillDisabled: PropTypes.bool,\n  prefilledInformation: PropTypes.shape({\n    email: PropTypes.string,\n    phone: PropTypes.string,\n    billingAddress: PropTypes.shape({\n      name: PropTypes.string,\n      line1: PropTypes.string,\n      line2: PropTypes.string,\n      city: PropTypes.string,\n      state: PropTypes.string,\n      postalCode: PropTypes.string,\n      country: PropTypes.string,\n      phone: PropTypes.string,\n      email: PropTypes.string\n    })\n  }),\n  theme: PropTypes.shape({\n    primaryBackgroundColor: PropTypes.string,\n    secondaryBackgroundColor: PropTypes.string,\n    primaryForegroundColor: PropTypes.string,\n    secondaryForegroundColor: PropTypes.string,\n    accentColor: PropTypes.string,\n    errorColor: PropTypes.string\n  })\n};\nexport var createTokenWithCardParamsPropTypes = {\n  number: PropTypes.string.isRequired,\n  expMonth: PropTypes.number.isRequired,\n  expYear: PropTypes.number.isRequired,\n  cvc: PropTypes.string,\n  name: PropTypes.string,\n  addressLine1: PropTypes.string,\n  addressLine2: PropTypes.string,\n  addressCity: PropTypes.string,\n  addressState: PropTypes.string,\n  addressZip: PropTypes.string,\n  addressCountry: PropTypes.string,\n  country: PropTypes.string,\n  currency: PropTypes.string,\n  brand: PropTypes.string,\n  last4: PropTypes.string,\n  fingerprint: PropTypes.string,\n  funding: PropTypes.string\n};\nexport var createTokenWithBankAccountParamsPropTypes = {\n  accountNumber: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  routingNumber: PropTypes.string,\n  accountHolderName: PropTypes.string,\n  accountHolderType: PropTypes.oneOf(['company', 'individual'])\n};\nexport var androidPayLineItemPropTypes = {\n  currency_code: PropTypes.string.isRequired,\n  total_price: PropTypes.string.isRequired,\n  unit_price: PropTypes.string.isRequired,\n  quantity: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n};\nexport var paymentRequestWithAndroidPayOptionsPropTypes = {\n  total_price: PropTypes.string.isRequired,\n  currency_code: PropTypes.string.isRequired,\n  line_items: PropTypes.arrayOf(PropTypes.shape(androidPayLineItemPropTypes)).isRequired,\n  shipping_address_required: PropTypes.bool,\n  billing_address_required: PropTypes.bool\n};\nexport var createSourceWithParamsPropType = {\n  type: PropTypes.oneOf(availableSourceTypes).isRequired,\n  amount: PropTypes.number,\n  name: PropTypes.string,\n  returnURL: PropTypes.string,\n  statementDescriptor: PropTypes.string,\n  currency: PropTypes.string,\n  email: PropTypes.string,\n  bank: PropTypes.string,\n  iban: PropTypes.string,\n  addressLine1: PropTypes.string,\n  city: PropTypes.string,\n  postalCode: PropTypes.string,\n  country: PropTypes.string,\n  card: PropTypes.string\n};","map":{"version":3,"names":["PropTypes","availableApplePayNetworks","availableApplePayAddressFields","availableApplePayShippingTypes","availableSourceTypes","setOptionsOptionsPropTypes","publishableKey","string","merchantId","androidPayMode","availableApplePayNetworkPropTypes","oneOf","canMakeApplePayPaymentsOptionsPropTypes","networks","arrayOf","paymentRequestWithApplePayItemPropTypes","label","isRequired","amount","type","paymentRequestWithApplePayItemsPropTypes","items","shape","applePayAddressFieldsPropTypes","applePayOptionShippingMethodPropTypes","id","detail","paymentRequestWithApplePayOptionsPropTypes","currencyCode","countryCode","requiredBillingAddressFields","requiredShippingAddressFields","shippingMethods","shippingType","paymentRequestWithCardFormOptionsPropTypes","managedAccountCurrency","smsAutofillDisabled","bool","prefilledInformation","email","phone","billingAddress","name","line1","line2","city","state","postalCode","country","theme","primaryBackgroundColor","secondaryBackgroundColor","primaryForegroundColor","secondaryForegroundColor","accentColor","errorColor","createTokenWithCardParamsPropTypes","number","expMonth","expYear","cvc","addressLine1","addressLine2","addressCity","addressState","addressZip","addressCountry","currency","brand","last4","fingerprint","funding","createTokenWithBankAccountParamsPropTypes","accountNumber","routingNumber","accountHolderName","accountHolderType","androidPayLineItemPropTypes","currency_code","total_price","unit_price","quantity","description","paymentRequestWithAndroidPayOptionsPropTypes","line_items","shipping_address_required","billing_address_required","createSourceWithParamsPropType","returnURL","statementDescriptor","bank","iban","card"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-payments-stripe/src/utils/types.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const availableApplePayNetworks = ['american_express', 'discover', 'master_card', 'visa'];\nexport const availableApplePayAddressFields = ['all', 'name', 'email', 'phone', 'postal_address'];\nexport const availableApplePayShippingTypes = [\n  'shipping',\n  'delivery',\n  'store_pickup',\n  'service_pickup',\n];\nexport const availableSourceTypes = [\n  'bancontact',\n  'giropay',\n  'ideal',\n  'sepaDebit',\n  'sofort',\n  'threeDSecure',\n  'alipay',\n];\n\nexport const setOptionsOptionsPropTypes = {\n  publishableKey: PropTypes.string,\n  merchantId: PropTypes.string,\n  androidPayMode: PropTypes.string,\n};\n\nexport const availableApplePayNetworkPropTypes = PropTypes.oneOf(availableApplePayNetworks);\n\nexport const canMakeApplePayPaymentsOptionsPropTypes = {\n  networks: PropTypes.arrayOf(availableApplePayNetworkPropTypes),\n};\n\nexport const paymentRequestWithApplePayItemPropTypes = {\n  label: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['final', 'pending']),\n};\n\nexport const paymentRequestWithApplePayItemsPropTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape(paymentRequestWithApplePayItemPropTypes)).isRequired,\n};\n\nexport const applePayAddressFieldsPropTypes = PropTypes.oneOf(availableApplePayAddressFields);\n\nexport const applePayOptionShippingMethodPropTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  detail: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n};\n\nexport const paymentRequestWithApplePayOptionsPropTypes = {\n  currencyCode: PropTypes.string,\n  countryCode: PropTypes.string,\n  requiredBillingAddressFields: PropTypes.arrayOf(applePayAddressFieldsPropTypes),\n  requiredShippingAddressFields: PropTypes.arrayOf(applePayAddressFieldsPropTypes),\n  shippingMethods: PropTypes.arrayOf(PropTypes.shape(applePayOptionShippingMethodPropTypes)),\n  shippingType: PropTypes.oneOf(availableApplePayShippingTypes),\n};\n\nexport const paymentRequestWithCardFormOptionsPropTypes = {\n  requiredBillingAddressFields: PropTypes.oneOf(['full', 'zip']),\n  managedAccountCurrency: PropTypes.string,\n  smsAutofillDisabled: PropTypes.bool,\n  prefilledInformation: PropTypes.shape({\n    email: PropTypes.string,\n    phone: PropTypes.string,\n    billingAddress: PropTypes.shape({\n      name: PropTypes.string,\n      line1: PropTypes.string,\n      line2: PropTypes.string,\n      city: PropTypes.string,\n      state: PropTypes.string,\n      postalCode: PropTypes.string,\n      country: PropTypes.string,\n      phone: PropTypes.string,\n      email: PropTypes.string,\n    }),\n  }),\n  theme: PropTypes.shape({\n    primaryBackgroundColor: PropTypes.string,\n    secondaryBackgroundColor: PropTypes.string,\n    primaryForegroundColor: PropTypes.string,\n    secondaryForegroundColor: PropTypes.string,\n    accentColor: PropTypes.string,\n    errorColor: PropTypes.string,\n  }),\n};\n\nexport const createTokenWithCardParamsPropTypes = {\n  number: PropTypes.string.isRequired,\n  expMonth: PropTypes.number.isRequired,\n  expYear: PropTypes.number.isRequired,\n  cvc: PropTypes.string,\n  name: PropTypes.string,\n  addressLine1: PropTypes.string,\n  addressLine2: PropTypes.string,\n  addressCity: PropTypes.string,\n  addressState: PropTypes.string,\n  addressZip: PropTypes.string,\n  addressCountry: PropTypes.string,\n  country: PropTypes.string,\n  currency: PropTypes.string,\n\n  // Android Only\n  brand: PropTypes.string,\n  last4: PropTypes.string,\n  fingerprint: PropTypes.string,\n  funding: PropTypes.string,\n};\n\nexport const createTokenWithBankAccountParamsPropTypes = {\n  accountNumber: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  routingNumber: PropTypes.string,\n  accountHolderName: PropTypes.string,\n  accountHolderType: PropTypes.oneOf(['company', 'individual']),\n};\n\nexport const androidPayLineItemPropTypes = {\n  currency_code: PropTypes.string.isRequired,\n  total_price: PropTypes.string.isRequired,\n  unit_price: PropTypes.string.isRequired,\n  quantity: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nexport const paymentRequestWithAndroidPayOptionsPropTypes = {\n  total_price: PropTypes.string.isRequired,\n  currency_code: PropTypes.string.isRequired,\n  line_items: PropTypes.arrayOf(PropTypes.shape(androidPayLineItemPropTypes)).isRequired,\n  shipping_address_required: PropTypes.bool,\n  billing_address_required: PropTypes.bool,\n};\n\nexport const createSourceWithParamsPropType = {\n  type: PropTypes.oneOf(availableSourceTypes).isRequired,\n  amount: PropTypes.number,\n  name: PropTypes.string,\n  returnURL: PropTypes.string,\n  statementDescriptor: PropTypes.string,\n  currency: PropTypes.string,\n  email: PropTypes.string,\n  bank: PropTypes.string,\n  iban: PropTypes.string,\n  addressLine1: PropTypes.string,\n  city: PropTypes.string,\n  postalCode: PropTypes.string,\n  country: PropTypes.string,\n  card: PropTypes.string,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}