{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/brentvatne/coding/react-navigation-stack/src/views/TouchableItem.tsx\";\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport BorderlessButton from \"./BorderlessButton\";\nvar ANDROID_VERSION_LOLLIPOP = 21;\nvar TouchableItem = function (_React$Component) {\n  _inherits(TouchableItem, _React$Component);\n  function TouchableItem() {\n    _classCallCheck(this, TouchableItem);\n    return _possibleConstructorReturn(this, _getPrototypeOf(TouchableItem).apply(this, arguments));\n  }\n  _createClass(TouchableItem, [{\n    key: \"render\",\n    value: function render() {\n      if (Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP) {\n        var _this$props = this.props,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"style\"]);\n        return React.createElement(TouchableNativeFeedback, _extends({}, rest, {\n          style: null,\n          background: TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          }\n        }), React.createElement(View, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          }\n        }, React.Children.only(this.props.children)));\n      } else if (Platform.OS === 'ios') {\n        return React.createElement(BorderlessButton, _extends({\n          hitSlop: {\n            top: 10,\n            bottom: 10,\n            right: 10,\n            left: 10\n          },\n          disallowInterruption: true,\n          enabled: !this.props.disabled\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          }\n        }), this.props.children);\n      } else {\n        return React.createElement(TouchableOpacity, _extends({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          }\n        }), this.props.children);\n      }\n    }\n  }]);\n  return TouchableItem;\n}(React.Component);\nTouchableItem.defaultProps = {\n  borderless: false,\n  pressColor: 'rgba(0, 0, 0, .32)'\n};\nexport { TouchableItem as default };","map":{"version":3,"names":["React","Platform","TouchableNativeFeedback","TouchableOpacity","View","BorderlessButton","ANDROID_VERSION_LOLLIPOP","TouchableItem","OS","Version","_this$props","props","style","rest","_objectWithoutProperties","createElement","_extends","background","Ripple","pressColor","borderless","__source","fileName","_jsxFileName","lineNumber","Children","only","children","hitSlop","top","bottom","right","left","disallowInterruption","enabled","disabled","Component","defaultProps"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-stack/lib/module/views/TouchableItem.tsx"],"sourcesContent":["/**\n * TouchableItem renders a touchable that looks native on both iOS and Android.\n *\n * It provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity.\n *\n * On iOS you can pass the props of TouchableOpacity, on Android pass the props\n * of TouchableNativeFeedback.\n */\nimport * as React from 'react';\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport BorderlessButton from './BorderlessButton';\n\ntype Props = ViewProps & {\n  pressColor: string;\n  disabled?: boolean;\n  borderless?: boolean;\n  delayPressIn?: number;\n  onPress?: () => void;\n};\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\nexport default class TouchableItem extends React.Component<Props> {\n  static defaultProps = {\n    borderless: false,\n    pressColor: 'rgba(0, 0, 0, .32)',\n  };\n\n  render() {\n    /*\n     * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n     * therefore only enable it on Android Lollipop and above.\n     *\n     * All touchables on Android should have the ripple effect according to\n     * platform design guidelines.\n     * We need to pass the background prop to specify a borderless ripple effect.\n     */\n    if (\n      Platform.OS === 'android' &&\n      Platform.Version >= ANDROID_VERSION_LOLLIPOP\n    ) {\n      const { style, ...rest } = this.props;\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          style={null}\n          background={TouchableNativeFeedback.Ripple(\n            this.props.pressColor,\n            this.props.borderless\n          )}\n        >\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>\n      );\n    } else if (Platform.OS === 'ios') {\n      return (\n        <BorderlessButton\n          hitSlop={{ top: 10, bottom: 10, right: 10, left: 10 }}\n          disallowInterruption\n          enabled={!this.props.disabled}\n          {...this.props}\n        >\n          {this.props.children}\n        </BorderlessButton>\n      );\n    } else {\n      return (\n        <TouchableOpacity {...this.props}>\n          {this.props.children}\n        </TouchableOpacity>\n      );\n    }\n  }\n}\n"],"mappings":";;;;;;;;AASA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAAC,QAAA;AAAA,OAAAC,uBAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAQA,OAAOC,gBAAP;AAUA,IAAMC,wBAAwB,GAAG,EAAjC;IAEqBC,a;;;;;;;;6BAMV;MASP,IACEN,QAAQ,CAACO,EAAT,KAAgB,SAAhB,IACAP,QAAQ,CAACQ,OAAT,IAAoBH,wBAFtB,EAGE;QAAA,IAAAI,WAAA,GAC2B,KAAKC,KADhC;UACQC,KADR,GAAAF,WAAA,CACQE,KADR;UACkBC,IADlB,GAAAC,wBAAA,CAAAJ,WAAA;QAEA,OACEV,KAAA,CAAAe,aAAA,CAACb,uBAAD,EAAAc,QAAA,KACMH,IADN;UAEED,KAAK,EAAE,IAFT;UAGEK,UAAU,EAAEf,uBAAuB,CAACgB,MAAxB,CACV,KAAKP,KAAL,CAAWQ,UADD,EAEV,KAAKR,KAAL,CAAWS,UAFD,CAHd;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;UAAA;QAAA,IAQExB,KAAA,CAAAe,aAAA,CAACX,IAAD;UAAMQ,KAAK,EAAEA,KAAb;UAAAS,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;UAAA;QAAA,GAAqBxB,KAAK,CAACyB,QAAN,CAAeC,IAAf,CAAoB,KAAKf,KAAL,CAAWgB,QAA/B,CAArB,CARF,CADF;MAYD,CAjBD,MAiBO,IAAI1B,QAAQ,CAACO,EAAT,KAAgB,KAApB,EAA2B;QAChC,OACER,KAAA,CAAAe,aAAA,CAACV,gBAAD,EAAAW,QAAA;UACEY,OAAO,EAAE;YAAEC,GAAG,EAAE,EAAP;YAAWC,MAAM,EAAE,EAAnB;YAAuBC,KAAK,EAAE,EAA9B;YAAkCC,IAAI,EAAE;UAAxC,CADX;UAEEC,oBAAoB,MAFtB;UAGEC,OAAO,EAAE,CAAC,KAAKvB,KAAL,CAAWwB;QAHvB,GAIM,KAAKxB,KAJX;UAAAU,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;UAAA;QAAA,IAMG,KAAKb,KAAL,CAAWgB,QANd,CADF;MAUD,CAXM,MAWA;QACL,OACE3B,KAAA,CAAAe,aAAA,CAACZ,gBAAD,EAAAa,QAAA,KAAsB,KAAKL,KAA3B;UAAAU,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;UAAA;QAAA,IACG,KAAKb,KAAL,CAAWgB,QADd,CADF;MAKD;IACF;;;EAlDwC3B,KAAK,CAACoC,S;AAA5B7B,a,CACZ8B,Y,GAAe;EACpBjB,UAAU,EAAE,KADQ;EAEpBD,UAAU,EAAE;AAFQ,C;SADHZ,a"},"metadata":{},"sourceType":"module","externalDependencies":[]}