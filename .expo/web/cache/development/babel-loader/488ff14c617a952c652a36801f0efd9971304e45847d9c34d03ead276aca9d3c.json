{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport ExpoMailComposer from \"./ExpoMailComposer\";\nexport function composeAsync(_x) {\n  return _composeAsync.apply(this, arguments);\n}\nfunction _composeAsync() {\n  _composeAsync = _asyncToGenerator(function* (options) {\n    return yield ExpoMailComposer.composeAsync(options);\n  });\n  return _composeAsync.apply(this, arguments);\n}","map":{"version":3,"names":["ExpoMailComposer","composeAsync","_x","_composeAsync","apply","arguments","_asyncToGenerator","options"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-mail-composer/src/MailComposer.ts"],"sourcesContent":["import ExpoMailComposer from './ExpoMailComposer';\nimport { ComposeOptions, ComposeResult } from './MailComposer.types';\n\nexport async function composeAsync(options: ComposeOptions): Promise<ComposeResult> {\n  return await ExpoMailComposer.composeAsync(options);\n}\n"],"mappings":";;AAAA,OAAOA,gBAAgB;AAGvB,gBAAsBC,YAAYA,CAAAC,EAAA;EAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAEjC,SAAAF,cAAA;EAAAA,aAAA,GAAAG,iBAAA,CAFM,WAA4BC,OAAuB;IACxD,aAAaP,gBAAgB,CAACC,YAAY,CAACM,OAAO,CAAC;EACrD,CAAC;EAAA,OAAAJ,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}