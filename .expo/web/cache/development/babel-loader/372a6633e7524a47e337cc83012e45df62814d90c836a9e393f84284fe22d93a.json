{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ExponentPrint from \"./ExponentPrint\";\nimport { UnavailabilityError } from '@unimodules/core';\nexport var Orientation = ExponentPrint.Orientation;\nexport function printAsync(_x) {\n  return _printAsync.apply(this, arguments);\n}\nfunction _printAsync() {\n  _printAsync = _asyncToGenerator(function* (options) {\n    if (Platform.OS === 'web') {\n      return yield ExponentPrint.print(options);\n    }\n    if (!options.uri && !options.html && Platform.OS === 'ios' && !options.markupFormatterIOS) {\n      throw new Error('Must provide either `html` or `uri` to print');\n    }\n    if (options.uri && options.html) {\n      throw new Error('Must provide exactly one of `html` and `uri` but both were specified');\n    }\n    return yield ExponentPrint.print(options);\n  });\n  return _printAsync.apply(this, arguments);\n}\nexport function selectPrinterAsync() {\n  return _selectPrinterAsync.apply(this, arguments);\n}\nfunction _selectPrinterAsync() {\n  _selectPrinterAsync = _asyncToGenerator(function* () {\n    if (ExponentPrint.selectPrinter) {\n      return yield ExponentPrint.selectPrinter();\n    }\n    throw new UnavailabilityError('Print', 'selectPrinterAsync');\n  });\n  return _selectPrinterAsync.apply(this, arguments);\n}\nexport function printToFileAsync() {\n  return _printToFileAsync.apply(this, arguments);\n}\nfunction _printToFileAsync() {\n  _printToFileAsync = _asyncToGenerator(function* () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return yield ExponentPrint.printToFileAsync(options);\n  });\n  return _printToFileAsync.apply(this, arguments);\n}","map":{"version":3,"names":["ExponentPrint","UnavailabilityError","Orientation","printAsync","_x","_printAsync","apply","arguments","_asyncToGenerator","options","Platform","OS","print","uri","html","markupFormatterIOS","Error","selectPrinterAsync","_selectPrinterAsync","selectPrinter","printToFileAsync","_printToFileAsync","length","undefined"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-print/src/Print.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport ExponentPrint from './ExponentPrint';\nimport { UnavailabilityError } from '@unimodules/core';\nimport {\n  PrintOptions,\n  Printer,\n  OrientationType,\n  FilePrintOptions,\n  FilePrintResult,\n} from './Print.types';\n\nexport {\n  Printer,\n  FilePrintOptions,\n  FilePrintResult,\n  PrintOptions,\n  OrientationType,\n};\n\nexport const Orientation: OrientationType = ExponentPrint.Orientation;\n\nexport async function printAsync(options: PrintOptions): Promise<void> {\n  if (Platform.OS === 'web') {\n    return await ExponentPrint.print(options);\n  }\n  if (!options.uri && !options.html && (Platform.OS === 'ios' && !options.markupFormatterIOS)) {\n    throw new Error('Must provide either `html` or `uri` to print');\n  }\n  if (options.uri && options.html) {\n    throw new Error('Must provide exactly one of `html` and `uri` but both were specified');\n  }\n  return await ExponentPrint.print(options);\n}\n\nexport async function selectPrinterAsync(): Promise<Printer> {\n  if (ExponentPrint.selectPrinter) {\n    return await ExponentPrint.selectPrinter();\n  }\n\n  throw new UnavailabilityError('Print', 'selectPrinterAsync');\n}\n\nexport async function printToFileAsync(options: FilePrintOptions = {}): Promise<FilePrintResult> {\n  return await ExponentPrint.printToFileAsync(options);\n}\n"],"mappings":";;;AACA,OAAOA,aAAa;AACpB,SAASC,mBAAmB,QAAQ,kBAAkB;AAiBtD,OAAO,IAAMC,WAAW,GAAoBF,aAAa,CAACE,WAAW;AAErE,gBAAsBC,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAW/B,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAXM,WAA0BC,OAAqB;IACpD,IAAIC,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;MACzB,aAAaX,aAAa,CAACY,KAAK,CAACH,OAAO,CAAC;;IAE3C,IAAI,CAACA,OAAO,CAACI,GAAG,IAAI,CAACJ,OAAO,CAACK,IAAI,IAAKJ,QAAQ,CAACC,EAAE,KAAK,KAAK,IAAI,CAACF,OAAO,CAACM,kBAAmB,EAAE;MAC3F,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;;IAEjE,IAAIP,OAAO,CAACI,GAAG,IAAIJ,OAAO,CAACK,IAAI,EAAE;MAC/B,MAAM,IAAIE,KAAK,CAAC,sEAAsE,CAAC;;IAEzF,aAAahB,aAAa,CAACY,KAAK,CAACH,OAAO,CAAC;EAC3C,CAAC;EAAA,OAAAJ,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBU,kBAAkBA,CAAA;EAAA,OAAAC,mBAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA;AAMvC,SAAAW,oBAAA;EAAAA,mBAAA,GAAAV,iBAAA,CANM,aAAiC;IACtC,IAAIR,aAAa,CAACmB,aAAa,EAAE;MAC/B,aAAanB,aAAa,CAACmB,aAAa,EAAE;;IAG5C,MAAM,IAAIlB,mBAAmB,CAAC,OAAO,EAAE,oBAAoB,CAAC;EAC9D,CAAC;EAAA,OAAAiB,mBAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBa,gBAAgBA,CAAA;EAAA,OAAAC,iBAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA;AAErC,SAAAc,kBAAA;EAAAA,iBAAA,GAAAb,iBAAA,CAFM,aAA8D;IAAA,IAA9BC,OAAA,GAAAF,SAAA,CAAAe,MAAA,QAAAf,SAAA,QAAAgB,SAAA,GAAAhB,SAAA,MAA4B,EAAE;IACnE,aAAaP,aAAa,CAACoB,gBAAgB,CAACX,OAAO,CAAC;EACtD,CAAC;EAAA,OAAAY,iBAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}