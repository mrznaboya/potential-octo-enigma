{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport invariant from 'invariant';\nvar EventTypes = ['url'];\nvar listeners = [];\nfunction _validateURL(url) {\n  invariant(typeof url === 'string', \"Invalid URL: should be a string. Instead found: \".concat(url));\n  invariant(url, 'Invalid URL: cannot be empty');\n}\nclass Linking {\n  addEventListener(type, listener) {\n    invariant(EventTypes.indexOf(type) !== -1, \"Linking.addEventListener(): \".concat(type, \" is not a valid event\"));\n    var nativeListener = nativeEvent => listener({\n      url: window.location.href,\n      nativeEvent\n    });\n    listeners.push({\n      listener,\n      nativeListener\n    });\n    window.addEventListener('message', nativeListener, false);\n  }\n  removeEventListener(type, listener) {\n    invariant(EventTypes.indexOf(type) !== -1, \"Linking.removeEventListener(): \".concat(type, \" is not a valid event.\"));\n    var listenerIndex = listeners.findIndex(pair => pair.listener === listener);\n    invariant(listenerIndex !== -1, 'Linking.removeEventListener(): cannot remove an unregistered event listener.');\n    var nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  }\n  canOpenURL(url) {\n    return _asyncToGenerator(function* () {\n      _validateURL(url);\n      return true;\n    })();\n  }\n  getInitialURL() {\n    return _asyncToGenerator(function* () {\n      return window.location.href;\n    })();\n  }\n  openURL(url) {\n    return _asyncToGenerator(function* () {\n      _validateURL(url);\n      window.location.href = url;\n    })();\n  }\n}\nexport default new Linking();","map":{"version":3,"names":["invariant","EventTypes","listeners","_validateURL","url","concat","Linking","addEventListener","type","listener","indexOf","nativeListener","nativeEvent","window","location","href","push","removeEventListener","listenerIndex","findIndex","pair","splice","canOpenURL","_asyncToGenerator","getInitialURL","openURL"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo/src/Linking/LinkingModule.web.ts"],"sourcesContent":["import invariant from 'invariant';\n\nimport { URLListener, NativeURLListener } from './Linking.types';\n\nconst EventTypes = ['url'];\n\nconst listeners: Array<{ listener: URLListener; nativeListener: NativeURLListener }> = [];\n\nfunction _validateURL(url: string): void {\n  invariant(typeof url === 'string', `Invalid URL: should be a string. Instead found: ${url}`);\n  invariant(url, 'Invalid URL: cannot be empty');\n}\n\n// TODO: Bacon: For better parity this should extend EventEmitter like React Native.\nclass Linking {\n  addEventListener(type: 'url', listener: URLListener): void {\n    invariant(\n      EventTypes.indexOf(type) !== -1,\n      `Linking.addEventListener(): ${type} is not a valid event`\n    );\n    const nativeListener: NativeURLListener = nativeEvent =>\n      listener({ url: window.location.href, nativeEvent });\n    listeners.push({ listener, nativeListener });\n    window.addEventListener('message', nativeListener, false);\n  }\n\n  removeEventListener(type: 'url', listener: URLListener): void {\n    invariant(\n      EventTypes.indexOf(type) !== -1,\n      `Linking.removeEventListener(): ${type} is not a valid event.`\n    );\n    const listenerIndex = listeners.findIndex(pair => pair.listener === listener);\n    invariant(\n      listenerIndex !== -1,\n      'Linking.removeEventListener(): cannot remove an unregistered event listener.'\n    );\n    const nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  }\n\n  async canOpenURL(url: string): Promise<boolean> {\n    _validateURL(url);\n    return true;\n  }\n\n  async getInitialURL(): Promise<string> {\n    return window.location.href;\n  }\n\n  async openURL(url: string): Promise<void> {\n    _validateURL(url);\n    window.location.href = url;\n  }\n}\n\nexport default new Linking();\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,WAAW;AAIjC,IAAMC,UAAU,GAAG,CAAC,KAAK,CAAC;AAE1B,IAAMC,SAAS,GAAwE,EAAE;AAEzF,SAASC,YAAYA,CAACC,GAAW;EAC/BJ,SAAS,CAAC,OAAOI,GAAG,KAAK,QAAQ,qDAAAC,MAAA,CAAqDD,GAAG,CAAE,CAAC;EAC5FJ,SAAS,CAACI,GAAG,EAAE,8BAA8B,CAAC;AAChD;AAGA,MAAME,OAAO;EACXC,gBAAgBA,CAACC,IAAW,EAAEC,QAAqB;IACjDT,SAAS,CACPC,UAAU,CAACS,OAAO,CAACF,IAAI,CAAC,KAAK,CAAC,CAAC,iCAAAH,MAAA,CACAG,IAAI,0BAAuB,CAC3D;IACD,IAAMG,cAAc,GAAsBC,WAAW,IACnDH,QAAQ,CAAC;MAAEL,GAAG,EAAES,MAAM,CAACC,QAAQ,CAACC,IAAI;MAAEH;IAAW,CAAE,CAAC;IACtDV,SAAS,CAACc,IAAI,CAAC;MAAEP,QAAQ;MAAEE;IAAc,CAAE,CAAC;IAC5CE,MAAM,CAACN,gBAAgB,CAAC,SAAS,EAAEI,cAAc,EAAE,KAAK,CAAC;EAC3D;EAEAM,mBAAmBA,CAACT,IAAW,EAAEC,QAAqB;IACpDT,SAAS,CACPC,UAAU,CAACS,OAAO,CAACF,IAAI,CAAC,KAAK,CAAC,CAAC,oCAAAH,MAAA,CACGG,IAAI,2BAAwB,CAC/D;IACD,IAAMU,aAAa,GAAGhB,SAAS,CAACiB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACX,QAAQ,KAAKA,QAAQ,CAAC;IAC7ET,SAAS,CACPkB,aAAa,KAAK,CAAC,CAAC,EACpB,8EAA8E,CAC/E;IACD,IAAMP,cAAc,GAAGT,SAAS,CAACgB,aAAa,CAAC,CAACP,cAAc;IAC9DE,MAAM,CAACI,mBAAmB,CAAC,SAAS,EAAEN,cAAc,EAAE,KAAK,CAAC;IAC5DT,SAAS,CAACmB,MAAM,CAACH,aAAa,EAAE,CAAC,CAAC;EACpC;EAEMI,UAAUA,CAAClB,GAAW;IAAA,OAAAmB,iBAAA;MAC1BpB,YAAY,CAACC,GAAG,CAAC;MACjB,OAAO,IAAI;IAAC;EACd;EAEMoB,aAAaA,CAAA;IAAA,OAAAD,iBAAA;MACjB,OAAOV,MAAM,CAACC,QAAQ,CAACC,IAAI;IAAC;EAC9B;EAEMU,OAAOA,CAACrB,GAAW;IAAA,OAAAmB,iBAAA;MACvBpB,YAAY,CAACC,GAAG,CAAC;MACjBS,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGX,GAAG;IAAC;EAC7B;;AAGF,eAAe,IAAIE,OAAO,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}