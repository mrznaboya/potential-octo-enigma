{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport Constants from 'expo-constants';\nimport qs from 'qs';\nimport Linking from \"./Linking/Linking\";\nimport { openAuthSessionAsync, dismissAuthSession } from 'expo-web-browser';\nvar BASE_URL = \"https://auth.expo.io\";\nvar _authLock = false;\nfunction startAsync(_x) {\n  return _startAsync.apply(this, arguments);\n}\nfunction _startAsync() {\n  _startAsync = _asyncToGenerator(function* (options) {\n    var returnUrl = options.returnUrl || getDefaultReturnUrl();\n    var authUrl = options.authUrl;\n    var startUrl = getStartUrl(authUrl, returnUrl);\n    if (!authUrl) {\n      throw new Error('No authUrl provided to AuthSession.startAsync. An authUrl is required -- it points to the page where the user will be able to sign in.');\n    }\n    if (_authLock) {\n      if (__DEV__) {\n        console.warn('Attempted to call AuthSession.startAsync multiple times while already active. Only one AuthSession can be active at any given time.');\n      }\n      return {\n        type: 'locked'\n      };\n    }\n    _authLock = true;\n    var result;\n    try {\n      result = yield _openWebBrowserAsync(startUrl, returnUrl);\n    } finally {\n      _authLock = false;\n    }\n    if (!result) {\n      throw new Error('Unexpected missing AuthSession result');\n    }\n    if (!result.url) {\n      if (result.type) {\n        return result;\n      } else {\n        throw new Error('Unexpected AuthSession result with missing type');\n      }\n    }\n    var {\n      params,\n      errorCode\n    } = parseUrl(result.url);\n    return {\n      type: errorCode ? 'error' : 'success',\n      params,\n      errorCode,\n      url: result.url\n    };\n  });\n  return _startAsync.apply(this, arguments);\n}\nfunction dismiss() {\n  dismissAuthSession();\n}\nfunction _openWebBrowserAsync(_x2, _x3) {\n  return _openWebBrowserAsync2.apply(this, arguments);\n}\nfunction _openWebBrowserAsync2() {\n  _openWebBrowserAsync2 = _asyncToGenerator(function* (startUrl, returnUrl) {\n    var result = yield openAuthSessionAsync(startUrl, returnUrl);\n    if (result.type === 'cancel' || result.type === 'dismiss') {\n      return {\n        type: result.type\n      };\n    }\n    return result;\n  });\n  return _openWebBrowserAsync2.apply(this, arguments);\n}\nfunction getStartUrl(authUrl, returnUrl) {\n  var queryString = qs.stringify({\n    authUrl,\n    returnUrl\n  });\n  return \"\".concat(getRedirectUrl(), \"/start?\").concat(queryString);\n}\nfunction getRedirectUrl() {\n  var redirectUrl = \"\".concat(BASE_URL, \"/\").concat(Constants.manifest.id);\n  if (__DEV__) {\n    _warnIfAnonymous(Constants.manifest.id, redirectUrl);\n  }\n  return redirectUrl;\n}\nfunction getDefaultReturnUrl() {\n  return Linking.makeUrl('expo-auth-session');\n}\nfunction parseUrl(url) {\n  var parts = url.split('#');\n  var hash = parts[1];\n  var partsWithoutHash = parts[0].split('?');\n  var queryString = partsWithoutHash[partsWithoutHash.length - 1];\n  var parsedSearch = qs.parse(queryString);\n  var {\n    errorCode\n  } = parsedSearch;\n  delete parsedSearch.errorCode;\n  var parsedHash = {};\n  if (parts[1]) {\n    parsedHash = qs.parse(hash);\n  }\n  var params = _objectSpread({}, parsedSearch, {}, parsedHash);\n  return {\n    errorCode,\n    params\n  };\n}\nfunction _warnIfAnonymous(id, url) {\n  if (id.startsWith('@anonymous/')) {\n    console.warn(\"You are not currently signed in to Expo on your development machine. As a result, the redirect URL for AuthSession will be \\\"\".concat(url, \"\\\". If you are using an OAuth provider that requires whitelisting redirect URLs, we recommend that you do not whitelist this URL -- instead, you should sign in to Expo to acquired a unique redirect URL. Additionally, if you do decide to publish this app using Expo, you will need to register an account to do it.\"));\n  }\n}\nexport default {\n  dismiss,\n  getRedirectUrl,\n  getStartUrl,\n  getDefaultReturnUrl,\n  get getRedirectUri() {\n    console.warn('Use AuthSession.getRedirectUrl rather than AuthSession.getRedirectUri (Url instead of Uri)');\n    return getRedirectUrl;\n  },\n  startAsync\n};","map":{"version":3,"names":["Constants","qs","Linking","openAuthSessionAsync","dismissAuthSession","BASE_URL","_authLock","startAsync","_x","_startAsync","apply","arguments","_asyncToGenerator","options","returnUrl","getDefaultReturnUrl","authUrl","startUrl","getStartUrl","Error","__DEV__","console","warn","type","result","_openWebBrowserAsync","url","params","errorCode","parseUrl","dismiss","_x2","_x3","_openWebBrowserAsync2","queryString","stringify","concat","getRedirectUrl","redirectUrl","manifest","id","_warnIfAnonymous","makeUrl","parts","split","hash","partsWithoutHash","length","parsedSearch","parse","parsedHash","_objectSpread","startsWith","getRedirectUri"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo/src/AuthSession.ts"],"sourcesContent":["import Constants from 'expo-constants';\nimport qs from 'qs';\n\nimport Linking from './Linking/Linking';\nimport { openAuthSessionAsync, dismissAuthSession } from 'expo-web-browser';\n\ntype AuthSessionOptions = {\n  authUrl: string;\n  returnUrl?: string;\n};\n\ntype AuthSessionResult =\n  | { type: 'cancel' | 'dismiss' | 'locked' }\n  | {\n      type: 'error' | 'success';\n      errorCode: string | null;\n      params: { [key: string]: string };\n      url: string;\n    };\n\nconst BASE_URL = `https://auth.expo.io`;\nlet _authLock = false;\n\nasync function startAsync(options: AuthSessionOptions): Promise<AuthSessionResult> {\n  const returnUrl = options.returnUrl || getDefaultReturnUrl();\n  const authUrl = options.authUrl;\n  const startUrl = getStartUrl(authUrl, returnUrl);\n\n  // Prevent accidentally starting to an empty url\n  if (!authUrl) {\n    throw new Error(\n      'No authUrl provided to AuthSession.startAsync. An authUrl is required -- it points to the page where the user will be able to sign in.'\n    );\n  }\n\n  // Prevent multiple sessions from running at the same time, WebBrowser doesn't\n  // support it this makes the behavior predictable.\n  if (_authLock) {\n    if (__DEV__) {\n      console.warn(\n        'Attempted to call AuthSession.startAsync multiple times while already active. Only one AuthSession can be active at any given time.'\n      );\n    }\n\n    return { type: 'locked' };\n  }\n\n  // About to start session, set lock\n  _authLock = true;\n\n  let result;\n  try {\n    result = await _openWebBrowserAsync(startUrl, returnUrl);\n  } finally {\n    // WebBrowser session complete, unset lock\n    _authLock = false;\n  }\n\n  // Handle failures\n  if (!result) {\n    throw new Error('Unexpected missing AuthSession result');\n  }\n  if (!result.url) {\n    if (result.type) {\n      return result;\n    } else {\n      throw new Error('Unexpected AuthSession result with missing type');\n    }\n  }\n\n  let { params, errorCode } = parseUrl(result.url);\n\n  return {\n    type: errorCode ? 'error' : 'success',\n    params,\n    errorCode,\n    url: result.url,\n  };\n}\n\nfunction dismiss() {\n  dismissAuthSession();\n}\n\nasync function _openWebBrowserAsync(startUrl, returnUrl) {\n  // $FlowIssue: Flow thinks the awaited result can be a promise\n  let result = await openAuthSessionAsync(startUrl, returnUrl);\n  if (result.type === 'cancel' || result.type === 'dismiss') {\n    return { type: result.type };\n  }\n\n  return result;\n}\n\nfunction getStartUrl(authUrl: string, returnUrl: string): string {\n  let queryString = qs.stringify({\n    authUrl,\n    returnUrl,\n  });\n\n  return `${getRedirectUrl()}/start?${queryString}`;\n}\n\nfunction getRedirectUrl(): string {\n  const redirectUrl = `${BASE_URL}/${Constants.manifest.id}`;\n  if (__DEV__) {\n    _warnIfAnonymous(Constants.manifest.id, redirectUrl);\n  }\n  return redirectUrl;\n}\n\nfunction getDefaultReturnUrl(): string {\n  return Linking.makeUrl('expo-auth-session');\n}\n\nfunction parseUrl(url: string): { errorCode: string | null; params: { [key: string]: string } } {\n  let parts = url.split('#');\n  let hash = parts[1];\n  let partsWithoutHash = parts[0].split('?');\n  let queryString = partsWithoutHash[partsWithoutHash.length - 1];\n\n  // Get query string (?hello=world)\n  let parsedSearch = qs.parse(queryString);\n\n  // Pull errorCode off of params\n  let { errorCode } = parsedSearch;\n  delete parsedSearch.errorCode;\n\n  // Get hash (#abc=example)\n  let parsedHash = {};\n  if (parts[1]) {\n    parsedHash = qs.parse(hash);\n  }\n\n  // Merge search and hash\n  let params = {\n    ...parsedSearch,\n    ...parsedHash,\n  };\n\n  return {\n    errorCode,\n    params,\n  };\n}\n\nfunction _warnIfAnonymous(id, url): void {\n  if (id.startsWith('@anonymous/')) {\n    console.warn(\n      `You are not currently signed in to Expo on your development machine. As a result, the redirect URL for AuthSession will be \"${url}\". If you are using an OAuth provider that requires whitelisting redirect URLs, we recommend that you do not whitelist this URL -- instead, you should sign in to Expo to acquired a unique redirect URL. Additionally, if you do decide to publish this app using Expo, you will need to register an account to do it.`\n    );\n  }\n}\n\nexport default {\n  dismiss,\n  getRedirectUrl,\n  getStartUrl,\n  getDefaultReturnUrl,\n  get getRedirectUri() {\n    console.warn(\n      'Use AuthSession.getRedirectUrl rather than AuthSession.getRedirectUri (Url instead of Uri)'\n    );\n    return getRedirectUrl;\n  },\n  startAsync,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}