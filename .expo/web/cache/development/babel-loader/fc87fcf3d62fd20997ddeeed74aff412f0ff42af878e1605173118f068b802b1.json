{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport ExponentSegment from \"./ExponentSegment\";\nexport function initialize(options) {\n  if (Platform.OS === 'android') {\n    ExponentSegment.initializeAndroid(options.androidWriteKey);\n  } else if (Platform.OS === 'ios') {\n    ExponentSegment.initializeIOS(options.iosWriteKey);\n  } else {\n    throw new UnavailabilityError('expo-analytics-segment', 'initialize');\n  }\n}\nexport function identify(userId) {\n  if (!ExponentSegment.identify) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identify');\n  }\n  ExponentSegment.identify(userId);\n}\nexport function identifyWithTraits(userId, traits) {\n  if (!ExponentSegment.identifyWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identifyWithTraits');\n  }\n  ExponentSegment.identifyWithTraits(userId, traits);\n}\nexport function group(groupId) {\n  if (!ExponentSegment.group) {\n    throw new UnavailabilityError('expo-analytics-segment', 'group');\n  }\n  ExponentSegment.group(groupId);\n}\nexport function groupWithTraits(groupId, traits) {\n  if (!ExponentSegment.groupWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'groupWithTraits');\n  }\n  ExponentSegment.groupWithTraits(groupId, traits);\n}\nexport function alias(_x, _x2) {\n  return _alias.apply(this, arguments);\n}\nfunction _alias() {\n  _alias = _asyncToGenerator(function* (newId, options) {\n    if (!ExponentSegment.alias) {\n      throw new UnavailabilityError('expo-analytics-segment', 'alias');\n    }\n    return yield ExponentSegment.alias(newId, options);\n  });\n  return _alias.apply(this, arguments);\n}\nexport function reset() {\n  if (!ExponentSegment.reset) {\n    throw new UnavailabilityError('expo-analytics-segment', 'reset');\n  }\n  ExponentSegment.reset();\n}\nexport function track(event) {\n  if (!ExponentSegment.track) {\n    throw new UnavailabilityError('expo-analytics-segment', 'track');\n  }\n  ExponentSegment.track(event);\n}\nexport function trackWithProperties(event, properties) {\n  if (!ExponentSegment.trackWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'trackWithProperties');\n  }\n  ExponentSegment.trackWithProperties(event, properties);\n}\nexport function screen(screenName) {\n  if (!ExponentSegment.screen) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screen');\n  }\n  ExponentSegment.screen(screenName);\n}\nexport function screenWithProperties(event, properties) {\n  if (!ExponentSegment.screenWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screenWithProperties');\n  }\n  ExponentSegment.screenWithProperties(event, properties);\n}\nexport function flush() {\n  if (!ExponentSegment.flush) {\n    throw new UnavailabilityError('expo-analytics-segment', 'flush');\n  }\n  ExponentSegment.flush();\n}\nexport function getEnabledAsync() {\n  return _getEnabledAsync.apply(this, arguments);\n}\nfunction _getEnabledAsync() {\n  _getEnabledAsync = _asyncToGenerator(function* () {\n    if (!ExponentSegment.getEnabledAsync) {\n      throw new UnavailabilityError('expo-analytics-segment', 'getEnabledAsync');\n    }\n    var isEnabledNumber = yield ExponentSegment.getEnabledAsync();\n    return !!isEnabledNumber;\n  });\n  return _getEnabledAsync.apply(this, arguments);\n}\nexport function setEnabledAsync(_x3) {\n  return _setEnabledAsync.apply(this, arguments);\n}\nfunction _setEnabledAsync() {\n  _setEnabledAsync = _asyncToGenerator(function* (enabled) {\n    if (!ExponentSegment.setEnabledAsync) {\n      throw new UnavailabilityError('expo-analytics-segment', 'setEnabledAsync');\n    }\n    yield ExponentSegment.setEnabledAsync(enabled);\n  });\n  return _setEnabledAsync.apply(this, arguments);\n}","map":{"version":3,"names":["UnavailabilityError","ExponentSegment","initialize","options","Platform","OS","initializeAndroid","androidWriteKey","initializeIOS","iosWriteKey","identify","userId","identifyWithTraits","traits","group","groupId","groupWithTraits","alias","_x","_x2","_alias","apply","arguments","_asyncToGenerator","newId","reset","track","event","trackWithProperties","properties","screen","screenName","screenWithProperties","flush","getEnabledAsync","_getEnabledAsync","isEnabledNumber","setEnabledAsync","_x3","_setEnabledAsync","enabled"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-analytics-segment/src/Segment.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport { UnavailabilityError } from '@unimodules/core';\n\nimport ExponentSegment from './ExponentSegment';\n\nexport type SegmentOptions = {\n  androidWriteKey?: string;\n  iosWriteKey?: string;\n};\n\nexport function initialize(options: SegmentOptions): void {\n  if (Platform.OS === 'android') {\n    ExponentSegment.initializeAndroid(options.androidWriteKey);\n  } else if (Platform.OS === 'ios') {\n    ExponentSegment.initializeIOS(options.iosWriteKey);\n  } else {\n    throw new UnavailabilityError('expo-analytics-segment', 'initialize');\n  }\n}\n\nexport function identify(userId: string): void {\n  if (!ExponentSegment.identify) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identify');\n  }\n  ExponentSegment.identify(userId);\n}\n\nexport function identifyWithTraits(userId: string, traits: { [key: string]: any }): void {\n  if (!ExponentSegment.identifyWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identifyWithTraits');\n  }\n  ExponentSegment.identifyWithTraits(userId, traits);\n}\n\nexport function group(groupId: string): void {\n  if (!ExponentSegment.group) {\n    throw new UnavailabilityError('expo-analytics-segment', 'group');\n  }\n  ExponentSegment.group(groupId);\n}\n\nexport function groupWithTraits(groupId: string, traits: { [key: string]: any }): void {\n  if (!ExponentSegment.groupWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'groupWithTraits');\n  }\n  ExponentSegment.groupWithTraits(groupId, traits);\n}\n\nexport async function alias(newId: string, options?: { [key: string]: any }): Promise<boolean> {\n  if (!ExponentSegment.alias) {\n    throw new UnavailabilityError('expo-analytics-segment', 'alias');\n  }\n  return await ExponentSegment.alias(newId, options);\n}\n\nexport function reset(): void {\n  if (!ExponentSegment.reset) {\n    throw new UnavailabilityError('expo-analytics-segment', 'reset');\n  }\n  ExponentSegment.reset();\n}\n\nexport function track(event: string): void {\n  if (!ExponentSegment.track) {\n    throw new UnavailabilityError('expo-analytics-segment', 'track');\n  }\n  ExponentSegment.track(event);\n}\n\nexport function trackWithProperties(event: string, properties: { [key: string]: any }): void {\n  if (!ExponentSegment.trackWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'trackWithProperties');\n  }\n  ExponentSegment.trackWithProperties(event, properties);\n}\n\nexport function screen(screenName: string): void {\n  if (!ExponentSegment.screen) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screen');\n  }\n  ExponentSegment.screen(screenName);\n}\n\nexport function screenWithProperties(event: string, properties: { [key: string]: any }): void {\n  if (!ExponentSegment.screenWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screenWithProperties');\n  }\n  ExponentSegment.screenWithProperties(event, properties);\n}\n\nexport function flush(): void {\n  if (!ExponentSegment.flush) {\n    throw new UnavailabilityError('expo-analytics-segment', 'flush');\n  }\n  ExponentSegment.flush();\n}\n\nexport async function getEnabledAsync(): Promise<boolean> {\n  if (!ExponentSegment.getEnabledAsync) {\n    throw new UnavailabilityError('expo-analytics-segment', 'getEnabledAsync');\n  }\n  const isEnabledNumber = await ExponentSegment.getEnabledAsync();\n  return !!isEnabledNumber;\n}\n\nexport async function setEnabledAsync(enabled: boolean): Promise<void> {\n  if (!ExponentSegment.setEnabledAsync) {\n    throw new UnavailabilityError('expo-analytics-segment', 'setEnabledAsync');\n  }\n  await ExponentSegment.setEnabledAsync(enabled);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}