{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport { getSourceAndEncodeAsync, formatDataAsUrl, isDataUrl, getMimeTypeFromSource } from \"./Utils.web\";\nimport { batchProcessAllSourcesAsync } from \"./ProcessSources.web\";\nexport function processAllImagesAsync(_x) {\n  return _processAllImagesAsync.apply(this, arguments);\n}\nfunction _processAllImagesAsync() {\n  _processAllImagesAsync = _asyncToGenerator(function* (element) {\n    if (!(element instanceof HTMLElement)) {\n      return;\n    }\n    yield processAndMutateNodeBackgroundImageAsync(element);\n    if (element instanceof HTMLImageElement) {\n      yield loadNewImageAsync(element);\n    } else {\n      var children = Array.from(element.childNodes);\n      yield Promise.all(children.map(child => batchProcessAllSourcesAsync(child)));\n    }\n  });\n  return _processAllImagesAsync.apply(this, arguments);\n}\nfunction processAndMutateNodeBackgroundImageAsync(_x2) {\n  return _processAndMutateNodeBackgroundImageAsync.apply(this, arguments);\n}\nfunction _processAndMutateNodeBackgroundImageAsync() {\n  _processAndMutateNodeBackgroundImageAsync = _asyncToGenerator(function* (element) {\n    var background = element.style.getPropertyValue('background');\n    if (background) {\n      var backgroundPropertyValue = yield batchProcessAllSourcesAsync(background);\n      var currentElementBackgroundPriority = element.style.getPropertyPriority('background');\n      element.style.setProperty('background', backgroundPropertyValue, currentElementBackgroundPriority);\n    }\n  });\n  return _processAndMutateNodeBackgroundImageAsync.apply(this, arguments);\n}\nfunction loadNewImageAsync(_x3) {\n  return _loadNewImageAsync.apply(this, arguments);\n}\nfunction _loadNewImageAsync() {\n  _loadNewImageAsync = _asyncToGenerator(function* (element) {\n    if (isDataUrl(element.src)) {\n      return;\n    }\n    var data = yield getSourceAndEncodeAsync(element.src);\n    var dataUrl = formatDataAsUrl(data, getMimeTypeFromSource(element.src));\n    return new Promise((resolve, reject) => {\n      element.onload = () => resolve();\n      element.onerror = () => {\n        reject(\"Image could not be loaded \".concat(element.src));\n      };\n      element.src = dataUrl;\n    });\n  });\n  return _loadNewImageAsync.apply(this, arguments);\n}","map":{"version":3,"names":["getSourceAndEncodeAsync","formatDataAsUrl","isDataUrl","getMimeTypeFromSource","batchProcessAllSourcesAsync","processAllImagesAsync","_x","_processAllImagesAsync","apply","arguments","_asyncToGenerator","element","HTMLElement","processAndMutateNodeBackgroundImageAsync","HTMLImageElement","loadNewImageAsync","children","Array","from","childNodes","Promise","all","map","child","_x2","_processAndMutateNodeBackgroundImageAsync","background","style","getPropertyValue","backgroundPropertyValue","currentElementBackgroundPriority","getPropertyPriority","setProperty","_x3","_loadNewImageAsync","src","data","dataUrl","resolve","reject","onload","onerror","concat"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo/src/takeSnapshotAsync/Images.web.ts"],"sourcesContent":["import {\n  getSourceAndEncodeAsync,\n  formatDataAsUrl,\n  isDataUrl,\n  getMimeTypeFromSource,\n} from './Utils.web';\n\nimport { batchProcessAllSourcesAsync } from './ProcessSources.web';\n\nexport async function processAllImagesAsync(element: HTMLElement): Promise<void> {\n  if (!(element instanceof HTMLElement)) {\n    return;\n  }\n\n  await processAndMutateNodeBackgroundImageAsync(element);\n\n  if (element instanceof HTMLImageElement) {\n    await loadNewImageAsync(element);\n  } else {\n    const children: any[] = Array.from(element.childNodes);\n    await Promise.all(children.map(child => batchProcessAllSourcesAsync(child)));\n  }\n}\n\nasync function processAndMutateNodeBackgroundImageAsync(element: HTMLElement): Promise<void> {\n  const background = element.style.getPropertyValue('background');\n  if (background) {\n    const backgroundPropertyValue = await batchProcessAllSourcesAsync(background);\n    const currentElementBackgroundPriority = element.style.getPropertyPriority('background');\n    element.style.setProperty(\n      'background',\n      backgroundPropertyValue,\n      currentElementBackgroundPriority\n    );\n  }\n}\n\nasync function loadNewImageAsync(element: HTMLImageElement): Promise<any> {\n  if (isDataUrl(element.src)) {\n    return;\n  }\n\n  const data = await getSourceAndEncodeAsync(element.src);\n  const dataUrl = formatDataAsUrl(data, getMimeTypeFromSource(element.src));\n  return new Promise((resolve, reject) => {\n    element.onload = () => resolve();\n    element.onerror = () => {\n      reject(`Image could not be loaded ${element.src}`);\n    };\n    element.src = dataUrl;\n  });\n}\n"],"mappings":";;AAAA,SACEA,uBAAuB,EACvBC,eAAe,EACfC,SAAS,EACTC,qBAAqB;AAGvB,SAASC,2BAA2B;AAEpC,gBAAsBC,qBAAqBA,CAAAC,EAAA;EAAA,OAAAC,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAa1C,SAAAF,uBAAA;EAAAA,sBAAA,GAAAG,iBAAA,CAbM,WAAqCC,OAAoB;IAC9D,IAAI,EAAEA,OAAO,YAAYC,WAAW,CAAC,EAAE;MACrC;;IAGF,MAAMC,wCAAwC,CAACF,OAAO,CAAC;IAEvD,IAAIA,OAAO,YAAYG,gBAAgB,EAAE;MACvC,MAAMC,iBAAiB,CAACJ,OAAO,CAAC;KACjC,MAAM;MACL,IAAMK,QAAQ,GAAUC,KAAK,CAACC,IAAI,CAACP,OAAO,CAACQ,UAAU,CAAC;MACtD,MAAMC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,GAAG,CAACC,KAAK,IAAInB,2BAA2B,CAACmB,KAAK,CAAC,CAAC,CAAC;;EAEhF,CAAC;EAAA,OAAAhB,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEcI,wCAAwCA,CAAAW,GAAA;EAAA,OAAAC,yCAAA,CAAAjB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAgB,0CAAA;EAAAA,yCAAA,GAAAf,iBAAA,CAAvD,WAAwDC,OAAoB;IAC1E,IAAMe,UAAU,GAAGf,OAAO,CAACgB,KAAK,CAACC,gBAAgB,CAAC,YAAY,CAAC;IAC/D,IAAIF,UAAU,EAAE;MACd,IAAMG,uBAAuB,SAASzB,2BAA2B,CAACsB,UAAU,CAAC;MAC7E,IAAMI,gCAAgC,GAAGnB,OAAO,CAACgB,KAAK,CAACI,mBAAmB,CAAC,YAAY,CAAC;MACxFpB,OAAO,CAACgB,KAAK,CAACK,WAAW,CACvB,YAAY,EACZH,uBAAuB,EACvBC,gCAAgC,CACjC;;EAEL,CAAC;EAAA,OAAAL,yCAAA,CAAAjB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEcM,iBAAiBA,CAAAkB,GAAA;EAAA,OAAAC,kBAAA,CAAA1B,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAyB,mBAAA;EAAAA,kBAAA,GAAAxB,iBAAA,CAAhC,WAAiCC,OAAyB;IACxD,IAAIT,SAAS,CAACS,OAAO,CAACwB,GAAG,CAAC,EAAE;MAC1B;;IAGF,IAAMC,IAAI,SAASpC,uBAAuB,CAACW,OAAO,CAACwB,GAAG,CAAC;IACvD,IAAME,OAAO,GAAGpC,eAAe,CAACmC,IAAI,EAAEjC,qBAAqB,CAACQ,OAAO,CAACwB,GAAG,CAAC,CAAC;IACzE,OAAO,IAAIf,OAAO,CAAC,CAACkB,OAAO,EAAEC,MAAM,KAAI;MACrC5B,OAAO,CAAC6B,MAAM,GAAG,MAAMF,OAAO,EAAE;MAChC3B,OAAO,CAAC8B,OAAO,GAAG,MAAK;QACrBF,MAAM,8BAAAG,MAAA,CAA8B/B,OAAO,CAACwB,GAAG,CAAE,CAAC;MACpD,CAAC;MACDxB,OAAO,CAACwB,GAAG,GAAGE,OAAO;IACvB,CAAC,CAAC;EACJ,CAAC;EAAA,OAAAH,kBAAA,CAAA1B,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}