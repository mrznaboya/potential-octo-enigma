{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport { CodedError } from '@unimodules/core';\nimport { FlipType } from \"./ImageManipulator.types\";\nfunction resampleSingle(canvas, width, height) {\n  var resizeCanvas = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var widthSource = canvas.width;\n  var heightSource = canvas.height;\n  width = Math.round(width);\n  height = Math.round(height);\n  var wRatio = widthSource / width;\n  var hRatio = heightSource / height;\n  var wRatioHalf = Math.ceil(wRatio / 2);\n  var hRatioHalf = Math.ceil(hRatio / 2);\n  var ctx = getContext(canvas);\n  var img = ctx.getImageData(0, 0, widthSource, heightSource);\n  var img2 = ctx.createImageData(width, height);\n  var data = img.data;\n  var data2 = img2.data;\n  for (var j = 0; j < height; j++) {\n    for (var i = 0; i < width; i++) {\n      var x2 = (i + j * width) * 4;\n      var weight = 0;\n      var weights = 0;\n      var weightsAlpha = 0;\n      var gx_r = 0;\n      var gx_g = 0;\n      var gx_b = 0;\n      var gx_a = 0;\n      var yCenter = (j + 0.5) * hRatio;\n      var yy_start = Math.floor(j * hRatio);\n      var yy_stop = Math.ceil((j + 1) * hRatio);\n      for (var yy = yy_start; yy < yy_stop; yy++) {\n        var dy = Math.abs(yCenter - (yy + 0.5)) / hRatioHalf;\n        var center_x = (i + 0.5) * wRatio;\n        var w0 = dy * dy;\n        var xx_start = Math.floor(i * wRatio);\n        var xx_stop = Math.ceil((i + 1) * wRatio);\n        for (var xx = xx_start; xx < xx_stop; xx++) {\n          var dx = Math.abs(center_x - (xx + 0.5)) / wRatioHalf;\n          var w = Math.sqrt(w0 + dx * dx);\n          if (w >= 1) {\n            continue;\n          }\n          weight = 2 * w * w * w - 3 * w * w + 1;\n          var xPosition = 4 * (xx + yy * widthSource);\n          gx_a += weight * data[xPosition + 3];\n          weightsAlpha += weight;\n          if (data[xPosition + 3] < 255) {\n            weight = weight * data[xPosition + 3] / 250;\n          }\n          gx_r += weight * data[xPosition];\n          gx_g += weight * data[xPosition + 1];\n          gx_b += weight * data[xPosition + 2];\n          weights += weight;\n        }\n      }\n      data2[x2] = gx_r / weights;\n      data2[x2 + 1] = gx_g / weights;\n      data2[x2 + 2] = gx_b / weights;\n      data2[x2 + 3] = gx_a / weightsAlpha;\n    }\n  }\n  if (resizeCanvas) {\n    canvas.width = width;\n    canvas.height = height;\n  } else {\n    ctx.clearRect(0, 0, widthSource, heightSource);\n  }\n  ctx.putImageData(img2, 0, 0);\n}\nfunction sizeFromAngle(width, height, angle) {\n  var radians = angle * Math.PI / 180;\n  var c = Math.cos(radians);\n  var s = Math.sin(radians);\n  if (s < 0) {\n    s = -s;\n  }\n  if (c < 0) {\n    c = -c;\n  }\n  return {\n    width: height * s + width * c,\n    height: height * c + width * s\n  };\n}\nfunction cropImage(canvas, image) {\n  var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var width = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var height = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  var context = getContext(canvas);\n  context.save();\n  context.drawImage(image, x, y, width, height, 0, 0, width, height);\n}\nfunction drawImage(canvas, img) {\n  var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var angle = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var xFlip = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var yFlip = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  var width = arguments.length > 7 ? arguments[7] : undefined;\n  var height = arguments.length > 8 ? arguments[8] : undefined;\n  var context = getContext(canvas);\n  context.save();\n  if (width == null) {\n    width = img.naturalWidth;\n  }\n  if (height == null) {\n    height = img.naturalHeight;\n  }\n  context.translate(x + canvas.width / 2, y + canvas.height / 2);\n  var radians = 2 * Math.PI - angle * Math.PI / 180;\n  context.rotate(radians);\n  var xScale = xFlip ? -1 : 1;\n  var yScale = yFlip ? -1 : 1;\n  context.scale(xScale, yScale);\n  context.drawImage(img, -img.naturalWidth / 2, -img.naturalHeight / 2, img.naturalWidth, img.naturalHeight);\n  context.restore();\n  return context;\n}\nfunction getContext(canvas) {\n  var ctx = canvas.getContext('2d');\n  if (!ctx) {\n    throw new CodedError('ERR_IMAGE_MANIPULATOR', 'Failed to create canvas context');\n  }\n  return ctx;\n}\nfunction getResults(canvas, options) {\n  var base64;\n  if (options) {\n    var {\n      format = 'png'\n    } = options;\n    if (options.format === 'png' && options.compress !== undefined) {\n      console.warn('compress is not supported with png format.');\n    }\n    var quality = Math.min(1, Math.max(0, options.compress || 1));\n    base64 = canvas.toDataURL('image/' + format, quality);\n  } else {\n    base64 = canvas.toDataURL();\n  }\n  return {\n    uri: base64,\n    width: canvas.width,\n    height: canvas.height,\n    base64\n  };\n}\nfunction loadImageAsync(uri) {\n  return new Promise((resolve, reject) => {\n    var imageSource = new Image();\n    imageSource.onload = () => resolve(imageSource);\n    imageSource.onerror = () => reject(imageSource);\n    imageSource.src = uri;\n  });\n}\nfunction manipulateWithActionAsync(_x, _x2, _x3) {\n  return _manipulateWithActionAsync.apply(this, arguments);\n}\nfunction _manipulateWithActionAsync() {\n  _manipulateWithActionAsync = _asyncToGenerator(function* (uri, action, options) {\n    var canvas = document.createElement('canvas');\n    var imageSource = yield loadImageAsync(uri);\n    canvas.width = imageSource.naturalWidth;\n    canvas.height = imageSource.naturalHeight;\n    if (action.crop) {\n      var {\n        crop\n      } = action;\n      var {\n        originX = 0,\n        originY = 0,\n        width = 0,\n        height = 0\n      } = crop;\n      var clamp = (value, max) => Math.max(0, Math.min(max, value));\n      width = clamp(width, canvas.width);\n      height = clamp(height, canvas.height);\n      originX = clamp(originX, canvas.width);\n      originY = clamp(originY, canvas.height);\n      width = Math.min(originX + width, canvas.width);\n      height = Math.min(originY + height, canvas.height);\n      if (originX - width === 0 || originY - height === 0) {\n        throw new CodedError('ERR_IMAGE_MANIPULATOR_CROP', 'Crop size must be greater than 0: ' + JSON.stringify(crop, null, 2));\n      }\n      canvas.width = width;\n      canvas.height = height;\n      cropImage(canvas, imageSource, originX, originY, width, height);\n    } else if (action.resize) {\n      var {\n        resize\n      } = action;\n      var {\n        width: _width,\n        height: _height\n      } = resize;\n      var imageRatio = imageSource.naturalWidth / imageSource.naturalHeight;\n      var requestedWidth = 0;\n      var requestedHeight = 0;\n      if (_width !== undefined) {\n        requestedWidth = _width;\n        requestedHeight = requestedWidth / imageRatio;\n      }\n      if (_height !== undefined) {\n        requestedHeight = _height;\n        if (requestedWidth === 0) {\n          requestedWidth = requestedHeight * imageRatio;\n        }\n      }\n      var context = getContext(canvas);\n      context.save();\n      context.drawImage(imageSource, 0, 0, imageSource.naturalWidth, imageSource.naturalHeight);\n      resampleSingle(canvas, requestedWidth, requestedHeight, true);\n    } else if (action.flip !== undefined) {\n      var {\n        flip\n      } = action;\n      var xFlip = flip === FlipType.Horizontal;\n      var yFlip = flip === FlipType.Vertical;\n      drawImage(canvas, imageSource, 0, 0, 0, xFlip, yFlip);\n    } else if (action.rotate !== undefined) {\n      var {\n        rotate\n      } = action;\n      var {\n        width: _width2,\n        height: _height2\n      } = sizeFromAngle(imageSource.naturalWidth, imageSource.naturalHeight, rotate);\n      canvas.width = _width2;\n      canvas.height = _height2;\n      drawImage(canvas, imageSource, 0, 0, rotate, false, false, _width2, _height2);\n    } else {\n      var _context = getContext(canvas);\n      _context.save();\n      _context.drawImage(imageSource, 0, 0, imageSource.naturalWidth, imageSource.naturalHeight);\n    }\n    return getResults(canvas, options);\n  });\n  return _manipulateWithActionAsync.apply(this, arguments);\n}\nexport default {\n  get name() {\n    return 'ExpoImageManipulator';\n  },\n  manipulateAsync(uri) {\n    var _arguments = arguments;\n    return _asyncToGenerator(function* () {\n      var actions = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : [];\n      var options = _arguments.length > 2 ? _arguments[2] : undefined;\n      if (!actions.length) {\n        var canvas = document.createElement('canvas');\n        var imageSource = yield loadImageAsync(uri);\n        canvas.width = imageSource.naturalWidth;\n        canvas.height = imageSource.naturalHeight;\n        var ctx = getContext(canvas);\n        ctx.drawImage(imageSource, 0, 0, imageSource.naturalWidth, imageSource.naturalHeight);\n        return getResults(canvas, options);\n      } else {\n        var output;\n        for (var i = 0; i < actions.length; i++) {\n          var action = actions[i];\n          var _options = void 0;\n          if (i === actions.length - 1) {\n            _options = options;\n          }\n          output = yield manipulateWithActionAsync(uri || output.uri, action, _options);\n        }\n        return output;\n      }\n    })();\n  }\n};","map":{"version":3,"names":["CodedError","FlipType","resampleSingle","canvas","width","height","resizeCanvas","arguments","length","undefined","widthSource","heightSource","Math","round","wRatio","hRatio","wRatioHalf","ceil","hRatioHalf","ctx","getContext","img","getImageData","img2","createImageData","data","data2","j","i","x2","weight","weights","weightsAlpha","gx_r","gx_g","gx_b","gx_a","yCenter","yy_start","floor","yy_stop","yy","dy","abs","center_x","w0","xx_start","xx_stop","xx","dx","w","sqrt","xPosition","clearRect","putImageData","sizeFromAngle","angle","radians","PI","c","cos","s","sin","cropImage","image","x","y","context","save","drawImage","xFlip","yFlip","naturalWidth","naturalHeight","translate","rotate","xScale","yScale","scale","restore","getResults","options","base64","format","compress","console","warn","quality","min","max","toDataURL","uri","loadImageAsync","Promise","resolve","reject","imageSource","Image","onload","onerror","src","manipulateWithActionAsync","_x","_x2","_x3","_manipulateWithActionAsync","apply","_asyncToGenerator","action","document","createElement","crop","originX","originY","clamp","value","JSON","stringify","resize","imageRatio","requestedWidth","requestedHeight","flip","Horizontal","Vertical","name","manipulateAsync","_arguments","actions","output","_options"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-image-manipulator/src/ExpoImageManipulator.web.ts"],"sourcesContent":["import { CodedError } from '@unimodules/core';\nimport {\n  ImageResult,\n  SaveOptions,\n  Action,\n  ActionCrop,\n  ActionResize,\n  ActionFlip,\n  ActionRotate,\n  FlipType,\n} from './ImageManipulator.types';\n\n/**\n * Hermite resize - fast image resize/resample using Hermite filter. 1 cpu version!\n * https://stackoverflow.com/a/18320662/4047926\n *\n * @param {HtmlElement} canvas\n * @param {int} width\n * @param {int} height\n * @param {boolean} resizeCanvas if true, canvas will be resized. Optional.\n */\nfunction resampleSingle(\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number,\n  resizeCanvas: boolean = false\n): void {\n  const widthSource = canvas.width;\n  const heightSource = canvas.height;\n  width = Math.round(width);\n  height = Math.round(height);\n\n  const wRatio = widthSource / width;\n  const hRatio = heightSource / height;\n  const wRatioHalf = Math.ceil(wRatio / 2);\n  const hRatioHalf = Math.ceil(hRatio / 2);\n\n  let ctx = getContext(canvas);\n\n  let img = ctx.getImageData(0, 0, widthSource, heightSource);\n  let img2 = ctx.createImageData(width, height);\n  let data = img.data;\n  let data2 = img2.data;\n\n  for (let j = 0; j < height; j++) {\n    for (let i = 0; i < width; i++) {\n      let x2 = (i + j * width) * 4;\n      let weight = 0;\n      let weights = 0;\n      let weightsAlpha = 0;\n      let gx_r = 0;\n      let gx_g = 0;\n      let gx_b = 0;\n      let gx_a = 0;\n      let yCenter = (j + 0.5) * hRatio;\n      let yy_start = Math.floor(j * hRatio);\n      let yy_stop = Math.ceil((j + 1) * hRatio);\n      for (let yy = yy_start; yy < yy_stop; yy++) {\n        let dy = Math.abs(yCenter - (yy + 0.5)) / hRatioHalf;\n        let center_x = (i + 0.5) * wRatio;\n        let w0 = dy * dy; //pre-calc part of w\n        let xx_start = Math.floor(i * wRatio);\n        let xx_stop = Math.ceil((i + 1) * wRatio);\n        for (let xx = xx_start; xx < xx_stop; xx++) {\n          let dx = Math.abs(center_x - (xx + 0.5)) / wRatioHalf;\n          let w = Math.sqrt(w0 + dx * dx);\n          if (w >= 1) {\n            //pixel too far\n            continue;\n          }\n          //hermite filter\n          weight = 2 * w * w * w - 3 * w * w + 1;\n          let xPosition = 4 * (xx + yy * widthSource);\n          //alpha\n          gx_a += weight * data[xPosition + 3];\n          weightsAlpha += weight;\n          //colors\n          if (data[xPosition + 3] < 255) {\n            weight = (weight * data[xPosition + 3]) / 250;\n          }\n          gx_r += weight * data[xPosition];\n          gx_g += weight * data[xPosition + 1];\n          gx_b += weight * data[xPosition + 2];\n          weights += weight;\n        }\n      }\n      data2[x2] = gx_r / weights;\n      data2[x2 + 1] = gx_g / weights;\n      data2[x2 + 2] = gx_b / weights;\n      data2[x2 + 3] = gx_a / weightsAlpha;\n    }\n  }\n  //clear and resize canvas\n  if (resizeCanvas) {\n    canvas.width = width;\n    canvas.height = height;\n  } else {\n    ctx.clearRect(0, 0, widthSource, heightSource);\n  }\n\n  //draw\n  ctx.putImageData(img2, 0, 0);\n}\n\nfunction sizeFromAngle(\n  width: number,\n  height: number,\n  angle: number\n): { width: number; height: number } {\n  const radians = (angle * Math.PI) / 180;\n  let c = Math.cos(radians);\n  let s = Math.sin(radians);\n  if (s < 0) {\n    s = -s;\n  }\n  if (c < 0) {\n    c = -c;\n  }\n  return { width: height * s + width * c, height: height * c + width * s };\n}\n\nfunction cropImage(\n  canvas: HTMLCanvasElement,\n  image: HTMLImageElement,\n  x: number = 0,\n  y: number = 0,\n  width: number = 0,\n  height: number = 0\n): void {\n  const context = getContext(canvas);\n  context.save();\n  context.drawImage(image, x, y, width, height, 0, 0, width, height);\n}\n\nfunction drawImage(\n  canvas: HTMLCanvasElement,\n  img: HTMLImageElement,\n  x: number = 0,\n  y: number = 0,\n  angle: number = 0,\n  xFlip: boolean = false,\n  yFlip: boolean = false,\n  width?: number,\n  height?: number\n): CanvasRenderingContext2D {\n  const context = getContext(canvas);\n  context.save();\n\n  if (width == null) {\n    width = img.naturalWidth as number;\n  }\n  if (height == null) {\n    height = img.naturalHeight as number;\n  }\n\n  // Set the origin to the center of the image\n  context.translate(x + canvas.width / 2, y + canvas.height / 2);\n\n  // Rotate the canvas around the origin\n  const radians = 2 * Math.PI - (angle * Math.PI) / 180;\n  context.rotate(radians);\n\n  // Flip/flop the canvas\n  const xScale = xFlip ? -1 : 1;\n  const yScale = yFlip ? -1 : 1;\n\n  context.scale(xScale, yScale);\n\n  // Draw the image\n  context.drawImage(\n    img,\n    -img.naturalWidth / 2,\n    -img.naturalHeight / 2,\n    img.naturalWidth,\n    img.naturalHeight\n  );\n\n  context.restore();\n  return context;\n}\n\nfunction getContext(canvas: HTMLCanvasElement): CanvasRenderingContext2D {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    throw new CodedError('ERR_IMAGE_MANIPULATOR', 'Failed to create canvas context');\n  }\n  return ctx;\n}\n\nfunction getResults(canvas: HTMLCanvasElement, options?: SaveOptions): ImageResult {\n  let base64;\n  if (options) {\n    const { format = 'png' } = options;\n    if (options.format === 'png' && options.compress !== undefined) {\n      console.warn('compress is not supported with png format.');\n    }\n    const quality = Math.min(1, Math.max(0, options.compress || 1));\n    base64 = canvas.toDataURL('image/' + format, quality);\n  } else {\n    // defaults to PNG with no loss\n    base64 = canvas.toDataURL();\n  }\n  return {\n    uri: base64,\n    width: canvas.width,\n    height: canvas.height,\n    base64,\n  };\n}\n\nfunction loadImageAsync(uri: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const imageSource = new Image();\n    imageSource.onload = () => resolve(imageSource);\n    imageSource.onerror = () => reject(imageSource);\n    imageSource.src = uri;\n  });\n}\n\nasync function manipulateWithActionAsync(\n  uri: string,\n  action: Action,\n  options: SaveOptions\n): Promise<ImageResult> {\n  let canvas = document.createElement('canvas');\n  const imageSource = await loadImageAsync(uri);\n  canvas.width = imageSource.naturalWidth;\n  canvas.height = imageSource.naturalHeight;\n\n  if ((action as ActionCrop).crop) {\n    const { crop } = action as ActionCrop;\n    // ensure values are defined.\n    let { originX = 0, originY = 0, width = 0, height = 0 } = crop;\n    const clamp = (value, max) => Math.max(0, Math.min(max, value));\n    // lock within bounds.\n    width = clamp(width, canvas.width);\n    height = clamp(height, canvas.height);\n    originX = clamp(originX, canvas.width);\n    originY = clamp(originY, canvas.height);\n\n    // lock sum of crop.\n    width = Math.min(originX + width, canvas.width);\n    height = Math.min(originY + height, canvas.height);\n\n    if (originX - width === 0 || originY - height === 0) {\n      throw new CodedError(\n        'ERR_IMAGE_MANIPULATOR_CROP',\n        'Crop size must be greater than 0: ' + JSON.stringify(crop, null, 2)\n      );\n    }\n\n    // change size of canvas.\n    canvas.width = width;\n    canvas.height = height;\n\n    cropImage(canvas, imageSource, originX, originY, width, height);\n  } else if ((action as ActionResize).resize) {\n    const { resize } = action as ActionResize;\n    const { width, height } = resize;\n\n    const imageRatio = imageSource.naturalWidth / imageSource.naturalHeight;\n\n    let requestedWidth: number = 0;\n    let requestedHeight: number = 0;\n    if (width !== undefined) {\n      requestedWidth = width;\n      requestedHeight = requestedWidth / imageRatio;\n    }\n    if (height !== undefined) {\n      requestedHeight = height;\n      if (requestedWidth === 0) {\n        requestedWidth = requestedHeight * imageRatio;\n      }\n    }\n\n    const context = getContext(canvas);\n    context.save();\n    context.drawImage(imageSource, 0, 0, imageSource.naturalWidth, imageSource.naturalHeight);\n\n    resampleSingle(canvas, requestedWidth, requestedHeight, true);\n  } else if ((action as ActionFlip).flip !== undefined) {\n    const { flip } = action as ActionFlip;\n    const xFlip = flip === FlipType.Horizontal;\n    const yFlip = flip === FlipType.Vertical;\n    drawImage(canvas, imageSource, 0, 0, 0, xFlip, yFlip);\n  } else if ((action as ActionRotate).rotate !== undefined) {\n    const { rotate } = action as ActionRotate;\n    const { width, height } = sizeFromAngle(\n      imageSource.naturalWidth,\n      imageSource.naturalHeight,\n      rotate\n    );\n    canvas.width = width;\n    canvas.height = height;\n    drawImage(canvas, imageSource, 0, 0, rotate, false, false, width, height);\n  } else {\n    const context = getContext(canvas);\n    context.save();\n    context.drawImage(imageSource, 0, 0, imageSource.naturalWidth, imageSource.naturalHeight);\n  }\n  return getResults(canvas, options);\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoImageManipulator';\n  },\n  async manipulateAsync(\n    uri: string,\n    actions: Action[] = [],\n    options: SaveOptions\n  ): Promise<ImageResult> {\n    if (!actions.length) {\n      let canvas = document.createElement('canvas');\n      const imageSource = await loadImageAsync(uri);\n      canvas.width = imageSource.naturalWidth;\n      canvas.height = imageSource.naturalHeight;\n      const ctx = getContext(canvas);\n      ctx.drawImage(imageSource, 0, 0, imageSource.naturalWidth, imageSource.naturalHeight);\n      return getResults(canvas, options);\n    } else {\n      let output: ImageResult;\n      for (let i = 0; i < actions.length; i++) {\n        const action = actions[i];\n        let _options;\n        if (i === actions.length - 1) {\n          _options = options;\n        }\n        output = await manipulateWithActionAsync(uri || output!.uri, action, _options);\n      }\n      return output!;\n    }\n  },\n};\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAQEC,QAAQ;AAYV,SAASC,cAAcA,CACrBC,MAAyB,EACzBC,KAAa,EACbC,MAAc,EACe;EAAA,IAA7BC,YAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAwB,KAAK;EAE7B,IAAMG,WAAW,GAAGP,MAAM,CAACC,KAAK;EAChC,IAAMO,YAAY,GAAGR,MAAM,CAACE,MAAM;EAClCD,KAAK,GAAGQ,IAAI,CAACC,KAAK,CAACT,KAAK,CAAC;EACzBC,MAAM,GAAGO,IAAI,CAACC,KAAK,CAACR,MAAM,CAAC;EAE3B,IAAMS,MAAM,GAAGJ,WAAW,GAAGN,KAAK;EAClC,IAAMW,MAAM,GAAGJ,YAAY,GAAGN,MAAM;EACpC,IAAMW,UAAU,GAAGJ,IAAI,CAACK,IAAI,CAACH,MAAM,GAAG,CAAC,CAAC;EACxC,IAAMI,UAAU,GAAGN,IAAI,CAACK,IAAI,CAACF,MAAM,GAAG,CAAC,CAAC;EAExC,IAAII,GAAG,GAAGC,UAAU,CAACjB,MAAM,CAAC;EAE5B,IAAIkB,GAAG,GAAGF,GAAG,CAACG,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEZ,WAAW,EAAEC,YAAY,CAAC;EAC3D,IAAIY,IAAI,GAAGJ,GAAG,CAACK,eAAe,CAACpB,KAAK,EAAEC,MAAM,CAAC;EAC7C,IAAIoB,IAAI,GAAGJ,GAAG,CAACI,IAAI;EACnB,IAAIC,KAAK,GAAGH,IAAI,CAACE,IAAI;EAErB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtB,MAAM,EAAEsB,CAAC,EAAE,EAAE;IAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,KAAK,EAAEwB,CAAC,EAAE,EAAE;MAC9B,IAAIC,EAAE,GAAG,CAACD,CAAC,GAAGD,CAAC,GAAGvB,KAAK,IAAI,CAAC;MAC5B,IAAI0B,MAAM,GAAG,CAAC;MACd,IAAIC,OAAO,GAAG,CAAC;MACf,IAAIC,YAAY,GAAG,CAAC;MACpB,IAAIC,IAAI,GAAG,CAAC;MACZ,IAAIC,IAAI,GAAG,CAAC;MACZ,IAAIC,IAAI,GAAG,CAAC;MACZ,IAAIC,IAAI,GAAG,CAAC;MACZ,IAAIC,OAAO,GAAG,CAACV,CAAC,GAAG,GAAG,IAAIZ,MAAM;MAChC,IAAIuB,QAAQ,GAAG1B,IAAI,CAAC2B,KAAK,CAACZ,CAAC,GAAGZ,MAAM,CAAC;MACrC,IAAIyB,OAAO,GAAG5B,IAAI,CAACK,IAAI,CAAC,CAACU,CAAC,GAAG,CAAC,IAAIZ,MAAM,CAAC;MACzC,KAAK,IAAI0B,EAAE,GAAGH,QAAQ,EAAEG,EAAE,GAAGD,OAAO,EAAEC,EAAE,EAAE,EAAE;QAC1C,IAAIC,EAAE,GAAG9B,IAAI,CAAC+B,GAAG,CAACN,OAAO,IAAII,EAAE,GAAG,GAAG,CAAC,CAAC,GAAGvB,UAAU;QACpD,IAAI0B,QAAQ,GAAG,CAAChB,CAAC,GAAG,GAAG,IAAId,MAAM;QACjC,IAAI+B,EAAE,GAAGH,EAAE,GAAGA,EAAE;QAChB,IAAII,QAAQ,GAAGlC,IAAI,CAAC2B,KAAK,CAACX,CAAC,GAAGd,MAAM,CAAC;QACrC,IAAIiC,OAAO,GAAGnC,IAAI,CAACK,IAAI,CAAC,CAACW,CAAC,GAAG,CAAC,IAAId,MAAM,CAAC;QACzC,KAAK,IAAIkC,EAAE,GAAGF,QAAQ,EAAEE,EAAE,GAAGD,OAAO,EAAEC,EAAE,EAAE,EAAE;UAC1C,IAAIC,EAAE,GAAGrC,IAAI,CAAC+B,GAAG,CAACC,QAAQ,IAAII,EAAE,GAAG,GAAG,CAAC,CAAC,GAAGhC,UAAU;UACrD,IAAIkC,CAAC,GAAGtC,IAAI,CAACuC,IAAI,CAACN,EAAE,GAAGI,EAAE,GAAGA,EAAE,CAAC;UAC/B,IAAIC,CAAC,IAAI,CAAC,EAAE;YAEV;;UAGFpB,MAAM,GAAG,CAAC,GAAGoB,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC;UACtC,IAAIE,SAAS,GAAG,CAAC,IAAIJ,EAAE,GAAGP,EAAE,GAAG/B,WAAW,CAAC;UAE3C0B,IAAI,IAAIN,MAAM,GAAGL,IAAI,CAAC2B,SAAS,GAAG,CAAC,CAAC;UACpCpB,YAAY,IAAIF,MAAM;UAEtB,IAAIL,IAAI,CAAC2B,SAAS,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE;YAC7BtB,MAAM,GAAIA,MAAM,GAAGL,IAAI,CAAC2B,SAAS,GAAG,CAAC,CAAC,GAAI,GAAG;;UAE/CnB,IAAI,IAAIH,MAAM,GAAGL,IAAI,CAAC2B,SAAS,CAAC;UAChClB,IAAI,IAAIJ,MAAM,GAAGL,IAAI,CAAC2B,SAAS,GAAG,CAAC,CAAC;UACpCjB,IAAI,IAAIL,MAAM,GAAGL,IAAI,CAAC2B,SAAS,GAAG,CAAC,CAAC;UACpCrB,OAAO,IAAID,MAAM;;;MAGrBJ,KAAK,CAACG,EAAE,CAAC,GAAGI,IAAI,GAAGF,OAAO;MAC1BL,KAAK,CAACG,EAAE,GAAG,CAAC,CAAC,GAAGK,IAAI,GAAGH,OAAO;MAC9BL,KAAK,CAACG,EAAE,GAAG,CAAC,CAAC,GAAGM,IAAI,GAAGJ,OAAO;MAC9BL,KAAK,CAACG,EAAE,GAAG,CAAC,CAAC,GAAGO,IAAI,GAAGJ,YAAY;;;EAIvC,IAAI1B,YAAY,EAAE;IAChBH,MAAM,CAACC,KAAK,GAAGA,KAAK;IACpBD,MAAM,CAACE,MAAM,GAAGA,MAAM;GACvB,MAAM;IACLc,GAAG,CAACkC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE3C,WAAW,EAAEC,YAAY,CAAC;;EAIhDQ,GAAG,CAACmC,YAAY,CAAC/B,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9B;AAEA,SAASgC,aAAaA,CACpBnD,KAAa,EACbC,MAAc,EACdmD,KAAa;EAEb,IAAMC,OAAO,GAAID,KAAK,GAAG5C,IAAI,CAAC8C,EAAE,GAAI,GAAG;EACvC,IAAIC,CAAC,GAAG/C,IAAI,CAACgD,GAAG,CAACH,OAAO,CAAC;EACzB,IAAII,CAAC,GAAGjD,IAAI,CAACkD,GAAG,CAACL,OAAO,CAAC;EACzB,IAAII,CAAC,GAAG,CAAC,EAAE;IACTA,CAAC,GAAG,CAACA,CAAC;;EAER,IAAIF,CAAC,GAAG,CAAC,EAAE;IACTA,CAAC,GAAG,CAACA,CAAC;;EAER,OAAO;IAAEvD,KAAK,EAAEC,MAAM,GAAGwD,CAAC,GAAGzD,KAAK,GAAGuD,CAAC;IAAEtD,MAAM,EAAEA,MAAM,GAAGsD,CAAC,GAAGvD,KAAK,GAAGyD;EAAC,CAAE;AAC1E;AAEA,SAASE,SAASA,CAChB5D,MAAyB,EACzB6D,KAAuB,EAIL;EAAA,IAHlBC,CAAA,GAAA1D,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAY,CAAC;EAAA,IACb2D,CAAA,GAAA3D,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAY,CAAC;EAAA,IACbH,KAAA,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAgB,CAAC;EAAA,IACjBF,MAAA,GAAAE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,CAAC;EAElB,IAAM4D,OAAO,GAAG/C,UAAU,CAACjB,MAAM,CAAC;EAClCgE,OAAO,CAACC,IAAI,EAAE;EACdD,OAAO,CAACE,SAAS,CAACL,KAAK,EAAEC,CAAC,EAAEC,CAAC,EAAE9D,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAED,KAAK,EAAEC,MAAM,CAAC;AACpE;AAEA,SAASgE,SAASA,CAChBlE,MAAyB,EACzBkB,GAAqB,EAON;EAAA,IANf4C,CAAA,GAAA1D,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAY,CAAC;EAAA,IACb2D,CAAA,GAAA3D,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAY,CAAC;EAAA,IACbiD,KAAA,GAAAjD,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAgB,CAAC;EAAA,IACjB+D,KAAA,GAAA/D,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,KAAK;EAAA,IACtBgE,KAAA,GAAAhE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,KAAK;EAAA,IACtBH,KAAc,GAAAG,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAA,IACdJ,MAAe,GAAAE,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEf,IAAM0D,OAAO,GAAG/C,UAAU,CAACjB,MAAM,CAAC;EAClCgE,OAAO,CAACC,IAAI,EAAE;EAEd,IAAIhE,KAAK,IAAI,IAAI,EAAE;IACjBA,KAAK,GAAGiB,GAAG,CAACmD,YAAsB;;EAEpC,IAAInE,MAAM,IAAI,IAAI,EAAE;IAClBA,MAAM,GAAGgB,GAAG,CAACoD,aAAuB;;EAItCN,OAAO,CAACO,SAAS,CAACT,CAAC,GAAG9D,MAAM,CAACC,KAAK,GAAG,CAAC,EAAE8D,CAAC,GAAG/D,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC;EAG9D,IAAMoD,OAAO,GAAG,CAAC,GAAG7C,IAAI,CAAC8C,EAAE,GAAIF,KAAK,GAAG5C,IAAI,CAAC8C,EAAE,GAAI,GAAG;EACrDS,OAAO,CAACQ,MAAM,CAAClB,OAAO,CAAC;EAGvB,IAAMmB,MAAM,GAAGN,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;EAC7B,IAAMO,MAAM,GAAGN,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;EAE7BJ,OAAO,CAACW,KAAK,CAACF,MAAM,EAAEC,MAAM,CAAC;EAG7BV,OAAO,CAACE,SAAS,CACfhD,GAAG,EACH,CAACA,GAAG,CAACmD,YAAY,GAAG,CAAC,EACrB,CAACnD,GAAG,CAACoD,aAAa,GAAG,CAAC,EACtBpD,GAAG,CAACmD,YAAY,EAChBnD,GAAG,CAACoD,aAAa,CAClB;EAEDN,OAAO,CAACY,OAAO,EAAE;EACjB,OAAOZ,OAAO;AAChB;AAEA,SAAS/C,UAAUA,CAACjB,MAAyB;EAC3C,IAAMgB,GAAG,GAAGhB,MAAM,CAACiB,UAAU,CAAC,IAAI,CAAC;EACnC,IAAI,CAACD,GAAG,EAAE;IACR,MAAM,IAAInB,UAAU,CAAC,uBAAuB,EAAE,iCAAiC,CAAC;;EAElF,OAAOmB,GAAG;AACZ;AAEA,SAAS6D,UAAUA,CAAC7E,MAAyB,EAAE8E,OAAqB;EAClE,IAAIC,MAAM;EACV,IAAID,OAAO,EAAE;IACX,IAAM;MAAEE,MAAM,GAAG;IAAK,CAAE,GAAGF,OAAO;IAClC,IAAIA,OAAO,CAACE,MAAM,KAAK,KAAK,IAAIF,OAAO,CAACG,QAAQ,KAAK3E,SAAS,EAAE;MAC9D4E,OAAO,CAACC,IAAI,CAAC,4CAA4C,CAAC;;IAE5D,IAAMC,OAAO,GAAG3E,IAAI,CAAC4E,GAAG,CAAC,CAAC,EAAE5E,IAAI,CAAC6E,GAAG,CAAC,CAAC,EAAER,OAAO,CAACG,QAAQ,IAAI,CAAC,CAAC,CAAC;IAC/DF,MAAM,GAAG/E,MAAM,CAACuF,SAAS,CAAC,QAAQ,GAAGP,MAAM,EAAEI,OAAO,CAAC;GACtD,MAAM;IAELL,MAAM,GAAG/E,MAAM,CAACuF,SAAS,EAAE;;EAE7B,OAAO;IACLC,GAAG,EAAET,MAAM;IACX9E,KAAK,EAAED,MAAM,CAACC,KAAK;IACnBC,MAAM,EAAEF,MAAM,CAACE,MAAM;IACrB6E;GACD;AACH;AAEA,SAASU,cAAcA,CAACD,GAAW;EACjC,OAAO,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;IACrC,IAAMC,WAAW,GAAG,IAAIC,KAAK,EAAE;IAC/BD,WAAW,CAACE,MAAM,GAAG,MAAMJ,OAAO,CAACE,WAAW,CAAC;IAC/CA,WAAW,CAACG,OAAO,GAAG,MAAMJ,MAAM,CAACC,WAAW,CAAC;IAC/CA,WAAW,CAACI,GAAG,GAAGT,GAAG;EACvB,CAAC,CAAC;AACJ;AAAC,SAEcU,yBAAyBA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,0BAAA,CAAAC,KAAA,OAAAnG,SAAA;AAAA;AAAA,SAAAkG,2BAAA;EAAAA,0BAAA,GAAAE,iBAAA,CAAxC,WACEhB,GAAW,EACXiB,MAAc,EACd3B,OAAoB;IAEpB,IAAI9E,MAAM,GAAG0G,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC7C,IAAMd,WAAW,SAASJ,cAAc,CAACD,GAAG,CAAC;IAC7CxF,MAAM,CAACC,KAAK,GAAG4F,WAAW,CAACxB,YAAY;IACvCrE,MAAM,CAACE,MAAM,GAAG2F,WAAW,CAACvB,aAAa;IAEzC,IAAKmC,MAAqB,CAACG,IAAI,EAAE;MAC/B,IAAM;QAAEA;MAAI,CAAE,GAAGH,MAAoB;MAErC,IAAI;QAAEI,OAAO,GAAG,CAAC;QAAEC,OAAO,GAAG,CAAC;QAAE7G,KAAK,GAAG,CAAC;QAAEC,MAAM,GAAG;MAAC,CAAE,GAAG0G,IAAI;MAC9D,IAAMG,KAAK,GAAGA,CAACC,KAAK,EAAE1B,GAAG,KAAK7E,IAAI,CAAC6E,GAAG,CAAC,CAAC,EAAE7E,IAAI,CAAC4E,GAAG,CAACC,GAAG,EAAE0B,KAAK,CAAC,CAAC;MAE/D/G,KAAK,GAAG8G,KAAK,CAAC9G,KAAK,EAAED,MAAM,CAACC,KAAK,CAAC;MAClCC,MAAM,GAAG6G,KAAK,CAAC7G,MAAM,EAAEF,MAAM,CAACE,MAAM,CAAC;MACrC2G,OAAO,GAAGE,KAAK,CAACF,OAAO,EAAE7G,MAAM,CAACC,KAAK,CAAC;MACtC6G,OAAO,GAAGC,KAAK,CAACD,OAAO,EAAE9G,MAAM,CAACE,MAAM,CAAC;MAGvCD,KAAK,GAAGQ,IAAI,CAAC4E,GAAG,CAACwB,OAAO,GAAG5G,KAAK,EAAED,MAAM,CAACC,KAAK,CAAC;MAC/CC,MAAM,GAAGO,IAAI,CAAC4E,GAAG,CAACyB,OAAO,GAAG5G,MAAM,EAAEF,MAAM,CAACE,MAAM,CAAC;MAElD,IAAI2G,OAAO,GAAG5G,KAAK,KAAK,CAAC,IAAI6G,OAAO,GAAG5G,MAAM,KAAK,CAAC,EAAE;QACnD,MAAM,IAAIL,UAAU,CAClB,4BAA4B,EAC5B,oCAAoC,GAAGoH,IAAI,CAACC,SAAS,CAACN,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CACrE;;MAIH5G,MAAM,CAACC,KAAK,GAAGA,KAAK;MACpBD,MAAM,CAACE,MAAM,GAAGA,MAAM;MAEtB0D,SAAS,CAAC5D,MAAM,EAAE6F,WAAW,EAAEgB,OAAO,EAAEC,OAAO,EAAE7G,KAAK,EAAEC,MAAM,CAAC;KAChE,MAAM,IAAKuG,MAAuB,CAACU,MAAM,EAAE;MAC1C,IAAM;QAAEA;MAAM,CAAE,GAAGV,MAAsB;MACzC,IAAM;QAAExG,KAAK,EAALA,MAAK;QAAEC,MAAM,EAANA;MAAM,CAAE,GAAGiH,MAAM;MAEhC,IAAMC,UAAU,GAAGvB,WAAW,CAACxB,YAAY,GAAGwB,WAAW,CAACvB,aAAa;MAEvE,IAAI+C,cAAc,GAAW,CAAC;MAC9B,IAAIC,eAAe,GAAW,CAAC;MAC/B,IAAIrH,MAAK,KAAKK,SAAS,EAAE;QACvB+G,cAAc,GAAGpH,MAAK;QACtBqH,eAAe,GAAGD,cAAc,GAAGD,UAAU;;MAE/C,IAAIlH,OAAM,KAAKI,SAAS,EAAE;QACxBgH,eAAe,GAAGpH,OAAM;QACxB,IAAImH,cAAc,KAAK,CAAC,EAAE;UACxBA,cAAc,GAAGC,eAAe,GAAGF,UAAU;;;MAIjD,IAAMpD,OAAO,GAAG/C,UAAU,CAACjB,MAAM,CAAC;MAClCgE,OAAO,CAACC,IAAI,EAAE;MACdD,OAAO,CAACE,SAAS,CAAC2B,WAAW,EAAE,CAAC,EAAE,CAAC,EAAEA,WAAW,CAACxB,YAAY,EAAEwB,WAAW,CAACvB,aAAa,CAAC;MAEzFvE,cAAc,CAACC,MAAM,EAAEqH,cAAc,EAAEC,eAAe,EAAE,IAAI,CAAC;KAC9D,MAAM,IAAKb,MAAqB,CAACc,IAAI,KAAKjH,SAAS,EAAE;MACpD,IAAM;QAAEiH;MAAI,CAAE,GAAGd,MAAoB;MACrC,IAAMtC,KAAK,GAAGoD,IAAI,KAAKzH,QAAQ,CAAC0H,UAAU;MAC1C,IAAMpD,KAAK,GAAGmD,IAAI,KAAKzH,QAAQ,CAAC2H,QAAQ;MACxCvD,SAAS,CAAClE,MAAM,EAAE6F,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE1B,KAAK,EAAEC,KAAK,CAAC;KACtD,MAAM,IAAKqC,MAAuB,CAACjC,MAAM,KAAKlE,SAAS,EAAE;MACxD,IAAM;QAAEkE;MAAM,CAAE,GAAGiC,MAAsB;MACzC,IAAM;QAAExG,KAAK,EAALA,OAAK;QAAEC,MAAM,EAANA;MAAM,CAAE,GAAGkD,aAAa,CACrCyC,WAAW,CAACxB,YAAY,EACxBwB,WAAW,CAACvB,aAAa,EACzBE,MAAM,CACP;MACDxE,MAAM,CAACC,KAAK,GAAGA,OAAK;MACpBD,MAAM,CAACE,MAAM,GAAGA,QAAM;MACtBgE,SAAS,CAAClE,MAAM,EAAE6F,WAAW,EAAE,CAAC,EAAE,CAAC,EAAErB,MAAM,EAAE,KAAK,EAAE,KAAK,EAAEvE,OAAK,EAAEC,QAAM,CAAC;KAC1E,MAAM;MACL,IAAM8D,QAAO,GAAG/C,UAAU,CAACjB,MAAM,CAAC;MAClCgE,QAAO,CAACC,IAAI,EAAE;MACdD,QAAO,CAACE,SAAS,CAAC2B,WAAW,EAAE,CAAC,EAAE,CAAC,EAAEA,WAAW,CAACxB,YAAY,EAAEwB,WAAW,CAACvB,aAAa,CAAC;;IAE3F,OAAOO,UAAU,CAAC7E,MAAM,EAAE8E,OAAO,CAAC;EACpC,CAAC;EAAA,OAAAwB,0BAAA,CAAAC,KAAA,OAAAnG,SAAA;AAAA;AAED,eAAe;EACb,IAAIsH,IAAIA,CAAA;IACN,OAAO,sBAAsB;EAC/B,CAAC;EACKC,eAAeA,CACnBnC,GAAW,EAES;IAAA,IAAAoC,UAAA,GAAAxH,SAAA;IAAA,OAAAoG,iBAAA;MAAA,IADpBqB,OAAA,GAAAD,UAAA,CAAAvH,MAAA,QAAAuH,UAAA,QAAAtH,SAAA,GAAAsH,UAAA,MAAoB,EAAE;MAAA,IACtB9C,OAAoB,GAAA8C,UAAA,CAAAvH,MAAA,OAAAuH,UAAA,MAAAtH,SAAA;MAEpB,IAAI,CAACuH,OAAO,CAACxH,MAAM,EAAE;QACnB,IAAIL,MAAM,GAAG0G,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC7C,IAAMd,WAAW,SAASJ,cAAc,CAACD,GAAG,CAAC;QAC7CxF,MAAM,CAACC,KAAK,GAAG4F,WAAW,CAACxB,YAAY;QACvCrE,MAAM,CAACE,MAAM,GAAG2F,WAAW,CAACvB,aAAa;QACzC,IAAMtD,GAAG,GAAGC,UAAU,CAACjB,MAAM,CAAC;QAC9BgB,GAAG,CAACkD,SAAS,CAAC2B,WAAW,EAAE,CAAC,EAAE,CAAC,EAAEA,WAAW,CAACxB,YAAY,EAAEwB,WAAW,CAACvB,aAAa,CAAC;QACrF,OAAOO,UAAU,CAAC7E,MAAM,EAAE8E,OAAO,CAAC;OACnC,MAAM;QACL,IAAIgD,MAAmB;QACvB,KAAK,IAAIrG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoG,OAAO,CAACxH,MAAM,EAAEoB,CAAC,EAAE,EAAE;UACvC,IAAMgF,MAAM,GAAGoB,OAAO,CAACpG,CAAC,CAAC;UACzB,IAAIsG,QAAQ;UACZ,IAAItG,CAAC,KAAKoG,OAAO,CAACxH,MAAM,GAAG,CAAC,EAAE;YAC5B0H,QAAQ,GAAGjD,OAAO;;UAEpBgD,MAAM,SAAS5B,yBAAyB,CAACV,GAAG,IAAIsC,MAAO,CAACtC,GAAG,EAAEiB,MAAM,EAAEsB,QAAQ,CAAC;;QAEhF,OAAOD,MAAO;;IACf;EACH;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}