{"ast":null,"code":"'use strict';\nexport default function invariant(condition, format, a, b, c, d, e, f) {\n  if (format === undefined) {\n    throw new Error('invariant requires an error message argument');\n  }\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, () => args[argIndex++]));\n      error.name = 'Invariant Violation';\n    }\n    error.framesToPop = 1;\n    throw error;\n  }\n}","map":{"version":3,"names":["invariant","condition","format","a","b","c","d","e","f","undefined","Error","error","args","argIndex","replace","name","framesToPop"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-drawer/dist/utils/invariant.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport default function invariant(condition, format, a, b, c, d, e, f) {\n  if (format === undefined) {\n    throw new Error('invariant requires an error message argument');\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, () => args[argIndex++]));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}"],"mappings":"AASA,YAAY;AAaZ,eAAe,SAASA,SAASA,CAACC,SAAS,EAAEC,MAAM,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACrE,IAAIN,MAAM,KAAKO,SAAS,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EAEA,IAAI,CAACT,SAAS,EAAE;IACd,IAAIU,KAAK;IACT,IAAIT,MAAM,KAAKO,SAAS,EAAE;MACxBE,KAAK,GAAG,IAAID,KAAK,CAAC,+HAA+H,CAAC;IACpJ,CAAC,MAAM;MACL,IAAIE,IAAI,GAAG,CAACT,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;MAC7B,IAAIK,QAAQ,GAAG,CAAC;MAChBF,KAAK,GAAG,IAAID,KAAK,CAACR,MAAM,CAACY,OAAO,CAAC,KAAK,EAAE,MAAMF,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC,CAAC;MAChEF,KAAK,CAACI,IAAI,GAAG,qBAAqB;IACpC;IAEAJ,KAAK,CAACK,WAAW,GAAG,CAAC;IACrB,MAAML,KAAK;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}