{"ast":null,"code":"var _jsxFileName = \"/Users/zuyax/Developer/rn-starter/node_modules/react-native-tab-view/src/PagerPan.js\";\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { PagerRendererPropType } from \"./PropTypes\";\nvar DEAD_ZONE = 12;\nvar DefaultTransitionSpec = {\n  timing: Animated.spring,\n  tension: 300,\n  friction: 35\n};\nexport default class PagerPan extends React.Component {\n  constructor() {\n    var _this;\n    super(...arguments);\n    _this = this;\n    this._currentIndex = this.props.navigationState.index;\n    this._isMovingHorizontally = (evt, gestureState) => {\n      return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2);\n    };\n    this._canMoveScreen = (evt, gestureState) => {\n      if (this.props.swipeEnabled === false) {\n        return false;\n      }\n      var {\n        navigationState: {\n          routes\n        }\n      } = this.props;\n      return this._isMovingHorizontally(evt, gestureState) && (gestureState.dx >= DEAD_ZONE && this._currentIndex > 0 || gestureState.dx <= -DEAD_ZONE && this._currentIndex < routes.length - 1);\n    };\n    this._startGesture = () => {\n      this.props.onSwipeStart && this.props.onSwipeStart();\n      this.props.panX.stopAnimation();\n    };\n    this._respondToGesture = (evt, gestureState) => {\n      var {\n        navigationState: {\n          routes,\n          index\n        }\n      } = this.props;\n      if (gestureState.dx > 0 && index <= 0 || gestureState.dx < 0 && index >= routes.length - 1) {\n        return;\n      }\n      this.props.panX.setValue(gestureState.dx);\n    };\n    this._finishGesture = (evt, gestureState) => {\n      var {\n        navigationState,\n        layout,\n        swipeDistanceThreshold = layout.width / 1.75\n      } = this.props;\n      var {\n        swipeVelocityThreshold = 0.15\n      } = this.props;\n      this.props.onSwipeEnd && this.props.onSwipeEnd();\n      if (Platform.OS === 'android') {\n        swipeVelocityThreshold /= 1000000;\n      }\n      var currentIndex = typeof this._pendingIndex === 'number' ? this._pendingIndex : this._currentIndex;\n      var nextIndex = currentIndex;\n      if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy) && (Math.abs(gestureState.dx) > swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold)) {\n        nextIndex = Math.round(Math.min(Math.max(0, currentIndex - gestureState.dx / Math.abs(gestureState.dx)), navigationState.routes.length - 1));\n        this._currentIndex = nextIndex;\n      }\n      if (!isFinite(nextIndex) || !this.props.canJumpToTab({\n        route: this.props.navigationState.routes[nextIndex]\n      })) {\n        nextIndex = currentIndex;\n      }\n      this._transitionTo(nextIndex);\n    };\n    this._transitionTo = function (index) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var offset = -index * _this.props.layout.width;\n      var route = _this.props.navigationState.routes[index];\n      if (_this.props.animationEnabled === false || animated === false) {\n        _this.props.panX.setValue(0);\n        _this.props.offsetX.setValue(offset);\n        _this.props.jumpTo(route.key);\n        return;\n      }\n      var {\n          timing\n        } = DefaultTransitionSpec,\n        transitionConfig = _objectWithoutProperties(DefaultTransitionSpec, [\"timing\"]);\n      Animated.parallel([timing(_this.props.panX, _objectSpread({}, transitionConfig, {\n        toValue: 0\n      })), timing(_this.props.offsetX, _objectSpread({}, transitionConfig, {\n        toValue: offset\n      }))]).start(_ref => {\n        var {\n          finished\n        } = _ref;\n        if (finished) {\n          _this.props.jumpTo(route.key);\n          _this.props.onAnimationEnd && _this.props.onAnimationEnd();\n          _this._pendingIndex = null;\n        }\n      });\n      _this._pendingIndex = index;\n    };\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: this._canMoveScreen,\n      onMoveShouldSetPanResponderCapture: this._canMoveScreen,\n      onPanResponderGrant: this._startGesture,\n      onPanResponderMove: this._respondToGesture,\n      onPanResponderTerminate: this._finishGesture,\n      onPanResponderRelease: this._finishGesture,\n      onPanResponderTerminationRequest: () => true\n    });\n  }\n  componentDidUpdate(prevProps) {\n    this._currentIndex = this.props.navigationState.index;\n    if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {\n      this._transitionTo(this.props.navigationState.index, false);\n    } else if (prevProps.navigationState.index !== this.props.navigationState.index) {\n      this._transitionTo(this.props.navigationState.index);\n    }\n  }\n  render() {\n    var {\n      panX,\n      offsetX,\n      navigationState,\n      layout,\n      children\n    } = this.props;\n    var {\n      width\n    } = layout;\n    var {\n      routes\n    } = navigationState;\n    var maxTranslate = width * (routes.length - 1);\n    var translateX = Animated.multiply(Animated.add(panX, offsetX).interpolate({\n      inputRange: [-maxTranslate, 0],\n      outputRange: [-maxTranslate, 0],\n      extrapolate: 'clamp'\n    }), I18nManager.isRTL ? -1 : 1);\n    return React.createElement(Animated.View, _extends({\n      style: [styles.sheet, width ? {\n        width: routes.length * width,\n        transform: [{\n          translateX\n        }]\n      } : null]\n    }, this._panResponder.panHandlers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      }\n    }), React.Children.map(children, (child, i) => {\n      var route = navigationState.routes[i];\n      var focused = i === navigationState.index;\n      return React.createElement(View, {\n        key: route.key,\n        testID: this.props.getTestID({\n          route\n        }),\n        style: width ? {\n          width\n        } : focused ? StyleSheet.absoluteFill : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        }\n      }, focused || width ? child : null);\n    }));\n  }\n}\nPagerPan.propTypes = _objectSpread({}, PagerRendererPropType, {\n  swipeDistanceThreshold: PropTypes.number,\n  swipeVelocityThreshold: PropTypes.number\n});\nPagerPan.defaultProps = {\n  canJumpToTab: () => true,\n  initialLayout: {\n    height: 0,\n    width: 0\n  }\n};\nvar styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch'\n  }\n});","map":{"version":3,"names":["React","PropTypes","Animated","I18nManager","PanResponder","StyleSheet","View","Platform","PagerRendererPropType","DEAD_ZONE","DefaultTransitionSpec","timing","spring","tension","friction","PagerPan","Component","constructor","_this","arguments","this","_currentIndex","props","navigationState","index","_isMovingHorizontally","evt","gestureState","Math","abs","dx","dy","vx","vy","_canMoveScreen","swipeEnabled","routes","length","_startGesture","onSwipeStart","panX","stopAnimation","_respondToGesture","setValue","_finishGesture","layout","swipeDistanceThreshold","width","swipeVelocityThreshold","onSwipeEnd","OS","currentIndex","_pendingIndex","nextIndex","round","min","max","isFinite","canJumpToTab","route","_transitionTo","animated","undefined","offset","animationEnabled","offsetX","jumpTo","key","transitionConfig","_objectWithoutProperties","parallel","_objectSpread","toValue","start","_ref","finished","onAnimationEnd","_panResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","componentDidUpdate","prevProps","render","children","maxTranslate","translateX","multiply","add","interpolate","inputRange","outputRange","extrapolate","isRTL","createElement","_extends","style","styles","sheet","transform","panHandlers","__source","fileName","_jsxFileName","lineNumber","Children","map","child","i","focused","testID","getTestID","absoluteFill","propTypes","number","defaultProps","initialLayout","height","flex","flexDirection","alignItems"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-native-tab-view/src/PagerPan.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  I18nManager,\n  PanResponder,\n  StyleSheet,\n  View,\n  Platform,\n} from 'react-native';\nimport { PagerRendererPropType } from './PropTypes';\nimport type { PagerRendererProps } from './TypeDefinitions';\n\ntype GestureEvent = {\n  nativeEvent: {\n    changedTouches: Array<*>,\n    identifier: number,\n    locationX: number,\n    locationY: number,\n    pageX: number,\n    pageY: number,\n    target: number,\n    timestamp: number,\n    touches: Array<*>,\n  },\n};\n\ntype GestureState = {\n  stateID: number,\n  moveX: number,\n  moveY: number,\n  x0: number,\n  y0: number,\n  dx: number,\n  dy: number,\n  vx: number,\n  vy: number,\n  numberActiveTouches: number,\n};\n\ntype Props<T> = PagerRendererProps<T> & {\n  swipeDistanceThreshold?: number,\n  swipeVelocityThreshold?: number,\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  tension: 300,\n  friction: 35,\n};\n\nexport default class PagerPan<T: *> extends React.Component<Props<T>> {\n  static propTypes = {\n    ...PagerRendererPropType,\n    swipeDistanceThreshold: PropTypes.number,\n    swipeVelocityThreshold: PropTypes.number,\n  };\n\n  static defaultProps = {\n    canJumpToTab: () => true,\n    initialLayout: {\n      height: 0,\n      width: 0,\n    },\n  };\n\n  componentDidUpdate(prevProps: Props<T>) {\n    this._currentIndex = this.props.navigationState.index;\n\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this._transitionTo(this.props.navigationState.index, false);\n    } else if (\n      prevProps.navigationState.index !== this.props.navigationState.index\n    ) {\n      this._transitionTo(this.props.navigationState.index);\n    }\n  }\n\n  _currentIndex = this.props.navigationState.index;\n  _pendingIndex: ?number;\n\n  _isMovingHorizontally = (evt: GestureEvent, gestureState: GestureState) => {\n    return (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n    );\n  };\n\n  _canMoveScreen = (evt: GestureEvent, gestureState: GestureState) => {\n    if (this.props.swipeEnabled === false) {\n      return false;\n    }\n\n    const {\n      navigationState: { routes },\n    } = this.props;\n\n    return (\n      this._isMovingHorizontally(evt, gestureState) &&\n      ((gestureState.dx >= DEAD_ZONE && this._currentIndex > 0) ||\n        (gestureState.dx <= -DEAD_ZONE &&\n          this._currentIndex < routes.length - 1))\n    );\n  };\n\n  _startGesture = () => {\n    this.props.onSwipeStart && this.props.onSwipeStart();\n    this.props.panX.stopAnimation();\n  };\n\n  _respondToGesture = (evt: GestureEvent, gestureState: GestureState) => {\n    const {\n      navigationState: { routes, index },\n    } = this.props;\n\n    if (\n      // swiping left\n      (gestureState.dx > 0 && index <= 0) ||\n      // swiping right\n      (gestureState.dx < 0 && index >= routes.length - 1)\n    ) {\n      return;\n    }\n\n    this.props.panX.setValue(gestureState.dx);\n  };\n\n  _finishGesture = (evt: GestureEvent, gestureState: GestureState) => {\n    const {\n      navigationState,\n      layout,\n      swipeDistanceThreshold = layout.width / 1.75,\n    } = this.props;\n\n    let { swipeVelocityThreshold = 0.15 } = this.props;\n\n    this.props.onSwipeEnd && this.props.onSwipeEnd();\n\n    if (Platform.OS === 'android') {\n      // on Android, velocity is way lower due to timestamp being in nanosecond\n      // normalize it to have the same velocity on both iOS and Android\n      swipeVelocityThreshold /= 1000000;\n    }\n\n    const currentIndex =\n      typeof this._pendingIndex === 'number'\n        ? this._pendingIndex\n        : this._currentIndex;\n\n    let nextIndex = currentIndex;\n\n    if (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n    ) {\n      nextIndex = Math.round(\n        Math.min(\n          Math.max(\n            0,\n            currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n          ),\n          navigationState.routes.length - 1\n        )\n      );\n\n      this._currentIndex = nextIndex;\n    }\n\n    if (\n      !isFinite(nextIndex) ||\n      !this.props.canJumpToTab({\n        route: this.props.navigationState.routes[nextIndex],\n      })\n    ) {\n      nextIndex = currentIndex;\n    }\n\n    this._transitionTo(nextIndex);\n  };\n\n  _transitionTo = (index: number, animated: boolean = true) => {\n    const offset = -index * this.props.layout.width;\n    const route = this.props.navigationState.routes[index];\n\n    if (this.props.animationEnabled === false || animated === false) {\n      this.props.panX.setValue(0);\n      this.props.offsetX.setValue(offset);\n      this.props.jumpTo(route.key);\n      return;\n    }\n\n    const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n    Animated.parallel([\n      timing(this.props.panX, {\n        ...transitionConfig,\n        toValue: 0,\n      }),\n      timing(this.props.offsetX, {\n        ...transitionConfig,\n        toValue: offset,\n      }),\n    ]).start(({ finished }) => {\n      if (finished) {\n        this.props.jumpTo(route.key);\n        this.props.onAnimationEnd && this.props.onAnimationEnd();\n        this._pendingIndex = null;\n      }\n    });\n\n    this._pendingIndex = index;\n  };\n\n  _panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: this._canMoveScreen,\n    onMoveShouldSetPanResponderCapture: this._canMoveScreen,\n    onPanResponderGrant: this._startGesture,\n    onPanResponderMove: this._respondToGesture,\n    onPanResponderTerminate: this._finishGesture,\n    onPanResponderRelease: this._finishGesture,\n    onPanResponderTerminationRequest: () => true,\n  });\n\n  render() {\n    const { panX, offsetX, navigationState, layout, children } = this.props;\n    const { width } = layout;\n    const { routes } = navigationState;\n    const maxTranslate = width * (routes.length - 1);\n    const translateX = Animated.multiply(\n      Animated.add(panX, offsetX).interpolate({\n        inputRange: [-maxTranslate, 0],\n        outputRange: [-maxTranslate, 0],\n        extrapolate: 'clamp',\n      }),\n      I18nManager.isRTL ? -1 : 1\n    );\n\n    return (\n      <Animated.View\n        style={[\n          styles.sheet,\n          width\n            ? {\n                width: routes.length * width,\n                transform: [{ translateX }],\n              }\n            : null,\n        ]}\n        {...this._panResponder.panHandlers}\n      >\n        {React.Children.map(children, (child, i) => {\n          const route = navigationState.routes[i];\n          const focused = i === navigationState.index;\n\n          return (\n            <View\n              key={route.key}\n              testID={this.props.getTestID({ route })}\n              style={\n                width ? { width } : focused ? StyleSheet.absoluteFill : null\n              }\n            >\n              {focused || width ? child : null}\n            </View>\n          );\n        })}\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}