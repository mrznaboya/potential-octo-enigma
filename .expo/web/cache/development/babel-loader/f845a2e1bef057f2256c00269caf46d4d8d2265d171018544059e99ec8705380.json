{"ast":null,"code":"import createIconSet from \"./create-icon-set\";\nexport default function createIconSetFromIcoMoon(config, fontFamilyArg, fontFile) {\n  var glyphMap = {};\n  config.icons.forEach(icon => {\n    icon.properties.name.split(/\\s*,\\s*/g).forEach(name => {\n      glyphMap[name] = icon.properties.code;\n    });\n  });\n  var fontFamily = fontFamilyArg || config.preferences.fontPref.metadata.fontFamily;\n  return createIconSet(glyphMap, fontFamily, fontFile || \"\".concat(fontFamily, \".ttf\"));\n}","map":{"version":3,"names":["createIconSet","createIconSetFromIcoMoon","config","fontFamilyArg","fontFile","glyphMap","icons","forEach","icon","properties","name","split","code","fontFamily","preferences","fontPref","metadata","concat"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/create-icon-set-from-icomoon.js"],"sourcesContent":["import createIconSet from './create-icon-set';\n\nexport default function createIconSetFromIcoMoon(\n  config,\n  fontFamilyArg,\n  fontFile,\n) {\n  const glyphMap = {};\n  config.icons.forEach(icon => {\n    icon.properties.name.split(/\\s*,\\s*/g).forEach(name => {\n      glyphMap[name] = icon.properties.code;\n    });\n  });\n\n  const fontFamily =\n    fontFamilyArg || config.preferences.fontPref.metadata.fontFamily;\n\n  return createIconSet(glyphMap, fontFamily, fontFile || `${fontFamily}.ttf`);\n}\n"],"mappings":"AAAA,OAAOA,aAAa;AAEpB,eAAe,SAASC,wBAAwBA,CAC9CC,MAAM,EACNC,aAAa,EACbC,QAAQ,EACR;EACA,IAAMC,QAAQ,GAAG,CAAC,CAAC;EACnBH,MAAM,CAACI,KAAK,CAACC,OAAO,CAACC,IAAI,IAAI;IAC3BA,IAAI,CAACC,UAAU,CAACC,IAAI,CAACC,KAAK,CAAC,UAAU,CAAC,CAACJ,OAAO,CAACG,IAAI,IAAI;MACrDL,QAAQ,CAACK,IAAI,CAAC,GAAGF,IAAI,CAACC,UAAU,CAACG,IAAI;IACvC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,IAAMC,UAAU,GACdV,aAAa,IAAID,MAAM,CAACY,WAAW,CAACC,QAAQ,CAACC,QAAQ,CAACH,UAAU;EAElE,OAAOb,aAAa,CAACK,QAAQ,EAAEQ,UAAU,EAAET,QAAQ,OAAAa,MAAA,CAAOJ,UAAU,SAAM,CAAC;AAC7E"},"metadata":{},"sourceType":"module","externalDependencies":[]}