{"ast":null,"code":"export default class CodedError extends Error {\n  constructor(code, message) {\n    super(message);\n    this.code = code;\n  }\n}","map":{"version":3,"names":["CodedError","Error","constructor","code","message"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/@unimodules/core/src/CodedError.ts"],"sourcesContent":["/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport default class CodedError extends Error {\n  code: string;\n  info?: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n"],"mappings":"AAKA,eAAc,MAAOA,UAAW,SAAQC,KAAK;EAI3CC,YAAYC,IAAY,EAAEC,OAAe;IACvC,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACD,IAAI,GAAGA,IAAI;EAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}