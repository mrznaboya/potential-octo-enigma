{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport invariant from 'invariant';\nimport { CameraType, ImageType } from \"./CameraModule.types\";\nimport * as Utils from \"./CameraUtils\";\nimport { FacingModeToCameraType, PictureSizes } from \"./constants\";\nimport * as CapabilityUtils from \"./CapabilityUtils\";\nexport { ImageType, CameraType };\nclass CameraModule {\n  constructor(videoElement) {\n    this.stream = null;\n    this.settings = null;\n    this.onCameraReady = () => {};\n    this.onMountError = () => {};\n    this._isStartingCamera = false;\n    this._autoFocus = 'continuous';\n    this._flashMode = 'off';\n    this._whiteBalance = 'continuous';\n    this._cameraType = CameraType.front;\n    this._zoom = 1;\n    this.getAvailablePictureSizes = function () {\n      var _ref = _asyncToGenerator(function* (ratio) {\n        return PictureSizes;\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.unmount = () => {\n      this.settings = null;\n      this.stream = null;\n    };\n    this.videoElement = videoElement;\n    if (this.videoElement) {\n      this.videoElement.addEventListener('loadedmetadata', () => {\n        this._syncTrackCapabilities();\n      });\n    }\n  }\n  get autoFocus() {\n    return this._autoFocus;\n  }\n  setAutoFocusAsync(value) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (value === _this.autoFocus) {\n        return;\n      }\n      _this._autoFocus = value;\n      yield _this._syncTrackCapabilities();\n    })();\n  }\n  get flashMode() {\n    return this._flashMode;\n  }\n  setFlashModeAsync(value) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (value === _this2.flashMode) {\n        return;\n      }\n      _this2._flashMode = value;\n      yield _this2._syncTrackCapabilities();\n    })();\n  }\n  get whiteBalance() {\n    return this._whiteBalance;\n  }\n  setWhiteBalanceAsync(value) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (value === _this3.whiteBalance) {\n        return;\n      }\n      _this3._whiteBalance = value;\n      yield _this3._syncTrackCapabilities();\n    })();\n  }\n  get type() {\n    return this._cameraType;\n  }\n  setTypeAsync(value) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (value === _this4._cameraType) {\n        return;\n      }\n      _this4._cameraType = value;\n      yield _this4.resumePreview();\n    })();\n  }\n  get zoom() {\n    return this._zoom;\n  }\n  setZoomAsync(value) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (value === _this5.zoom) {\n        return;\n      }\n      _this5._zoom = value;\n      yield _this5._syncTrackCapabilities();\n    })();\n  }\n  setPictureSize(value) {\n    if (value === this._pictureSize) {\n      return;\n    }\n    invariant(PictureSizes.includes(value), \"expo-camera: CameraModule.setPictureSize(): invalid size supplied \".concat(value, \", expected one of: \").concat(PictureSizes.join(', ')));\n    var [width, height] = value.split('x');\n    var aspectRatio = parseFloat(width) / parseFloat(height);\n    this._pictureSize = value;\n  }\n  onCapabilitiesReady(track) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      var capabilities = track.getCapabilities();\n      var constraints = {};\n      if (capabilities.zoom) {\n        var {\n          min,\n          max\n        } = capabilities.zoom;\n        constraints.zoom = Math.min(max, Math.max(min, _this6._zoom));\n      }\n      if (capabilities.focusMode) {\n        constraints.focusMode = CapabilityUtils.convertAutoFocusJSONToNative(_this6.autoFocus);\n      }\n      if (capabilities.torch) {\n        constraints.torch = CapabilityUtils.convertFlashModeJSONToNative(_this6.flashMode);\n      }\n      if (capabilities.whiteBalance) {\n        constraints.whiteBalance = _this6.whiteBalance;\n      }\n      yield track.applyConstraints({\n        advanced: [constraints]\n      });\n    })();\n  }\n  _syncTrackCapabilities() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (_this7.stream) {\n        yield Promise.all(_this7.stream.getTracks().map(track => _this7.onCapabilitiesReady(track)));\n      }\n    })();\n  }\n  setVideoSource(stream) {\n    if ('srcObject' in this.videoElement) {\n      this.videoElement.srcObject = stream;\n    } else {\n      this.videoElement['src'] = window.URL.createObjectURL(stream);\n    }\n  }\n  setSettings(stream) {\n    this.settings = null;\n    if (stream && this.stream) {\n      this.settings = this.stream.getTracks()[0].getSettings();\n    }\n  }\n  setStream(stream) {\n    this.stream = stream;\n    this.setSettings(stream);\n    this.setVideoSource(stream);\n  }\n  getActualCameraType() {\n    if (this.settings) {\n      var {\n        facingMode = 'user'\n      } = this.settings;\n      return FacingModeToCameraType[facingMode];\n    }\n    return null;\n  }\n  ensureCameraIsRunningAsync() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this8.stream) {\n        yield _this8.resumePreview();\n      }\n    })();\n  }\n  resumePreview() {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      if (_this9._isStartingCamera) {\n        return null;\n      }\n      _this9._isStartingCamera = true;\n      try {\n        _this9.pausePreview();\n        var stream = yield Utils.getStreamDevice(_this9.type);\n        _this9.setStream(stream);\n        _this9._isStartingCamera = false;\n        _this9.onCameraReady();\n        return stream;\n      } catch (error) {\n        _this9._isStartingCamera = false;\n        _this9.onMountError({\n          nativeEvent: error\n        });\n      }\n      return null;\n    })();\n  }\n  takePicture(config) {\n    var base64 = Utils.captureImage(this.videoElement, config);\n    var capturedPicture = {\n      uri: base64,\n      base64,\n      width: 0,\n      height: 0\n    };\n    if (this.settings) {\n      var {\n        width = 0,\n        height = 0\n      } = this.settings;\n      capturedPicture.width = width;\n      capturedPicture.height = height;\n      capturedPicture.exif = this.settings;\n    }\n    if (config.onPictureSaved) {\n      config.onPictureSaved({\n        nativeEvent: {\n          data: capturedPicture,\n          id: config.id\n        }\n      });\n    }\n    return capturedPicture;\n  }\n  pausePreview() {\n    if (!this.stream) {\n      return;\n    }\n    this.stream.getTracks().forEach(track => track.stop());\n    this.setStream(null);\n  }\n}\nexport default CameraModule;","map":{"version":3,"names":["invariant","CameraType","ImageType","Utils","FacingModeToCameraType","PictureSizes","CapabilityUtils","CameraModule","constructor","videoElement","stream","settings","onCameraReady","onMountError","_isStartingCamera","_autoFocus","_flashMode","_whiteBalance","_cameraType","front","_zoom","getAvailablePictureSizes","_ref","_asyncToGenerator","ratio","_x","apply","arguments","unmount","addEventListener","_syncTrackCapabilities","autoFocus","setAutoFocusAsync","value","_this","flashMode","setFlashModeAsync","_this2","whiteBalance","setWhiteBalanceAsync","_this3","type","setTypeAsync","_this4","resumePreview","zoom","setZoomAsync","_this5","setPictureSize","_pictureSize","includes","concat","join","width","height","split","aspectRatio","parseFloat","onCapabilitiesReady","track","_this6","capabilities","getCapabilities","constraints","min","max","Math","focusMode","convertAutoFocusJSONToNative","torch","convertFlashModeJSONToNative","applyConstraints","advanced","_this7","Promise","all","getTracks","map","setVideoSource","srcObject","window","URL","createObjectURL","setSettings","getSettings","setStream","getActualCameraType","facingMode","ensureCameraIsRunningAsync","_this8","_this9","pausePreview","getStreamDevice","error","nativeEvent","takePicture","config","base64","captureImage","capturedPicture","uri","exif","onPictureSaved","data","id","forEach","stop"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-camera/src/CameraModule/CameraModule.ts"],"sourcesContent":["import invariant from 'invariant';\n\nimport { PictureOptions } from '../Camera.types';\nimport { CameraType, CapturedPicture, CaptureOptions, ImageType } from './CameraModule.types';\nimport * as Utils from './CameraUtils';\nimport { FacingModeToCameraType, PictureSizes } from './constants';\nimport * as CapabilityUtils from './CapabilityUtils';\n\nexport { ImageType, CameraType, CaptureOptions };\n\n/*\n * TODO: Bacon: Add more props for Android\n *\n * aspectRatio: { min (0.00033), max (4032) }\n * colorTemperature: MediaSettingsRange  (max: 7000, min: 2850, step: 50)\n * exposureCompensation: MediaSettingsRange (max: 2, min: -2, step: 0.1666666716337204)\n * exposureMode: 'continuous' | 'manual'\n * frameRate: { min: (1), max: (60) }\n * iso: MediaSettingsRange (max: 3200, min: 50, step: 1)\n * width: { min: 1, max}\n * height: { min: 1, max}\n */\n\ntype OnCameraReadyListener = () => void;\ntype OnMountErrorListener = ({ nativeEvent: Error }) => void;\n\nclass CameraModule {\n  videoElement: HTMLVideoElement;\n  stream: MediaStream | null = null;\n  settings: MediaTrackSettings | null = null;\n  onCameraReady: OnCameraReadyListener = () => {};\n  onMountError: OnMountErrorListener = () => {};\n  _pictureSize?: string;\n  _isStartingCamera = false;\n\n  _autoFocus: string = 'continuous';\n  get autoFocus(): string {\n    return this._autoFocus;\n  }\n  async setAutoFocusAsync(value: string): Promise<void> {\n    if (value === this.autoFocus) {\n      return;\n    }\n    this._autoFocus = value;\n    await this._syncTrackCapabilities();\n  }\n\n  _flashMode: string = 'off';\n  get flashMode(): string {\n    return this._flashMode;\n  }\n  async setFlashModeAsync(value: string): Promise<void> {\n    if (value === this.flashMode) {\n      return;\n    }\n    this._flashMode = value;\n    await this._syncTrackCapabilities();\n  }\n\n  _whiteBalance: string = 'continuous';\n\n  get whiteBalance(): string {\n    return this._whiteBalance;\n  }\n\n  async setWhiteBalanceAsync(value: string): Promise<void> {\n    if (value === this.whiteBalance) {\n      return;\n    }\n    this._whiteBalance = value;\n    await this._syncTrackCapabilities();\n  }\n\n  _cameraType: CameraType = CameraType.front;\n\n  get type(): CameraType {\n    return this._cameraType;\n  }\n\n  async setTypeAsync(value: CameraType) {\n    if (value === this._cameraType) {\n      return;\n    }\n    this._cameraType = value;\n    await this.resumePreview();\n  }\n\n  _zoom: number = 1;\n\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  async setZoomAsync(value: number): Promise<void> {\n    if (value === this.zoom) {\n      return;\n    }\n    //TODO: Bacon: IMP on non-android devices\n    this._zoom = value;\n    await this._syncTrackCapabilities();\n  }\n\n  setPictureSize(value: string) {\n    if (value === this._pictureSize) {\n      return;\n    }\n    invariant(\n      PictureSizes.includes(value),\n      `expo-camera: CameraModule.setPictureSize(): invalid size supplied ${value}, expected one of: ${PictureSizes.join(\n        ', '\n      )}`\n    );\n\n    const [width, height] = value.split('x');\n    //TODO: Bacon: IMP\n    const aspectRatio = parseFloat(width) / parseFloat(height);\n\n    this._pictureSize = value;\n  }\n\n  constructor(videoElement: HTMLVideoElement) {\n    this.videoElement = videoElement;\n    if (this.videoElement) {\n      this.videoElement.addEventListener('loadedmetadata', () => {\n        this._syncTrackCapabilities();\n      });\n    }\n  }\n\n  async onCapabilitiesReady(track: MediaStreamTrack): Promise<void> {\n    const capabilities = track.getCapabilities() as any;\n\n    // Create an empty object because if you set a constraint that isn't available an error will be thrown.\n    const constraints: {\n      zoom?: number;\n      torch?: boolean;\n      whiteBalance?: string;\n      focusMode?: string;\n    } = {};\n\n    if (capabilities.zoom) {\n      // TODO: Bacon: We should have some async method for getting the (min, max, step) externally\n      const { min, max } = capabilities.zoom;\n      constraints.zoom = Math.min(max, Math.max(min, this._zoom));\n    }\n    if (capabilities.focusMode) {\n      constraints.focusMode = CapabilityUtils.convertAutoFocusJSONToNative(this.autoFocus);\n    }\n    if (capabilities.torch) {\n      constraints.torch = CapabilityUtils.convertFlashModeJSONToNative(this.flashMode);\n    }\n    if (capabilities.whiteBalance) {\n      constraints.whiteBalance = this.whiteBalance;\n    }\n\n    await track.applyConstraints({ advanced: [constraints] as any });\n  }\n\n  async _syncTrackCapabilities(): Promise<void> {\n    if (this.stream) {\n      await Promise.all(this.stream.getTracks().map(track => this.onCapabilitiesReady(track)));\n    }\n  }\n\n  setVideoSource(stream: MediaStream | MediaSource | Blob | null): void {\n    if ('srcObject' in this.videoElement) {\n      this.videoElement.srcObject = stream;\n    } else {\n      // TODO: Bacon: Check if needed\n      (this.videoElement['src'] as any) = window.URL.createObjectURL(stream);\n    }\n  }\n\n  setSettings(stream: MediaStream | null): void {\n    this.settings = null;\n    if (stream && this.stream) {\n      this.settings = this.stream.getTracks()[0].getSettings();\n    }\n  }\n\n  setStream(stream: MediaStream | null): void {\n    this.stream = stream;\n    this.setSettings(stream);\n    this.setVideoSource(stream);\n  }\n\n  getActualCameraType(): CameraType | null {\n    if (this.settings) {\n      // On desktop no value will be returned, in this case we should assume the cameraType is 'front'\n      const { facingMode = 'user' } = this.settings;\n      return FacingModeToCameraType[facingMode];\n    }\n    return null;\n  }\n\n  async ensureCameraIsRunningAsync(): Promise<void> {\n    if (!this.stream) {\n      await this.resumePreview();\n    }\n  }\n\n  async resumePreview(): Promise<MediaStream | null> {\n    if (this._isStartingCamera) {\n      return null;\n    }\n    this._isStartingCamera = true;\n    try {\n      this.pausePreview();\n      const stream = await Utils.getStreamDevice(this.type);\n      this.setStream(stream);\n      this._isStartingCamera = false;\n      this.onCameraReady();\n      return stream;\n    } catch (error) {\n      this._isStartingCamera = false;\n      this.onMountError({ nativeEvent: error });\n    }\n    return null;\n  }\n\n  takePicture(config: PictureOptions): CapturedPicture {\n    const base64 = Utils.captureImage(this.videoElement, config);\n\n    const capturedPicture: CapturedPicture = {\n      uri: base64,\n      base64,\n      width: 0,\n      height: 0,\n    };\n\n    if (this.settings) {\n      const { width = 0, height = 0 } = this.settings;\n      capturedPicture.width = width;\n      capturedPicture.height = height;\n      // TODO: Bacon: verify/enforce exif shape.\n      capturedPicture.exif = this.settings;\n    }\n\n    if (config.onPictureSaved) {\n      config.onPictureSaved({ nativeEvent: { data: capturedPicture, id: config.id } });\n    }\n    return capturedPicture;\n  }\n\n  pausePreview(): void {\n    if (!this.stream) {\n      return;\n    }\n    this.stream.getTracks().forEach(track => track.stop());\n    this.setStream(null);\n  }\n\n  // TODO: Bacon: we don't even use ratio in native...\n  getAvailablePictureSizes = async (ratio: string): Promise<string[]> => {\n    return PictureSizes;\n  };\n\n  unmount = () => {\n    this.settings = null;\n    this.stream = null;\n  };\n}\n\nexport default CameraModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}