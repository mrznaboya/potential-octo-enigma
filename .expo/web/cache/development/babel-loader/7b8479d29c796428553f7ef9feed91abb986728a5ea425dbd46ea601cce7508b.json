{"ast":null,"code":"var _jsxFileName = \"/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-tabs/src/navigators/createBottomTabNavigator.js\";\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport { ScreenContainer } from 'react-native-screens';\nimport createTabNavigator from \"../utils/createTabNavigator\";\nimport BottomTabBar from \"../views/BottomTabBar\";\nimport ResourceSavingScene from \"../views/ResourceSavingScene\";\nclass TabNavigationView extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loaded: [this.props.navigation.state.index]\n    };\n    this._renderTabBar = () => {\n      var {\n        tabBarComponent: TabBarComponent = BottomTabBar,\n        tabBarOptions,\n        navigation,\n        screenProps,\n        getLabelText,\n        getAccessibilityLabel,\n        getButtonComponent,\n        getAccessibilityRole,\n        getAccessibilityStates,\n        getTestID,\n        renderIcon,\n        onTabPress,\n        onTabLongPress\n      } = this.props;\n      var {\n        descriptors\n      } = this.props;\n      var {\n        state\n      } = this.props.navigation;\n      var route = state.routes[state.index];\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      if (options.tabBarVisible === false) {\n        return null;\n      }\n      return React.createElement(TabBarComponent, _extends({}, tabBarOptions, {\n        jumpTo: this._jumpTo,\n        navigation: navigation,\n        screenProps: screenProps,\n        onTabPress: onTabPress,\n        onTabLongPress: onTabLongPress,\n        getLabelText: getLabelText,\n        getButtonComponent: getButtonComponent,\n        getAccessibilityLabel: getAccessibilityLabel,\n        getAccessibilityRole: getAccessibilityRole,\n        getAccessibilityStates: getAccessibilityStates,\n        getTestID: getTestID,\n        renderIcon: renderIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }));\n    };\n    this._jumpTo = key => {\n      var {\n        navigation,\n        onIndexChange\n      } = this.props;\n      var index = navigation.state.routes.findIndex(route => route.key === key);\n      onIndexChange(index);\n    };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    var {\n      index\n    } = nextProps.navigation.state;\n    return {\n      loaded: prevState.loaded.includes(index) ? prevState.loaded : [...prevState.loaded, index]\n    };\n  }\n  render() {\n    var {\n      navigation,\n      renderScene,\n      lazy\n    } = this.props;\n    var {\n      routes\n    } = navigation.state;\n    var {\n      loaded\n    } = this.state;\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      }\n    }, React.createElement(ScreenContainer, {\n      style: styles.pages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      }\n    }, routes.map((route, index) => {\n      if (lazy && !loaded.includes(index)) {\n        return null;\n      }\n      var isFocused = navigation.state.index === index;\n      return React.createElement(ResourceSavingScene, {\n        key: route.key,\n        style: StyleSheet.absoluteFill,\n        isVisible: isFocused,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        }\n      }, renderScene({\n        route\n      }));\n    })), this._renderTabBar());\n  }\n}\nTabNavigationView.defaultProps = {\n  lazy: true,\n  getAccessibilityRole: () => 'button',\n  getAccessibilityStates: _ref => {\n    var {\n      focused\n    } = _ref;\n    return focused ? ['selected'] : [];\n  }\n};\npolyfill(TabNavigationView);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  pages: {\n    flex: 1\n  }\n});\nexport default createTabNavigator(TabNavigationView);","map":{"version":3,"names":["React","View","StyleSheet","polyfill","ScreenContainer","createTabNavigator","BottomTabBar","ResourceSavingScene","TabNavigationView","PureComponent","constructor","arguments","state","loaded","props","navigation","index","_renderTabBar","tabBarComponent","TabBarComponent","tabBarOptions","screenProps","getLabelText","getAccessibilityLabel","getButtonComponent","getAccessibilityRole","getAccessibilityStates","getTestID","renderIcon","onTabPress","onTabLongPress","descriptors","route","routes","descriptor","key","options","tabBarVisible","createElement","_extends","jumpTo","_jumpTo","__source","fileName","_jsxFileName","lineNumber","onIndexChange","findIndex","getDerivedStateFromProps","nextProps","prevState","includes","render","renderScene","lazy","style","styles","container","pages","map","isFocused","absoluteFill","isVisible","defaultProps","_ref","focused","create","flex","overflow"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-tabs/src/navigators/createBottomTabNavigator.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\n\n// eslint-disable-next-line import/no-unresolved\nimport { ScreenContainer } from 'react-native-screens';\n\nimport createTabNavigator, {\n  type InjectedProps,\n} from '../utils/createTabNavigator';\nimport BottomTabBar, { type TabBarOptions } from '../views/BottomTabBar';\nimport ResourceSavingScene from '../views/ResourceSavingScene';\n\ntype Props = InjectedProps & {\n  getAccessibilityRole: (props: { route: any }) => string,\n  getAccessibilityStates: (props: { route: any }) => Array<string>,\n  lazy?: boolean,\n  tabBarComponent?: React.ComponentType<*>,\n  tabBarOptions?: TabBarOptions,\n};\n\ntype State = {\n  loaded: number[],\n};\n\nclass TabNavigationView extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    lazy: true,\n    getAccessibilityRole: () => 'button',\n    getAccessibilityStates: ({ focused }) => (focused ? ['selected'] : []),\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { index } = nextProps.navigation.state;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(index)\n        ? prevState.loaded\n        : [...prevState.loaded, index],\n    };\n  }\n\n  state = {\n    loaded: [this.props.navigation.state.index],\n  };\n\n  _renderTabBar = () => {\n    const {\n      tabBarComponent: TabBarComponent = BottomTabBar,\n      tabBarOptions,\n      navigation,\n      screenProps,\n      getLabelText,\n      getAccessibilityLabel,\n      getButtonComponent,\n      getAccessibilityRole,\n      getAccessibilityStates,\n      getTestID,\n      renderIcon,\n      onTabPress,\n      onTabLongPress,\n    } = this.props;\n\n    const { descriptors } = this.props;\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarVisible === false) {\n      return null;\n    }\n\n    return (\n      <TabBarComponent\n        {...tabBarOptions}\n        jumpTo={this._jumpTo}\n        navigation={navigation}\n        screenProps={screenProps}\n        onTabPress={onTabPress}\n        onTabLongPress={onTabLongPress}\n        getLabelText={getLabelText}\n        getButtonComponent={getButtonComponent}\n        getAccessibilityLabel={getAccessibilityLabel}\n        getAccessibilityRole={getAccessibilityRole}\n        getAccessibilityStates={getAccessibilityStates}\n        getTestID={getTestID}\n        renderIcon={renderIcon}\n      />\n    );\n  };\n\n  _jumpTo = (key: string) => {\n    const { navigation, onIndexChange } = this.props;\n\n    const index = navigation.state.routes.findIndex(route => route.key === key);\n\n    onIndexChange(index);\n  };\n\n  render() {\n    const { navigation, renderScene, lazy } = this.props;\n    const { routes } = navigation.state;\n    const { loaded } = this.state;\n\n    return (\n      <View style={styles.container}>\n        <ScreenContainer style={styles.pages}>\n          {routes.map((route, index) => {\n            if (lazy && !loaded.includes(index)) {\n              // Don't render a screen if we've never navigated to it\n              return null;\n            }\n\n            const isFocused = navigation.state.index === index;\n\n            return (\n              <ResourceSavingScene\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                isVisible={isFocused}\n              >\n                {renderScene({ route })}\n              </ResourceSavingScene>\n            );\n          })}\n        </ScreenContainer>\n        {this._renderTabBar()}\n      </View>\n    );\n  }\n}\n\npolyfill(TabNavigationView);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  pages: {\n    flex: 1,\n  },\n});\n\nexport default createTabNavigator(TabNavigationView);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}