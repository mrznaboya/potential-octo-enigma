{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport createIconSet from \"./createIconSet\";\nexport default function createMultiStyleIconSet(styles) {\n  var optionsInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var styleNames = Object.keys(styles);\n  if (styleNames.length === 0) {\n    throw new Error('You need to add at least one style');\n  }\n  var options = _objectSpread({\n    defaultStyle: styleNames[0],\n    fallbackFamily: _unused => styleNames[0],\n    glyphValidator: (_unused, __unused) => true\n  }, optionsInput);\n  var iconSets = styleNames.reduce((acc, name) => {\n    var style = styles[name];\n    acc[name] = createIconSet(style.glyphMap || {}, style.fontFamily || '', style.fontFile || '', style.fontStyle || {});\n    return acc;\n  }, {});\n  function styleFromProps(props) {\n    return Object.keys(props).reduce((result, propName) => styleNames.indexOf(propName) !== -1 && props[propName] === true ? propName : result, options.defaultStyle);\n  }\n  function getIconSetForProps(props) {\n    var {\n      name\n    } = props;\n    var style = styleFromProps(props);\n    if (options.glyphValidator(name, style)) return iconSets[style];\n    var family = options.fallbackFamily(name);\n    if (styleNames.indexOf(family) === -1) {\n      return options.defaultStyle;\n    }\n    return iconSets[family];\n  }\n  function selectIconClass(iconSet, iconClass) {\n    return iconClass.length > 0 ? iconSet[iconClass] : iconSet;\n  }\n  function reduceProps(props) {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (styleNames.indexOf(prop) === -1) {\n        acc[prop] = props[prop];\n      }\n      return acc;\n    }, {});\n  }\n  function getStyledIconSet(style) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    if (styleNames.indexOf(style) === -1) {\n      return iconSets[options.defaultStyle];\n    }\n    return !name ? iconSets[styleFromProps({\n      [style]: true\n    })] : getIconSetForProps({\n      name,\n      [style]: true\n    });\n  }\n  function getFontFamily() {\n    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : options.defaultStyle;\n    return getStyledIconSet(style).getFontFamily();\n  }\n  function getRawGlyphMap() {\n    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : options.defaultStyle;\n    return getStyledIconSet(style).getRawGlyphMap();\n  }\n  function hasIcon(name) {\n    var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : options.defaultStyle;\n    return options.glyphValidator(name, style);\n  }\n  function createStyledIconClass() {\n    var selectClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    class IconClass extends PureComponent {\n      render() {\n        var selectedIconSet = getIconSetForProps(this.props);\n        var SelectedIconClass = selectIconClass(selectedIconSet, selectClass);\n        var props = reduceProps(this.props);\n        return React.createElement(SelectedIconClass, props);\n      }\n    }\n    IconClass.propTypes = styleNames.reduce((acc, name) => {\n      acc[name] = PropTypes.bool;\n      return acc;\n    }, {});\n    IconClass.defaultProps = styleNames.reduce((acc, name) => {\n      acc[name] = false;\n      return acc;\n    }, {});\n    IconClass.font = Object.values(styles).reduce((acc, style) => {\n      acc[style.fontFamily] = style.fontFile;\n      return acc;\n    }, {});\n    IconClass.StyledIconSet = getStyledIconSet;\n    IconClass.getFontFamily = getFontFamily;\n    IconClass.getRawGlyphMap = getRawGlyphMap;\n    IconClass.hasIcon = hasIcon;\n    return IconClass;\n  }\n  var Icon = createStyledIconClass();\n  Icon.Button = createStyledIconClass('Button');\n  return Icon;\n}","map":{"version":3,"names":["React","PureComponent","PropTypes","createIconSet","createMultiStyleIconSet","styles","optionsInput","arguments","length","undefined","styleNames","Object","keys","Error","options","_objectSpread","defaultStyle","fallbackFamily","_unused","glyphValidator","__unused","iconSets","reduce","acc","name","style","glyphMap","fontFamily","fontFile","fontStyle","styleFromProps","props","result","propName","indexOf","getIconSetForProps","family","selectIconClass","iconSet","iconClass","reduceProps","prop","getStyledIconSet","getFontFamily","getRawGlyphMap","hasIcon","createStyledIconClass","selectClass","IconClass","render","selectedIconSet","SelectedIconClass","createElement","propTypes","bool","defaultProps","font","values","StyledIconSet","Icon","Button"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/@expo/vector-icons/src/createMultiStyleIconSet.ts"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport createIconSet from './createIconSet';\n\ntype FontStyle = {\n  fontFamily: string;\n  fontFile: any;\n  glyphMap: any;\n  fontStyle: any;\n};\n\ntype FontStyles = {\n  [key: string]: FontStyle;\n};\n\nexport default function createMultiStyleIconSet(\n  styles: FontStyles,\n  optionsInput = {}\n): any {\n  const styleNames = Object.keys(styles);\n\n  if (styleNames.length === 0) {\n    throw new Error('You need to add at least one style');\n  }\n\n  const options = {\n    defaultStyle: styleNames[0],\n    fallbackFamily: (_unused: any) => styleNames[0],\n    glyphValidator: (_unused: any, __unused: any) => true,\n    ...optionsInput,\n  };\n\n  const iconSets = styleNames.reduce((acc, name) => {\n    const style = styles[name];\n\n    acc[name] = createIconSet(\n      style.glyphMap || {},\n      style.fontFamily || '',\n      style.fontFile || '',\n      style.fontStyle || {}\n    );\n\n    return acc;\n  }, {});\n\n  function styleFromProps(props) {\n    return Object.keys(props).reduce(\n      (result, propName) =>\n        styleNames.indexOf(propName) !== -1 && props[propName] === true\n          ? propName\n          : result,\n      options.defaultStyle\n    );\n  }\n\n  function getIconSetForProps(props) {\n    const { name } = props;\n    const style = styleFromProps(props);\n\n    if (options.glyphValidator(name, style)) return iconSets[style];\n\n    const family = options.fallbackFamily(name);\n\n    if (styleNames.indexOf(family) === -1) {\n      return options.defaultStyle;\n    }\n\n    return iconSets[family];\n  }\n\n  function selectIconClass(iconSet, iconClass) {\n    return iconClass.length > 0 ? iconSet[iconClass] : iconSet;\n  }\n\n  function reduceProps(props) {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (styleNames.indexOf(prop) === -1) {\n        acc[prop] = props[prop];\n      }\n\n      return acc;\n    }, {});\n  }\n\n  function getStyledIconSet(style, name = '') {\n    if (styleNames.indexOf(style) === -1) {\n      return iconSets[options.defaultStyle];\n    }\n\n    return !name\n      ? iconSets[styleFromProps({ [style]: true })]\n      : getIconSetForProps({ name, [style]: true });\n  }\n\n  function getFontFamily(style = options.defaultStyle) {\n    return getStyledIconSet(style).getFontFamily();\n  }\n\n  function getRawGlyphMap(style = options.defaultStyle) {\n    return getStyledIconSet(style).getRawGlyphMap();\n  }\n\n  function hasIcon(name, style = options.defaultStyle) {\n    return options.glyphValidator(name, style);\n  }\n\n  function createStyledIconClass(selectClass = '') {\n    class IconClass extends PureComponent {\n      static propTypes = styleNames.reduce((acc, name) => {\n        acc[name] = PropTypes.bool;\n        return acc;\n      }, {});\n\n      static defaultProps = styleNames.reduce((acc, name) => {\n        acc[name] = false;\n        return acc;\n      }, {});\n\n      static font = Object.values(styles).reduce((acc, style) => {\n        acc[style.fontFamily] = style.fontFile;\n        return acc;\n      }, {});\n\n      static Button: any;\n\n      static StyledIconSet = getStyledIconSet;\n      static getFontFamily = getFontFamily;\n      static getRawGlyphMap = getRawGlyphMap;\n      static hasIcon = hasIcon;\n\n      render() {\n        const selectedIconSet = getIconSetForProps(this.props);\n        const SelectedIconClass = selectIconClass(selectedIconSet, selectClass);\n        const props = reduceProps(this.props);\n\n        return React.createElement(SelectedIconClass, props);\n      }\n    }\n\n    return IconClass;\n  }\n\n  const Icon = createStyledIconClass();\n  Icon.Button = createStyledIconClass('Button');\n  return Icon;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}