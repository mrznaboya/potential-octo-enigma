{"ast":null,"code":"var _jsxFileName = \"/Users/zuyax/Developer/rn-starter/node_modules/react-native-tab-view/src/TabBar.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport TouchableItem from \"./TouchableItem\";\nimport { SceneRendererPropType } from \"./PropTypes\";\nvar useNativeDriver = Boolean(NativeModules.NativeAnimatedModule);\nexport default class TabBar extends React.Component {\n  constructor(_props) {\n    var _this;\n    super(_props);\n    _this = this;\n    this._isIntial = true;\n    this._isManualScroll = false;\n    this._isMomentumScroll = false;\n    this._startTrackingPosition = () => {\n      this._offsetXListener = this.props.offsetX.addListener(_ref => {\n        var {\n          value\n        } = _ref;\n        this._lastOffsetX = value;\n        this._handlePosition();\n      });\n      this._panXListener = this.props.panX.addListener(_ref2 => {\n        var {\n          value\n        } = _ref2;\n        this._lastPanX = value;\n        this._handlePosition();\n      });\n    };\n    this._stopTrackingPosition = () => {\n      this.props.offsetX.removeListener(this._offsetXListener);\n      this.props.panX.removeListener(this._panXListener);\n    };\n    this._handlePosition = () => {\n      var {\n        navigationState,\n        layout\n      } = this.props;\n      if (layout.width === 0) {\n        return;\n      }\n      var panX = typeof this._lastPanX === 'number' ? this._lastPanX : 0;\n      var offsetX = typeof this._lastOffsetX === 'number' ? this._lastOffsetX : -navigationState.index * layout.width;\n      var value = (panX + offsetX) / -(layout.width || 0.001);\n      this._adjustScroll(value);\n    };\n    this._renderLabel = scene => {\n      if (typeof this.props.renderLabel !== 'undefined') {\n        return this.props.renderLabel(scene);\n      }\n      var label = this.props.getLabelText(scene);\n      if (typeof label !== 'string') {\n        return null;\n      }\n      return React.createElement(Animated.Text, {\n        style: [styles.tabLabel, this.props.labelStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        }\n      }, label);\n    };\n    this._renderIndicator = props => {\n      if (typeof this.props.renderIndicator !== 'undefined') {\n        return this.props.renderIndicator(props);\n      }\n      var {\n        width,\n        position,\n        navigationState\n      } = props;\n      var translateX = Animated.multiply(Animated.multiply(position.interpolate({\n        inputRange: [-1, navigationState.routes.length],\n        outputRange: [-1, navigationState.routes.length],\n        extrapolate: 'clamp'\n      }), width), I18nManager.isRTL ? -1 : 1);\n      return React.createElement(Animated.View, {\n        style: [styles.indicator, {\n          width,\n          transform: [{\n            translateX\n          }]\n        }, this.props.indicatorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        }\n      });\n    };\n    this._getTabWidth = props => {\n      var {\n        layout,\n        navigationState,\n        tabStyle\n      } = props;\n      var flattened = StyleSheet.flatten(tabStyle);\n      if (flattened) {\n        switch (typeof flattened.width) {\n          case 'number':\n            return flattened.width;\n          case 'string':\n            if (flattened.width.endsWith('%')) {\n              var width = parseFloat(flattened.width);\n              if (Number.isFinite(width)) {\n                return layout.width * (width / 100);\n              }\n            }\n        }\n      }\n      if (props.scrollEnabled) {\n        return layout.width / 5 * 2;\n      }\n      return layout.width / navigationState.routes.length;\n    };\n    this._handleTabPress = _ref3 => {\n      var {\n        route\n      } = _ref3;\n      this._pendingIndex = this.props.navigationState.routes.indexOf(route);\n      if (this.props.onTabPress) {\n        this.props.onTabPress({\n          route\n        });\n      }\n      this.props.jumpTo(route.key);\n    };\n    this._handleTabLongPress = _ref4 => {\n      var {\n        route\n      } = _ref4;\n      if (this.props.onTabLongPress) {\n        this.props.onTabLongPress({\n          route\n        });\n      }\n    };\n    this._normalizeScrollValue = (props, value) => {\n      var {\n        layout,\n        navigationState\n      } = props;\n      var tabWidth = this._getTabWidth(props);\n      var tabBarWidth = Math.max(tabWidth * navigationState.routes.length, layout.width);\n      var maxDistance = tabBarWidth - layout.width;\n      return Math.max(Math.min(value, maxDistance), 0);\n    };\n    this._getScrollAmount = (props, i) => {\n      var {\n        layout\n      } = props;\n      var tabWidth = this._getTabWidth(props);\n      var centerDistance = tabWidth * (i + 1 / 2);\n      var scrollAmount = centerDistance - layout.width / 2;\n      return this._normalizeScrollValue(props, scrollAmount);\n    };\n    this._adjustScroll = value => {\n      if (this.props.scrollEnabled) {\n        global.cancelAnimationFrame(this._scrollResetCallback);\n        this._scrollView && this._scrollView.scrollTo({\n          x: this._normalizeScrollValue(this.props, this._getScrollAmount(this.props, value)),\n          animated: !this._isIntial\n        });\n        this._isIntial = false;\n      }\n    };\n    this._resetScroll = function (value) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (_this.props.scrollEnabled) {\n        global.cancelAnimationFrame(_this._scrollResetCallback);\n        _this._scrollResetCallback = global.requestAnimationFrame(() => {\n          _this._scrollView && _this._scrollView.scrollTo({\n            x: _this._getScrollAmount(_this.props, value),\n            animated\n          });\n        });\n      }\n    };\n    this._handleBeginDrag = () => {\n      this._isManualScroll = true;\n      this._isMomentumScroll = false;\n    };\n    this._handleEndDrag = () => {\n      global.requestAnimationFrame(() => {\n        if (this._isMomentumScroll) {\n          return;\n        }\n        this._isManualScroll = false;\n      });\n    };\n    this._handleMomentumScrollBegin = () => {\n      this._isMomentumScroll = true;\n    };\n    this._handleMomentumScrollEnd = () => {\n      this._isMomentumScroll = false;\n      this._isManualScroll = false;\n    };\n    var initialVisibility = 1;\n    if (this.props.scrollEnabled) {\n      var tabWidth = this._getTabWidth(this.props);\n      if (!tabWidth) {\n        initialVisibility = 0;\n      }\n    }\n    var initialOffset = this.props.scrollEnabled && this.props.layout.width ? {\n      x: this._getScrollAmount(this.props, this.props.navigationState.index),\n      y: 0\n    } : undefined;\n    this.state = {\n      visibility: new Animated.Value(initialVisibility),\n      scrollAmount: new Animated.Value(0),\n      initialOffset\n    };\n  }\n  componentDidMount() {\n    this.props.scrollEnabled && this._startTrackingPosition();\n  }\n  componentDidUpdate(prevProps) {\n    var prevTabWidth = this._getTabWidth(prevProps);\n    var currentTabWidth = this._getTabWidth(this.props);\n    var pendingIndex = typeof this._pendingIndex === 'number' ? this._pendingIndex : this.props.navigationState.index;\n    this._pendingIndex = null;\n    if (prevTabWidth !== currentTabWidth && currentTabWidth) {\n      this.state.visibility.setValue(1);\n    }\n    if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {\n      this._resetScroll(this.props.navigationState.index, false);\n    } else if (prevProps.navigationState.index !== pendingIndex) {\n      this._resetScroll(this.props.navigationState.index);\n    }\n  }\n  componentWillUnmount() {\n    this._stopTrackingPosition();\n  }\n  render() {\n    var {\n      position,\n      navigationState,\n      scrollEnabled,\n      bounces\n    } = this.props;\n    var {\n      routes\n    } = navigationState;\n    var tabWidth = this._getTabWidth(this.props);\n    var tabBarWidth = tabWidth * routes.length;\n    var inputRange = [-1, ...routes.map((x, i) => i)];\n    var translateX = Animated.multiply(this.state.scrollAmount, -1);\n    return React.createElement(Animated.View, {\n      style: [styles.tabBar, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      }\n    }, React.createElement(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.indicatorContainer, scrollEnabled ? {\n        width: tabBarWidth,\n        transform: [{\n          translateX\n        }]\n      } : null],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      }\n    }, this._renderIndicator(_objectSpread({}, this.props, {\n      width: tabWidth\n    }))), React.createElement(View, {\n      style: styles.scroll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      }\n    }, React.createElement(Animated.ScrollView, {\n      horizontal: true,\n      keyboardShouldPersistTaps: \"handled\",\n      scrollEnabled: scrollEnabled,\n      bounces: bounces,\n      alwaysBounceHorizontal: false,\n      scrollsToTop: false,\n      showsHorizontalScrollIndicator: false,\n      automaticallyAdjustContentInsets: false,\n      overScrollMode: \"never\",\n      contentContainerStyle: [styles.tabContent, scrollEnabled ? null : styles.container],\n      scrollEventThrottle: 1,\n      onScroll: Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            x: this.state.scrollAmount\n          }\n        }\n      }], {\n        useNativeDriver\n      }),\n      onScrollBeginDrag: this._handleBeginDrag,\n      onScrollEndDrag: this._handleEndDrag,\n      onMomentumScrollBegin: this._handleMomentumScrollBegin,\n      onMomentumScrollEnd: this._handleMomentumScrollEnd,\n      contentOffset: this.state.initialOffset,\n      ref: el => this._scrollView = el && el.getNode(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      }\n    }, routes.map((route, i) => {\n      var outputRange = inputRange.map(inputIndex => inputIndex === i ? 1 : 0.7);\n      var opacity = Animated.multiply(this.state.visibility, position.interpolate({\n        inputRange,\n        outputRange\n      }));\n      var label = this._renderLabel({\n        route\n      });\n      var icon = this.props.renderIcon ? this.props.renderIcon({\n        route\n      }) : null;\n      var badge = this.props.renderBadge ? this.props.renderBadge({\n        route\n      }) : null;\n      var tabStyle = {};\n      tabStyle.opacity = opacity;\n      if (icon) {\n        if (label) {\n          tabStyle.paddingTop = 8;\n        } else {\n          tabStyle.padding = 12;\n        }\n      }\n      var passedTabStyle = StyleSheet.flatten(this.props.tabStyle);\n      var isWidthSet = passedTabStyle && typeof passedTabStyle.width !== 'undefined' || scrollEnabled === true;\n      var tabContainerStyle = {};\n      if (isWidthSet) {\n        tabStyle.width = tabWidth;\n      }\n      if (passedTabStyle && typeof passedTabStyle.flex === 'number') {\n        tabContainerStyle.flex = passedTabStyle.flex;\n      } else if (!isWidthSet) {\n        tabContainerStyle.flex = 1;\n      }\n      var accessibilityLabel = this.props.getAccessibilityLabel({\n        route\n      });\n      accessibilityLabel = typeof accessibilityLabel !== 'undefined' ? accessibilityLabel : this.props.getLabelText({\n        route\n      });\n      var isFocused = i === navigationState.index;\n      return React.createElement(TouchableItem, {\n        borderless: true,\n        key: route.key,\n        testID: this.props.getTestID({\n          route\n        }),\n        accessible: this.props.getAccessible({\n          route\n        }),\n        accessibilityLabel: accessibilityLabel,\n        accessibilityTraits: isFocused ? ['button', 'selected'] : 'button',\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        accessibilityStates: isFocused ? ['selected'] : [],\n        pressColor: this.props.pressColor,\n        pressOpacity: this.props.pressOpacity,\n        delayPressIn: 0,\n        onPress: () => this._handleTabPress({\n          route\n        }),\n        onLongPress: () => this._handleTabLongPress({\n          route\n        }),\n        style: tabContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        }\n      }, React.createElement(View, {\n        pointerEvents: \"none\",\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.tabItem, tabStyle, passedTabStyle, styles.container],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        }\n      }, icon, label), badge ? React.createElement(Animated.View, {\n        style: [styles.badge, {\n          opacity: this.state.visibility\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        }\n      }, badge) : null));\n    }))));\n  }\n}\nTabBar.propTypes = _objectSpread({}, SceneRendererPropType, {\n  scrollEnabled: PropTypes.bool,\n  bounces: PropTypes.bool,\n  pressColor: TouchableItem.propTypes.pressColor,\n  pressOpacity: TouchableItem.propTypes.pressOpacity,\n  getLabelText: PropTypes.func,\n  getAccessible: PropTypes.func,\n  getAccessibilityLabel: PropTypes.func,\n  getTestID: PropTypes.func,\n  renderIcon: PropTypes.func,\n  renderLabel: PropTypes.func,\n  renderIndicator: PropTypes.func,\n  onTabPress: PropTypes.func,\n  onTabLongPress: PropTypes.func,\n  labelStyle: PropTypes.any,\n  style: PropTypes.any\n});\nTabBar.defaultProps = {\n  getLabelText: _ref5 => {\n    var {\n      route\n    } = _ref5;\n    return typeof route.title === 'string' ? route.title.toUpperCase() : route.title;\n  },\n  getAccessible: _ref6 => {\n    var {\n      route\n    } = _ref6;\n    return typeof route.accessible !== 'undefined' ? route.accessible : true;\n  },\n  getAccessibilityLabel: _ref7 => {\n    var {\n      route\n    } = _ref7;\n    return route.accessibilityLabel;\n  },\n  getTestID: _ref8 => {\n    var {\n      route\n    } = _ref8;\n    return route.testID;\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scroll: {\n    overflow: Platform.OS === 'web' ? 'auto' : 'scroll'\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth\n    },\n    zIndex: Platform.OS === 'android' ? 0 : 1\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap'\n  },\n  tabLabel: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    margin: 8\n  },\n  tabItem: {\n    flex: 1,\n    padding: 8,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  indicator: {\n    backgroundColor: '#ffeb3b',\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 2\n  }\n});","map":{"version":3,"names":["React","PropTypes","Animated","NativeModules","StyleSheet","View","ScrollView","Platform","I18nManager","TouchableItem","SceneRendererPropType","useNativeDriver","Boolean","NativeAnimatedModule","TabBar","Component","constructor","props","_this","this","_isIntial","_isManualScroll","_isMomentumScroll","_startTrackingPosition","_offsetXListener","offsetX","addListener","_ref","value","_lastOffsetX","_handlePosition","_panXListener","panX","_ref2","_lastPanX","_stopTrackingPosition","removeListener","navigationState","layout","width","index","_adjustScroll","_renderLabel","scene","renderLabel","label","getLabelText","createElement","Text","style","styles","tabLabel","labelStyle","__source","fileName","_jsxFileName","lineNumber","_renderIndicator","renderIndicator","position","translateX","multiply","interpolate","inputRange","routes","length","outputRange","extrapolate","isRTL","indicator","transform","indicatorStyle","_getTabWidth","tabStyle","flattened","flatten","endsWith","parseFloat","Number","isFinite","scrollEnabled","_handleTabPress","_ref3","route","_pendingIndex","indexOf","onTabPress","jumpTo","key","_handleTabLongPress","_ref4","onTabLongPress","_normalizeScrollValue","tabWidth","tabBarWidth","Math","max","maxDistance","min","_getScrollAmount","i","centerDistance","scrollAmount","global","cancelAnimationFrame","_scrollResetCallback","_scrollView","scrollTo","x","animated","_resetScroll","arguments","undefined","requestAnimationFrame","_handleBeginDrag","_handleEndDrag","_handleMomentumScrollBegin","_handleMomentumScrollEnd","initialVisibility","initialOffset","y","state","visibility","Value","componentDidMount","componentDidUpdate","prevProps","prevTabWidth","currentTabWidth","pendingIndex","setValue","componentWillUnmount","render","bounces","map","tabBar","pointerEvents","indicatorContainer","_objectSpread","scroll","horizontal","keyboardShouldPersistTaps","alwaysBounceHorizontal","scrollsToTop","showsHorizontalScrollIndicator","automaticallyAdjustContentInsets","overScrollMode","contentContainerStyle","tabContent","container","scrollEventThrottle","onScroll","event","nativeEvent","contentOffset","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","ref","el","getNode","inputIndex","opacity","icon","renderIcon","badge","renderBadge","paddingTop","padding","passedTabStyle","isWidthSet","tabContainerStyle","flex","accessibilityLabel","getAccessibilityLabel","isFocused","borderless","testID","getTestID","accessible","getAccessible","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","pressColor","pressOpacity","delayPressIn","onPress","onLongPress","tabItem","propTypes","bool","func","any","defaultProps","_ref5","title","toUpperCase","_ref6","_ref7","_ref8","create","overflow","OS","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","height","zIndex","flexDirection","flexWrap","color","margin","alignItems","justifyContent","top","right","left","bottom"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-native-tab-view/src/TabBar.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  NativeModules,\n  StyleSheet,\n  View,\n  ScrollView,\n  Platform,\n  I18nManager,\n} from 'react-native';\nimport TouchableItem from './TouchableItem';\nimport { SceneRendererPropType } from './PropTypes';\nimport type { Scene, SceneRendererProps } from './TypeDefinitions';\nimport type {\n  ViewStyleProp,\n  TextStyleProp,\n} from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype IndicatorProps<T> = SceneRendererProps<T> & {\n  width: number,\n};\n\ntype Props<T> = SceneRendererProps<T> & {\n  scrollEnabled?: boolean,\n  bounces?: boolean,\n  pressColor?: string,\n  pressOpacity?: number,\n  getLabelText: (scene: Scene<T>) => ?string,\n  getAccessible: (scene: Scene<T>) => ?boolean,\n  getAccessibilityLabel: (scene: Scene<T>) => ?string,\n  getTestID: (scene: Scene<T>) => ?string,\n  renderLabel?: (scene: Scene<T>) => React.Node,\n  renderIcon?: (scene: Scene<T>) => React.Node,\n  renderBadge?: (scene: Scene<T>) => React.Node,\n  renderIndicator?: (props: IndicatorProps<T>) => React.Node,\n  onTabPress?: (scene: Scene<T>) => mixed,\n  onTabLongPress?: (scene: Scene<T>) => mixed,\n  tabStyle?: ViewStyleProp,\n  indicatorStyle?: ViewStyleProp,\n  labelStyle?: TextStyleProp,\n  style?: ViewStyleProp,\n};\n\ntype State = {|\n  visibility: Animated.Value,\n  scrollAmount: Animated.Value,\n  initialOffset: ?{| x: number, y: number |},\n|};\n\nconst useNativeDriver = Boolean(NativeModules.NativeAnimatedModule);\n\nexport default class TabBar<T: *> extends React.Component<Props<T>, State> {\n  static propTypes = {\n    ...SceneRendererPropType,\n    scrollEnabled: PropTypes.bool,\n    bounces: PropTypes.bool,\n    pressColor: TouchableItem.propTypes.pressColor,\n    pressOpacity: TouchableItem.propTypes.pressOpacity,\n    getLabelText: PropTypes.func,\n    getAccessible: PropTypes.func,\n    getAccessibilityLabel: PropTypes.func,\n    getTestID: PropTypes.func,\n    renderIcon: PropTypes.func,\n    renderLabel: PropTypes.func,\n    renderIndicator: PropTypes.func,\n    onTabPress: PropTypes.func,\n    onTabLongPress: PropTypes.func,\n    labelStyle: PropTypes.any,\n    style: PropTypes.any,\n  };\n\n  static defaultProps = {\n    getLabelText: ({ route }: Scene<T>) =>\n      typeof route.title === 'string' ? route.title.toUpperCase() : route.title,\n    getAccessible: ({ route }: Scene<T>) =>\n      typeof route.accessible !== 'undefined' ? route.accessible : true,\n    getAccessibilityLabel: ({ route }: Scene<T>) => route.accessibilityLabel,\n    getTestID: ({ route }: Scene<T>) => route.testID,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n\n    let initialVisibility = 1;\n\n    if (this.props.scrollEnabled) {\n      const tabWidth = this._getTabWidth(this.props);\n      if (!tabWidth) {\n        initialVisibility = 0;\n      }\n    }\n\n    const initialOffset =\n      this.props.scrollEnabled && this.props.layout.width\n        ? {\n            x: this._getScrollAmount(\n              this.props,\n              this.props.navigationState.index\n            ),\n            y: 0,\n          }\n        : undefined;\n\n    this.state = {\n      visibility: new Animated.Value(initialVisibility),\n      scrollAmount: new Animated.Value(0),\n      initialOffset,\n    };\n  }\n\n  componentDidMount() {\n    this.props.scrollEnabled && this._startTrackingPosition();\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    const prevTabWidth = this._getTabWidth(prevProps);\n    const currentTabWidth = this._getTabWidth(this.props);\n    const pendingIndex =\n      typeof this._pendingIndex === 'number'\n        ? this._pendingIndex\n        : this.props.navigationState.index;\n\n    this._pendingIndex = null;\n\n    if (prevTabWidth !== currentTabWidth && currentTabWidth) {\n      this.state.visibility.setValue(1);\n    }\n\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this._resetScroll(this.props.navigationState.index, false);\n    } else if (prevProps.navigationState.index !== pendingIndex) {\n      this._resetScroll(this.props.navigationState.index);\n    }\n  }\n\n  componentWillUnmount() {\n    this._stopTrackingPosition();\n  }\n\n  _scrollView: ?ScrollView;\n  _isIntial: boolean = true;\n  _isManualScroll: boolean = false;\n  _isMomentumScroll: boolean = false;\n  _pendingIndex: ?number;\n  _scrollResetCallback: any;\n  _lastPanX: ?number;\n  _lastOffsetX: ?number;\n  _panXListener: string;\n  _offsetXListener: string;\n\n  _startTrackingPosition = () => {\n    this._offsetXListener = this.props.offsetX.addListener(({ value }) => {\n      this._lastOffsetX = value;\n      this._handlePosition();\n    });\n    this._panXListener = this.props.panX.addListener(({ value }) => {\n      this._lastPanX = value;\n      this._handlePosition();\n    });\n  };\n\n  _stopTrackingPosition = () => {\n    this.props.offsetX.removeListener(this._offsetXListener);\n    this.props.panX.removeListener(this._panXListener);\n  };\n\n  _handlePosition = () => {\n    const { navigationState, layout } = this.props;\n\n    if (layout.width === 0) {\n      // Don't do anything if we don't have layout yet\n      return;\n    }\n\n    const panX = typeof this._lastPanX === 'number' ? this._lastPanX : 0;\n    const offsetX =\n      typeof this._lastOffsetX === 'number'\n        ? this._lastOffsetX\n        : -navigationState.index * layout.width;\n\n    const value = (panX + offsetX) / -(layout.width || 0.001);\n\n    this._adjustScroll(value);\n  };\n\n  _renderLabel = (scene: Scene<*>) => {\n    if (typeof this.props.renderLabel !== 'undefined') {\n      return this.props.renderLabel(scene);\n    }\n    const label = this.props.getLabelText(scene);\n    if (typeof label !== 'string') {\n      return null;\n    }\n    return (\n      <Animated.Text style={[styles.tabLabel, this.props.labelStyle]}>\n        {label}\n      </Animated.Text>\n    );\n  };\n\n  _renderIndicator = (props: IndicatorProps<T>) => {\n    if (typeof this.props.renderIndicator !== 'undefined') {\n      return this.props.renderIndicator(props);\n    }\n    const { width, position, navigationState } = props;\n    const translateX = Animated.multiply(\n      Animated.multiply(\n        position.interpolate({\n          inputRange: [-1, navigationState.routes.length],\n          outputRange: [-1, navigationState.routes.length],\n          extrapolate: 'clamp',\n        }),\n        width\n      ),\n      I18nManager.isRTL ? -1 : 1\n    );\n    return (\n      <Animated.View\n        style={[\n          styles.indicator,\n          { width, transform: [{ translateX }] },\n          this.props.indicatorStyle,\n        ]}\n      />\n    );\n  };\n\n  _getTabWidth = props => {\n    const { layout, navigationState, tabStyle } = props;\n    const flattened = StyleSheet.flatten(tabStyle);\n\n    if (flattened) {\n      switch (typeof flattened.width) {\n        case 'number':\n          return flattened.width;\n        case 'string':\n          if (flattened.width.endsWith('%')) {\n            const width = parseFloat(flattened.width);\n            if (Number.isFinite(width)) {\n              return layout.width * (width / 100);\n            }\n          }\n      }\n    }\n\n    if (props.scrollEnabled) {\n      return (layout.width / 5) * 2;\n    }\n\n    return layout.width / navigationState.routes.length;\n  };\n\n  _handleTabPress = ({ route }: Scene<*>) => {\n    this._pendingIndex = this.props.navigationState.routes.indexOf(route);\n\n    if (this.props.onTabPress) {\n      this.props.onTabPress({ route });\n    }\n\n    this.props.jumpTo(route.key);\n  };\n\n  _handleTabLongPress = ({ route }: Scene<*>) => {\n    if (this.props.onTabLongPress) {\n      this.props.onTabLongPress({ route });\n    }\n  };\n\n  _normalizeScrollValue = (props, value) => {\n    const { layout, navigationState } = props;\n    const tabWidth = this._getTabWidth(props);\n    const tabBarWidth = Math.max(\n      tabWidth * navigationState.routes.length,\n      layout.width\n    );\n    const maxDistance = tabBarWidth - layout.width;\n\n    return Math.max(Math.min(value, maxDistance), 0);\n  };\n\n  _getScrollAmount = (props, i) => {\n    const { layout } = props;\n    const tabWidth = this._getTabWidth(props);\n    const centerDistance = tabWidth * (i + 1 / 2);\n    const scrollAmount = centerDistance - layout.width / 2;\n\n    return this._normalizeScrollValue(props, scrollAmount);\n  };\n\n  _adjustScroll = (value: number) => {\n    if (this.props.scrollEnabled) {\n      global.cancelAnimationFrame(this._scrollResetCallback);\n      this._scrollView &&\n        this._scrollView.scrollTo({\n          x: this._normalizeScrollValue(\n            this.props,\n            this._getScrollAmount(this.props, value)\n          ),\n          animated: !this._isIntial, // Disable animation for the initial render\n        });\n\n      this._isIntial = false;\n    }\n  };\n\n  _resetScroll = (value: number, animated = true) => {\n    if (this.props.scrollEnabled) {\n      global.cancelAnimationFrame(this._scrollResetCallback);\n      this._scrollResetCallback = global.requestAnimationFrame(() => {\n        this._scrollView &&\n          this._scrollView.scrollTo({\n            x: this._getScrollAmount(this.props, value),\n            animated,\n          });\n      });\n    }\n  };\n\n  _handleBeginDrag = () => {\n    // onScrollBeginDrag fires when user touches the ScrollView\n    this._isManualScroll = true;\n    this._isMomentumScroll = false;\n  };\n\n  _handleEndDrag = () => {\n    // onScrollEndDrag fires when user lifts his finger\n    // onMomentumScrollBegin fires after touch end\n    // run the logic in next frame so we get onMomentumScrollBegin first\n    global.requestAnimationFrame(() => {\n      if (this._isMomentumScroll) {\n        return;\n      }\n      this._isManualScroll = false;\n    });\n  };\n\n  _handleMomentumScrollBegin = () => {\n    // onMomentumScrollBegin fires on flick, as well as programmatic scroll\n    this._isMomentumScroll = true;\n  };\n\n  _handleMomentumScrollEnd = () => {\n    // onMomentumScrollEnd fires when the scroll finishes\n    this._isMomentumScroll = false;\n    this._isManualScroll = false;\n  };\n\n  render() {\n    const { position, navigationState, scrollEnabled, bounces } = this.props;\n    const { routes } = navigationState;\n    const tabWidth = this._getTabWidth(this.props);\n    const tabBarWidth = tabWidth * routes.length;\n\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...routes.map((x, i) => i)];\n    const translateX = Animated.multiply(this.state.scrollAmount, -1);\n\n    return (\n      <Animated.View style={[styles.tabBar, this.props.style]}>\n        <Animated.View\n          pointerEvents=\"none\"\n          style={[\n            styles.indicatorContainer,\n            scrollEnabled\n              ? { width: tabBarWidth, transform: [{ translateX }] }\n              : null,\n          ]}\n        >\n          {this._renderIndicator({\n            ...this.props,\n            width: tabWidth,\n          })}\n        </Animated.View>\n        <View style={styles.scroll}>\n          <Animated.ScrollView\n            horizontal\n            keyboardShouldPersistTaps=\"handled\"\n            scrollEnabled={scrollEnabled}\n            bounces={bounces}\n            alwaysBounceHorizontal={false}\n            scrollsToTop={false}\n            showsHorizontalScrollIndicator={false}\n            automaticallyAdjustContentInsets={false}\n            overScrollMode=\"never\"\n            contentContainerStyle={[\n              styles.tabContent,\n              scrollEnabled ? null : styles.container,\n            ]}\n            scrollEventThrottle={1}\n            onScroll={Animated.event(\n              [\n                {\n                  nativeEvent: {\n                    contentOffset: { x: this.state.scrollAmount },\n                  },\n                },\n              ],\n              { useNativeDriver }\n            )}\n            onScrollBeginDrag={this._handleBeginDrag}\n            onScrollEndDrag={this._handleEndDrag}\n            onMomentumScrollBegin={this._handleMomentumScrollBegin}\n            onMomentumScrollEnd={this._handleMomentumScrollEnd}\n            contentOffset={this.state.initialOffset}\n            ref={el => (this._scrollView = el && el.getNode())}\n          >\n            {routes.map((route, i) => {\n              const outputRange = inputRange.map(\n                inputIndex => (inputIndex === i ? 1 : 0.7)\n              );\n              const opacity = Animated.multiply(\n                this.state.visibility,\n                position.interpolate({\n                  inputRange,\n                  outputRange,\n                })\n              );\n              const label = this._renderLabel({ route });\n              const icon = this.props.renderIcon\n                ? this.props.renderIcon({ route })\n                : null;\n              const badge = this.props.renderBadge\n                ? this.props.renderBadge({ route })\n                : null;\n\n              const tabStyle = {};\n\n              tabStyle.opacity = opacity;\n\n              if (icon) {\n                if (label) {\n                  tabStyle.paddingTop = 8;\n                } else {\n                  tabStyle.padding = 12;\n                }\n              }\n\n              const passedTabStyle = StyleSheet.flatten(this.props.tabStyle);\n              const isWidthSet =\n                (passedTabStyle &&\n                  typeof passedTabStyle.width !== 'undefined') ||\n                scrollEnabled === true;\n              const tabContainerStyle = {};\n\n              if (isWidthSet) {\n                tabStyle.width = tabWidth;\n              }\n\n              if (passedTabStyle && typeof passedTabStyle.flex === 'number') {\n                tabContainerStyle.flex = passedTabStyle.flex;\n              } else if (!isWidthSet) {\n                tabContainerStyle.flex = 1;\n              }\n\n              let accessibilityLabel = this.props.getAccessibilityLabel({\n                route,\n              });\n\n              accessibilityLabel =\n                typeof accessibilityLabel !== 'undefined'\n                  ? accessibilityLabel\n                  : this.props.getLabelText({ route });\n\n              const isFocused = i === navigationState.index;\n\n              return (\n                <TouchableItem\n                  borderless\n                  key={route.key}\n                  testID={this.props.getTestID({ route })}\n                  accessible={this.props.getAccessible({ route })}\n                  accessibilityLabel={accessibilityLabel}\n                  accessibilityTraits={\n                    isFocused ? ['button', 'selected'] : 'button'\n                  }\n                  accessibilityComponentType=\"button\"\n                  accessibilityRole=\"button\"\n                  accessibilityStates={isFocused ? ['selected'] : []}\n                  pressColor={this.props.pressColor}\n                  pressOpacity={this.props.pressOpacity}\n                  delayPressIn={0}\n                  onPress={() => this._handleTabPress({ route })}\n                  onLongPress={() => this._handleTabLongPress({ route })}\n                  style={tabContainerStyle}\n                >\n                  <View pointerEvents=\"none\" style={styles.container}>\n                    <Animated.View\n                      style={[\n                        styles.tabItem,\n                        tabStyle,\n                        passedTabStyle,\n                        styles.container,\n                      ]}\n                    >\n                      {icon}\n                      {label}\n                    </Animated.View>\n                    {badge ? (\n                      <Animated.View\n                        style={[\n                          styles.badge,\n                          { opacity: this.state.visibility },\n                        ]}\n                      >\n                        {badge}\n                      </Animated.View>\n                    ) : null}\n                  </View>\n                </TouchableItem>\n              );\n            })}\n          </Animated.ScrollView>\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: Platform.OS === 'web' ? ('auto': any) : 'scroll',\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n    },\n    // We don't need zIndex on Android, disable it since it's buggy\n    zIndex: Platform.OS === 'android' ? 0 : 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  tabLabel: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    margin: 8,\n  },\n  tabItem: {\n    flex: 1,\n    padding: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  indicator: {\n    backgroundColor: '#ffeb3b',\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 2,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}