{"ast":null,"code":"import { StackRouter, createNavigator } from '@react-navigation/core';\nimport { createKeyboardAwareNavigator } from '@react-navigation/native';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StackView from \"../views/StackView/StackView\";\nfunction createStackNavigator(routeConfigMap) {\n  var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var router = StackRouter(routeConfigMap, stackConfig);\n  var Navigator = createNavigator(StackView, router, stackConfig);\n  if (!stackConfig.disableKeyboardHandling && Platform.OS !== 'web') {\n    Navigator = createKeyboardAwareNavigator(Navigator, stackConfig);\n  }\n  return Navigator;\n}\nexport default createStackNavigator;","map":{"version":3,"names":["StackRouter","createNavigator","createKeyboardAwareNavigator","Platform","StackView","createStackNavigator","routeConfigMap","stackConfig","arguments","length","undefined","router","Navigator","disableKeyboardHandling","OS"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-stack/lib/module/navigators/createStackNavigator.tsx"],"sourcesContent":["import { StackRouter, createNavigator } from '@react-navigation/core';\nimport { createKeyboardAwareNavigator } from '@react-navigation/native';\nimport { Platform } from 'react-native';\nimport StackView from '../views/StackView/StackView';\nimport { NavigationStackOptions, NavigationProp, Screen } from '../types';\n\nfunction createStackNavigator(\n  routeConfigMap: {\n    [key: string]:\n      | Screen\n      | ({ screen: Screen } | { getScreen(): Screen }) & {\n          path?: string;\n          navigationOptions?:\n            | NavigationStackOptions\n            | ((options: {\n                navigation: NavigationProp;\n              }) => NavigationStackOptions);\n        };\n  },\n  stackConfig: NavigationStackOptions = {}\n) {\n  const router = StackRouter(routeConfigMap, stackConfig);\n\n  // Create a navigator with StackView as the view\n  let Navigator = createNavigator(StackView, router, stackConfig);\n  if (!stackConfig.disableKeyboardHandling && Platform.OS !== 'web') {\n    Navigator = createKeyboardAwareNavigator(Navigator, stackConfig);\n  }\n\n  return Navigator;\n}\n\nexport default createStackNavigator;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,wBAA7C;AACA,SAASC,4BAAT,QAA6C,0BAA7C;AACA,OAAAC,QAAA;AACA,OAAOC,SAAP;AAGA,SAASC,oBAATA,CACEC,cADF,EAcE;EAAA,IADAC,WACA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADsC,EACtC;EACA,IAAMG,MAAM,GAAGX,WAAW,CAACM,cAAD,EAAiBC,WAAjB,CAA1B;EAGA,IAAIK,SAAS,GAAGX,eAAe,CAACG,SAAD,EAAYO,MAAZ,EAAoBJ,WAApB,CAA/B;EACA,IAAI,CAACA,WAAW,CAACM,uBAAb,IAAwCV,QAAQ,CAACW,EAAT,KAAgB,KAA5D,EAAmE;IACjEF,SAAS,GAAGV,4BAA4B,CAACU,SAAD,EAAYL,WAAZ,CAAxC;EACD;EAED,OAAOK,SAAP;AACD;AAED,eAAeP,oBAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}