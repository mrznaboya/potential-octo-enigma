{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport { SyntheticPlatformEmitter } from '@unimodules/core';\nimport { Orientation, WebOrientationLock, WebOrientation } from \"./ScreenOrientation.types\";\nimport { getOrientationLockAsync, getOrientationAsync } from \"./ScreenOrientation\";\nvar OrientationLockAPIToWeb = {\n  DEFAULT: WebOrientationLock.NATURAL,\n  ALL: WebOrientationLock.ANY,\n  PORTRAIT: WebOrientationLock.PORTRAIT,\n  PORTRAIT_UP: WebOrientationLock.PORTRAIT_PRIMARY,\n  PORTRAIT_DOWN: WebOrientationLock.PORTRAIT_SECONDARY,\n  LANDSCAPE: WebOrientationLock.LANDSCAPE,\n  LANDSCAPE_LEFT: WebOrientationLock.LANDSCAPE_PRIMARY,\n  LANDSCAPE_RIGHT: WebOrientationLock.LANDSCAPE_SECONDARY\n};\nvar OrientationWebToAPI = {\n  [WebOrientation.PORTRAIT_PRIMARY]: Orientation.PORTRAIT_UP,\n  [WebOrientation.PORTRAIT_SECONDARY]: Orientation.PORTRAIT_DOWN,\n  [WebOrientation.LANDSCAPE_PRIMARY]: Orientation.LANDSCAPE_LEFT,\n  [WebOrientation.LANDSCAPE_SECONDARY]: Orientation.LANDSCAPE_RIGHT\n};\nvar {\n  screen\n} = window;\nvar orientation = screen.orientation || screen.msOrientation || null;\nfunction emitOrientationEvent() {\n  return _emitOrientationEvent.apply(this, arguments);\n}\nfunction _emitOrientationEvent() {\n  _emitOrientationEvent = _asyncToGenerator(function* () {\n    var [orientationLock, orientationInfo] = yield Promise.all([getOrientationLockAsync(), getOrientationAsync()]);\n    SyntheticPlatformEmitter.emit('expoDidUpdateDimensions', {\n      orientationLock,\n      orientationInfo\n    });\n  });\n  return _emitOrientationEvent.apply(this, arguments);\n}\nif (orientation) {\n  orientation.addEventListener('change', emitOrientationEvent);\n} else {\n  window.addEventListener('orientationchange', emitOrientationEvent);\n}\nfunction _convertToLegacyOrientationLock(orientationLock) {\n  switch (orientationLock) {\n    case WebOrientationLock.UNKNOWN:\n      throw new Error(\"expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock to be converted.\");\n    case WebOrientationLock.ANY:\n      return ['portrait', 'landscape'];\n    case WebOrientationLock.NATURAL:\n      return 'default';\n    default:\n      return orientationLock;\n  }\n}\nfunction _lockAsync(_x) {\n  return _lockAsync2.apply(this, arguments);\n}\nfunction _lockAsync2() {\n  _lockAsync2 = _asyncToGenerator(function* (webOrientationLock) {\n    if (webOrientationLock === WebOrientationLock.UNKNOWN) {\n      throw new Error(\"expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock that can be applied to the device.\");\n    }\n    if (screen.orientation && screen.orientation.lock) {\n      yield screen.orientation.lock(webOrientationLock);\n    } else if (screen['lockOrientation'] || screen['mozLockOrientation'] || screen['msLockOrientation']) {\n      var legacyLock = _convertToLegacyOrientationLock(webOrientationLock);\n      var lockOrientation = screen['lockOrientation'] || screen['mozLockOrientation'] || screen['msLockOrientation'];\n      var isSuccess = lockOrientation.call(screen, legacyLock);\n      if (!isSuccess) {\n        throw new Error(\"Applying orientation lock: \".concat(JSON.stringify(webOrientationLock), \" to device was denied\"));\n      }\n    } else {\n      throw new Error(\"expo-screen-orientation: The browser doesn't support locking screen orientation.\");\n    }\n  });\n  return _lockAsync2.apply(this, arguments);\n}\nvar _lastWebOrientationLock = WebOrientationLock.UNKNOWN;\nexport default {\n  get name() {\n    return 'ExpoScreenOrientation';\n  },\n  supportsOrientationLockAsync(orientationLock) {\n    return _asyncToGenerator(function* () {\n      return orientationLock in OrientationLockAPIToWeb;\n    })();\n  },\n  getPlatformOrientationLockAsync() {\n    return _asyncToGenerator(function* () {\n      return _lastWebOrientationLock;\n    })();\n  },\n  getOrientationAsync() {\n    return _asyncToGenerator(function* () {\n      var webOrientation = screen['msOrientation'] || (screen.orientation || screen['mozOrientation'] || {}).type;\n      if (!webOrientation) {\n        throw new Error(\"getOrientationAsync isn't supported in this browser.\");\n      }\n      return {\n        orientation: OrientationWebToAPI[webOrientation]\n      };\n    })();\n  },\n  lockAsync(orientationLock) {\n    return _asyncToGenerator(function* () {\n      var webOrientationLock = OrientationLockAPIToWeb[orientationLock];\n      if (!webOrientationLock) {\n        throw new TypeError(\"Invalid Orientation Lock: \".concat(orientationLock));\n      }\n      yield _lockAsync(webOrientationLock);\n    })();\n  },\n  lockPlatformAsync(webOrientationLock) {\n    return _asyncToGenerator(function* () {\n      yield _lockAsync(webOrientationLock);\n      _lastWebOrientationLock = webOrientationLock;\n    })();\n  },\n  unlockAsync() {\n    return _asyncToGenerator(function* () {\n      if (screen.orientation && screen.orientation.unlock) {\n        screen.orientation.unlock();\n      } else if (screen['unlockOrientation'] || screen['mozUnlockOrientation'] || screen['msUnlockOrientation']) {\n        var unlockOrientation = screen['unlockOrientation'] || screen['mozUnlockOrientation'] || screen['msUnlockOrientation'];\n        var isSuccess = unlockOrientation.call(screen);\n        if (!isSuccess) {\n          throw new Error(\"Unlocking screen orientation on device was denied\");\n        }\n      } else {\n        throw new Error(\"expo-screen-orientation: The browser doesn't support unlocking screen orientation.\");\n      }\n    })();\n  }\n};","map":{"version":3,"names":["SyntheticPlatformEmitter","Orientation","WebOrientationLock","WebOrientation","getOrientationLockAsync","getOrientationAsync","OrientationLockAPIToWeb","DEFAULT","NATURAL","ALL","ANY","PORTRAIT","PORTRAIT_UP","PORTRAIT_PRIMARY","PORTRAIT_DOWN","PORTRAIT_SECONDARY","LANDSCAPE","LANDSCAPE_LEFT","LANDSCAPE_PRIMARY","LANDSCAPE_RIGHT","LANDSCAPE_SECONDARY","OrientationWebToAPI","screen","window","orientation","msOrientation","emitOrientationEvent","_emitOrientationEvent","apply","arguments","_asyncToGenerator","orientationLock","orientationInfo","Promise","all","emit","addEventListener","_convertToLegacyOrientationLock","UNKNOWN","Error","_lockAsync","_x","_lockAsync2","webOrientationLock","lock","legacyLock","lockOrientation","isSuccess","call","concat","JSON","stringify","_lastWebOrientationLock","name","supportsOrientationLockAsync","getPlatformOrientationLockAsync","webOrientation","type","lockAsync","TypeError","lockPlatformAsync","unlockAsync","unlock","unlockOrientation"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo/src/ScreenOrientation/ExpoScreenOrientation.web.ts"],"sourcesContent":["import { SyntheticPlatformEmitter } from '@unimodules/core';\n\nimport {\n  OrientationInfo,\n  Orientation,\n  OrientationLock,\n  WebOrientationLock,\n  WebOrientation,\n} from './ScreenOrientation.types';\n\nimport { getOrientationLockAsync, getOrientationAsync } from './ScreenOrientation';\n\nconst OrientationLockAPIToWeb: {\n  [lock: string]: WebOrientationLock;\n} = {\n  DEFAULT: WebOrientationLock.NATURAL,\n  ALL: WebOrientationLock.ANY,\n  PORTRAIT: WebOrientationLock.PORTRAIT,\n  PORTRAIT_UP: WebOrientationLock.PORTRAIT_PRIMARY,\n  PORTRAIT_DOWN: WebOrientationLock.PORTRAIT_SECONDARY,\n  LANDSCAPE: WebOrientationLock.LANDSCAPE,\n  LANDSCAPE_LEFT: WebOrientationLock.LANDSCAPE_PRIMARY,\n  LANDSCAPE_RIGHT: WebOrientationLock.LANDSCAPE_SECONDARY,\n};\n\nconst OrientationWebToAPI: {\n  [orientationWeb: string]: Orientation;\n} = {\n  [WebOrientation.PORTRAIT_PRIMARY]: Orientation.PORTRAIT_UP,\n  [WebOrientation.PORTRAIT_SECONDARY]: Orientation.PORTRAIT_DOWN,\n  [WebOrientation.LANDSCAPE_PRIMARY]: Orientation.LANDSCAPE_LEFT,\n  [WebOrientation.LANDSCAPE_SECONDARY]: Orientation.LANDSCAPE_RIGHT,\n};\n\ndeclare const window: Window;\n\nconst { screen } = window;\nconst orientation: ScreenOrientation | null =\n  screen.orientation || (screen as any).msOrientation || null;\n\nasync function emitOrientationEvent() {\n  const [orientationLock, orientationInfo] = await Promise.all([\n    getOrientationLockAsync(),\n    getOrientationAsync(),\n  ]);\n  SyntheticPlatformEmitter.emit('expoDidUpdateDimensions', {\n    orientationLock,\n    orientationInfo,\n  });\n}\n\nif (orientation) {\n  orientation.addEventListener('change', emitOrientationEvent);\n} else {\n  window.addEventListener('orientationchange', emitOrientationEvent);\n}\n\nfunction _convertToLegacyOrientationLock(orientationLock: WebOrientationLock): string | string[] {\n  switch (orientationLock) {\n    case WebOrientationLock.UNKNOWN:\n      throw new Error(\n        `expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock to be converted.`\n      );\n    case WebOrientationLock.ANY:\n      return ['portrait', 'landscape'];\n    case WebOrientationLock.NATURAL:\n      return 'default';\n    default:\n      return orientationLock;\n  }\n}\n\nasync function _lockAsync(webOrientationLock: WebOrientationLock): Promise<void> {\n  if (webOrientationLock === WebOrientationLock.UNKNOWN) {\n    throw new Error(\n      `expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock that can be applied to the device.`\n    );\n  }\n  if (screen.orientation && screen.orientation.lock) {\n    await screen.orientation.lock(webOrientationLock);\n  } else if (\n    screen['lockOrientation'] ||\n    screen['mozLockOrientation'] ||\n    screen['msLockOrientation']\n  ) {\n    const legacyLock = _convertToLegacyOrientationLock(webOrientationLock);\n    const lockOrientation =\n      screen['lockOrientation'] || screen['mozLockOrientation'] || screen['msLockOrientation'];\n    // correct `this` context must be passed in otherwise method call is disallowed by browser\n    const isSuccess = lockOrientation.call(screen, legacyLock);\n    if (!isSuccess) {\n      throw new Error(\n        `Applying orientation lock: ${JSON.stringify(webOrientationLock)} to device was denied`\n      );\n    }\n  } else {\n    throw new Error(\n      `expo-screen-orientation: The browser doesn't support locking screen orientation.`\n    );\n  }\n}\n\nlet _lastWebOrientationLock: WebOrientationLock = WebOrientationLock.UNKNOWN;\n\nexport default {\n  get name(): string {\n    return 'ExpoScreenOrientation';\n  },\n  async supportsOrientationLockAsync(orientationLock: OrientationLock): Promise<boolean> {\n    return orientationLock in OrientationLockAPIToWeb;\n  },\n  async getPlatformOrientationLockAsync(): Promise<WebOrientationLock> {\n    return _lastWebOrientationLock;\n  },\n  async getOrientationAsync(): Promise<OrientationInfo> {\n    const webOrientation =\n      screen['msOrientation'] || (screen.orientation || screen['mozOrientation'] || {}).type;\n    if (!webOrientation) {\n      throw new Error(`getOrientationAsync isn't supported in this browser.`);\n    }\n    return {\n      orientation: OrientationWebToAPI[webOrientation],\n    };\n  },\n  async lockAsync(orientationLock: OrientationLock): Promise<void> {\n    const webOrientationLock = OrientationLockAPIToWeb[orientationLock];\n    if (!webOrientationLock) {\n      throw new TypeError(`Invalid Orientation Lock: ${orientationLock}`);\n    }\n    await _lockAsync(webOrientationLock);\n  },\n  async lockPlatformAsync(webOrientationLock: WebOrientationLock): Promise<void> {\n    await _lockAsync(webOrientationLock);\n    _lastWebOrientationLock = webOrientationLock;\n  },\n  async unlockAsync(): Promise<void> {\n    if (screen.orientation && screen.orientation.unlock) {\n      screen.orientation.unlock();\n    } else if (\n      screen['unlockOrientation'] ||\n      screen['mozUnlockOrientation'] ||\n      screen['msUnlockOrientation']\n    ) {\n      const unlockOrientation =\n        screen['unlockOrientation'] ||\n        screen['mozUnlockOrientation'] ||\n        screen['msUnlockOrientation'];\n      // correct `this` context must be passed in otherwise method call is disallowed by browser\n      const isSuccess = unlockOrientation.call(screen);\n      if (!isSuccess) {\n        throw new Error(`Unlocking screen orientation on device was denied`);\n      }\n    } else {\n      throw new Error(\n        `expo-screen-orientation: The browser doesn't support unlocking screen orientation.`\n      );\n    }\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}