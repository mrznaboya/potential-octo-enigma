{"ast":null,"code":"var _jsxFileName = \"/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-tabs/src/views/MaterialTopTabBar.js\";\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TabBar } from 'react-native-tab-view';\nimport CrossFadeIcon from \"./CrossFadeIcon\";\nexport default class TabBarTop extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this._renderLabel = _ref => {\n      var {\n        route\n      } = _ref;\n      var {\n        position,\n        navigation,\n        activeTintColor,\n        inactiveTintColor,\n        showLabel,\n        upperCaseLabel,\n        labelStyle,\n        allowFontScaling\n      } = this.props;\n      if (showLabel === false) {\n        return null;\n      }\n      var {\n        routes\n      } = navigation.state;\n      var index = routes.indexOf(route);\n      var focused = index === navigation.state.index;\n      var inputRange = [-1, ...routes.map((x, i) => i)];\n      var outputRange = inputRange.map(inputIndex => inputIndex === index ? activeTintColor : inactiveTintColor);\n      var color = position.interpolate({\n        inputRange,\n        outputRange: outputRange\n      });\n      var tintColor = focused ? activeTintColor : inactiveTintColor;\n      var label = this.props.getLabelText({\n        route\n      });\n      if (typeof label === 'string') {\n        return React.createElement(Animated.Text, {\n          style: [styles.label, {\n            color\n          }, labelStyle],\n          allowFontScaling: allowFontScaling,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          }\n        }, upperCaseLabel ? label.toUpperCase() : label);\n      }\n      if (typeof label === 'function') {\n        return label({\n          focused,\n          tintColor\n        });\n      }\n      return label;\n    };\n    this._renderIcon = _ref2 => {\n      var {\n        route\n      } = _ref2;\n      var {\n        position,\n        navigation,\n        activeTintColor,\n        inactiveTintColor,\n        renderIcon,\n        showIcon,\n        iconStyle\n      } = this.props;\n      if (showIcon === false) {\n        return null;\n      }\n      var index = navigation.state.routes.indexOf(route);\n      var inputRange = [-1, ...navigation.state.routes.map((x, i) => i)];\n      var activeOpacity = position.interpolate({\n        inputRange,\n        outputRange: inputRange.map(i => i === index ? 1 : 0)\n      });\n      var inactiveOpacity = position.interpolate({\n        inputRange,\n        outputRange: inputRange.map(i => i === index ? 0 : 1)\n      });\n      return React.createElement(CrossFadeIcon, {\n        route: route,\n        navigation: navigation,\n        activeOpacity: activeOpacity,\n        inactiveOpacity: inactiveOpacity,\n        activeTintColor: activeTintColor,\n        inactiveTintColor: inactiveTintColor,\n        renderIcon: renderIcon,\n        style: [styles.icon, iconStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        }\n      });\n    };\n  }\n  render() {\n    var _this$props = this.props,\n      {\n        navigation,\n        renderIcon,\n        getLabelText\n      } = _this$props,\n      rest = _objectWithoutProperties(_this$props, [\"navigation\", \"renderIcon\", \"getLabelText\"]);\n    return React.createElement(TabBar, _extends({}, rest, {\n      navigationState: navigation.state,\n      renderIcon: this._renderIcon,\n      renderLabel: this._renderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      }\n    }));\n  }\n}\nTabBarTop.defaultProps = {\n  activeTintColor: '#fff',\n  inactiveTintColor: '#fff',\n  showIcon: false,\n  showLabel: true,\n  upperCaseLabel: true,\n  allowFontScaling: true\n};\nvar styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 13,\n    margin: 8,\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"names":["React","Animated","StyleSheet","TabBar","CrossFadeIcon","TabBarTop","PureComponent","constructor","arguments","_renderLabel","_ref","route","position","navigation","activeTintColor","inactiveTintColor","showLabel","upperCaseLabel","labelStyle","allowFontScaling","props","routes","state","index","indexOf","focused","inputRange","map","x","i","outputRange","inputIndex","color","interpolate","tintColor","label","getLabelText","createElement","Text","style","styles","__source","fileName","_jsxFileName","lineNumber","toUpperCase","_renderIcon","_ref2","renderIcon","showIcon","iconStyle","activeOpacity","inactiveOpacity","icon","render","_this$props","rest","_objectWithoutProperties","_extends","navigationState","renderLabel","defaultProps","create","height","width","textAlign","fontSize","margin","backgroundColor"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/react-navigation-tabs/src/views/MaterialTopTabBar.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { TabBar } from 'react-native-tab-view';\nimport CrossFadeIcon from './CrossFadeIcon';\n\nexport type TabBarOptions = {\n  activeTintColor?: string,\n  inactiveTintColor?: string,\n  showLabel?: boolean,\n  showIcon?: boolean,\n  upperCaseLabel?: boolean,\n  labelStyle?: any,\n  iconStyle?: any,\n  allowFontScaling?: boolean,\n};\n\ntype Props = TabBarOptions & {\n  position: Animated.Value,\n  offsetX: Animated.Value,\n  panX: Animated.Value,\n  layout: any,\n  navigation: any,\n  renderIcon: (props: {\n    route: any,\n    focused: boolean,\n    tintColor: string,\n  }) => React.Node,\n  getLabelText: (props: { route: any }) => any,\n  getAccessibilityLabel: (props: { route: any }) => string,\n  getTestID: (props: { route: any }) => string,\n  useNativeDriver?: boolean,\n  jumpTo: (key: string) => any,\n};\n\nexport default class TabBarTop extends React.PureComponent<Props> {\n  static defaultProps = {\n    activeTintColor: '#fff',\n    inactiveTintColor: '#fff',\n    showIcon: false,\n    showLabel: true,\n    upperCaseLabel: true,\n    allowFontScaling: true,\n  };\n\n  _renderLabel = ({ route }) => {\n    const {\n      position,\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      showLabel,\n      upperCaseLabel,\n      labelStyle,\n      allowFontScaling,\n    } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const { routes } = navigation.state;\n    const index = routes.indexOf(route);\n    const focused = index === navigation.state.index;\n\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...routes.map((x, i) => i)];\n    const outputRange = inputRange.map(inputIndex =>\n      inputIndex === index ? activeTintColor : inactiveTintColor\n    );\n    const color = position.interpolate({\n      inputRange,\n      outputRange: outputRange,\n    });\n\n    const tintColor = focused ? activeTintColor : inactiveTintColor;\n    const label = this.props.getLabelText({ route });\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          style={[styles.label, { color }, labelStyle]}\n          allowFontScaling={allowFontScaling}\n        >\n          {upperCaseLabel ? label.toUpperCase() : label}\n        </Animated.Text>\n      );\n    }\n    if (typeof label === 'function') {\n      return label({ focused, tintColor });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({ route }) => {\n    const {\n      position,\n      navigation,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      showIcon,\n      iconStyle,\n    } = this.props;\n\n    if (showIcon === false) {\n      return null;\n    }\n\n    const index = navigation.state.routes.indexOf(route);\n\n    // Prepend '-1', so there are always at least 2 items in inputRange\n    const inputRange = [-1, ...navigation.state.routes.map((x, i) => i)];\n    const activeOpacity = position.interpolate({\n      inputRange,\n      outputRange: inputRange.map(i => (i === index ? 1 : 0)),\n    });\n    const inactiveOpacity = position.interpolate({\n      inputRange,\n      outputRange: inputRange.map(i => (i === index ? 0 : 1)),\n    });\n\n    return (\n      <CrossFadeIcon\n        route={route}\n        navigation={navigation}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        style={[styles.icon, iconStyle]}\n      />\n    );\n  };\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const { navigation, renderIcon, getLabelText, ...rest } = this.props;\n\n    return (\n      /* $FlowFixMe */\n      <TabBar\n        {...rest}\n        navigationState={navigation.state}\n        renderIcon={this._renderIcon}\n        renderLabel={this._renderLabel}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 13,\n    margin: 8,\n    backgroundColor: 'transparent',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}