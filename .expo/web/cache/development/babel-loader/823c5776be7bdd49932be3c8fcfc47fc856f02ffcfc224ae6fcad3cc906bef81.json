{"ast":null,"code":"var _jsxFileName = \"/Users/zuyax/Developer/rn-starter/node_modules/expo-av/build/ExponentVideo.web.js\";\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ExponentAV from \"./ExponentAV\";\nexport var FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = 0;\nexport var FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = 1;\nexport var FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = 2;\nexport var FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = 3;\nexport var IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;\nexport var IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;\nexport var IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;\nexport var IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;\nexport default class ExponentVideo extends React.Component {\n  constructor() {\n    var _this;\n    super(...arguments);\n    _this = this;\n    this.onStatusUpdate = _asyncToGenerator(function* () {\n      if (!_this.props.onStatusUpdate) {\n        return;\n      }\n      var nativeEvent = yield ExponentAV.getStatusForVideo(_this._video);\n      _this.props.onStatusUpdate({\n        nativeEvent\n      });\n    });\n    this.onLoadStart = () => {\n      if (!this.props.onLoadStart) {\n        return;\n      }\n      this.props.onLoadStart();\n      this.onStatusUpdate();\n    };\n    this.onLoadedData = event => {\n      if (!this.props.onLoad) {\n        return;\n      }\n      this.props.onLoad(event);\n      this.onStatusUpdate();\n    };\n    this.onError = event => {\n      if (!this.props.onError) {\n        return;\n      }\n      this.props.onError(event);\n      this.onStatusUpdate();\n    };\n    this.onProgress = () => {\n      this.onStatusUpdate();\n    };\n    this.onSeeking = () => {\n      this.onStatusUpdate();\n    };\n    this.onEnded = () => {\n      this.onStatusUpdate();\n    };\n    this.onLoadedMetadata = () => {\n      this.onStatusUpdate();\n    };\n    this.onCanPlay = event => {\n      if (!this.props.onReadyForDisplay) {\n        return;\n      }\n      this.props.onReadyForDisplay(event);\n      this.onStatusUpdate();\n    };\n    this.onStalled = () => {\n      this.onStatusUpdate();\n    };\n    this.onRef = ref => {\n      this._video = ref;\n      this.onStatusUpdate();\n    };\n  }\n  render() {\n    var {\n      source,\n      status = {},\n      resizeMode: objectFit,\n      useNativeControls,\n      style\n    } = this.props;\n    var customStyle = {\n      position: undefined,\n      objectFit,\n      overflow: 'hidden'\n    };\n    var finalStyle = StyleSheet.flatten([style, customStyle]);\n    return React.createElement(\"video\", {\n      ref: this.onRef,\n      onLoadStart: this.onLoadStart,\n      onLoadedData: this.onLoadedData,\n      onError: this.onError,\n      onTimeUpdate: this.onProgress,\n      onSeeking: this.onSeeking,\n      onEnded: this.onEnded,\n      onLoadedMetadata: this.onLoadedMetadata,\n      onCanPlay: this.onCanPlay,\n      onStalled: this.onStalled,\n      src: (source || {\n        uri: undefined\n      }).uri,\n      muted: status.isMuted,\n      loop: status.isLooping,\n      autoPlay: status.shouldPlay,\n      controls: useNativeControls,\n      style: finalStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      }\n    });\n  }\n}","map":{"version":3,"names":["React","StyleSheet","ExponentAV","FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT","FULLSCREEN_UPDATE_PLAYER_DID_PRESENT","FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS","FULLSCREEN_UPDATE_PLAYER_DID_DISMISS","IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT","IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT","IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS","IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS","ExponentVideo","Component","constructor","_this","onStatusUpdate","_asyncToGenerator","props","nativeEvent","getStatusForVideo","_video","onLoadStart","onLoadedData","event","onLoad","onError","onProgress","onSeeking","onEnded","onLoadedMetadata","onCanPlay","onReadyForDisplay","onStalled","onRef","ref","render","source","status","resizeMode","objectFit","useNativeControls","style","customStyle","position","undefined","overflow","finalStyle","flatten","createElement","onTimeUpdate","src","uri","muted","isMuted","loop","isLooping","autoPlay","shouldPlay","controls","__source","fileName","_jsxFileName","lineNumber"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-av/src/ExponentVideo.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport ExponentAV from './ExponentAV';\n\nimport { PlaybackNativeSource, PlaybackStatus, PlaybackStatusToSet } from './AV';\n\ntype ExponentVideoProps = {\n  source: PlaybackNativeSource | null;\n  resizeMode?: Object;\n  status?: PlaybackStatusToSet;\n  useNativeControls?: boolean;\n  onStatusUpdate?: (event: { nativeEvent: PlaybackStatus }) => void;\n  onReadyForDisplay?: (event: { nativeEvent: Object }) => void;\n  onFullscreenUpdate?: (event: { nativeEvent: Object }) => void;\n  onLoadStart: () => void;\n  onLoad: (event: { nativeEvent: PlaybackStatus }) => void;\n  onError: (event: { nativeEvent: { error: string } }) => void;\n  // Required by react-native\n  scaleX?: number;\n  scaleY?: number;\n  translateX?: number;\n  translateY?: number;\n  rotation?: number;\n} & React.ComponentProps<typeof View>;\n\nexport type NaturalSize = {\n  width: number;\n  height: number;\n  orientation: 'portrait' | 'landscape';\n};\n\nexport const FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = 0;\nexport const FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = 1;\nexport const FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = 2;\nexport const FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = 3;\n\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;\n\nexport default class ExponentVideo extends React.Component<ExponentVideoProps> {\n  _video?: HTMLVideoElement;\n\n  onStatusUpdate = async () => {\n    if (!this.props.onStatusUpdate) {\n      return;\n    }\n    const nativeEvent = await ExponentAV.getStatusForVideo(this._video);\n    this.props.onStatusUpdate({ nativeEvent });\n  };\n\n  onLoadStart = () => {\n    if (!this.props.onLoadStart) {\n      return;\n    }\n    this.props.onLoadStart();\n    this.onStatusUpdate();\n  };\n\n  onLoadedData = event => {\n    if (!this.props.onLoad) {\n      return;\n    }\n    this.props.onLoad(event);\n    this.onStatusUpdate();\n  };\n\n  onError = event => {\n    if (!this.props.onError) {\n      return;\n    }\n    this.props.onError(event);\n    this.onStatusUpdate();\n  };\n\n  onProgress = () => {\n    this.onStatusUpdate();\n  };\n\n  onSeeking = () => {\n    this.onStatusUpdate();\n  };\n\n  onEnded = () => {\n    this.onStatusUpdate();\n  };\n\n  onLoadedMetadata = () => {\n    this.onStatusUpdate();\n  };\n\n  onCanPlay = event => {\n    if (!this.props.onReadyForDisplay) {\n      return;\n    }\n    this.props.onReadyForDisplay(event);\n    this.onStatusUpdate();\n  };\n\n  onStalled = () => {\n    this.onStatusUpdate();\n  };\n\n  onRef = (ref: HTMLVideoElement) => {\n    this._video = ref;\n    this.onStatusUpdate();\n  };\n\n  render() {\n    const { source, status = {}, resizeMode: objectFit, useNativeControls, style } = this.props;\n\n    const customStyle = {\n      position: undefined,\n      objectFit,\n      overflow: 'hidden',\n    } as any;\n    const finalStyle = StyleSheet.flatten([style, customStyle]) as React.CSSProperties;\n    return (\n      <video\n        ref={this.onRef}\n        onLoadStart={this.onLoadStart}\n        onLoadedData={this.onLoadedData}\n        onError={this.onError}\n        onTimeUpdate={this.onProgress}\n        onSeeking={this.onSeeking}\n        onEnded={this.onEnded}\n        onLoadedMetadata={this.onLoadedMetadata}\n        onCanPlay={this.onCanPlay}\n        onStalled={this.onStalled}\n        src={(source || { uri: undefined }).uri}\n        muted={status.isMuted}\n        loop={status.isLooping}\n        autoPlay={status.shouldPlay}\n        controls={useNativeControls}\n        style={finalStyle}\n      />\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}