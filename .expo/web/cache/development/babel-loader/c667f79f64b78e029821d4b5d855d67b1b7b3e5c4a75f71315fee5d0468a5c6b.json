{"ast":null,"code":"var _jsxFileName = \"/Users/zuyax/Developer/rn-starter/node_modules/expo-barcode-scanner/build/BarCodeScanner.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport { UnavailabilityError } from '@unimodules/core';\nimport mapValues from 'lodash/mapValues';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport ExpoBarCodeScannerModule from \"./ExpoBarCodeScannerModule\";\nimport ExpoBarCodeScannerView from \"./ExpoBarCodeScannerView\";\nvar {\n  BarCodeType,\n  Type\n} = ExpoBarCodeScannerModule;\nvar EVENT_THROTTLE_MS = 500;\nexport class BarCodeScanner extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.lastEvents = {};\n    this.lastEventsTimes = {};\n    this.onObjectDetected = callback => _ref => {\n      var {\n        nativeEvent\n      } = _ref;\n      var {\n        type\n      } = nativeEvent;\n      if (this.lastEvents[type] && this.lastEventsTimes[type] && JSON.stringify(nativeEvent) === this.lastEvents[type] && Date.now() - this.lastEventsTimes[type] < EVENT_THROTTLE_MS) {\n        return;\n      }\n      if (callback) {\n        callback(nativeEvent);\n        this.lastEventsTimes[type] = new Date();\n        this.lastEvents[type] = JSON.stringify(nativeEvent);\n      }\n    };\n  }\n  static scanFromURLAsync(url) {\n    var _arguments = arguments;\n    return _asyncToGenerator(function* () {\n      var barCodeTypes = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : Object.values(BarCodeType);\n      if (!ExpoBarCodeScannerModule.scanFromURLAsync) {\n        throw new UnavailabilityError('expo-barcode-scanner', 'scanFromURLAsync');\n      }\n      if (Array.isArray(barCodeTypes) && !barCodeTypes.length) {\n        throw new Error('No barCodeTypes specified; provide at least one barCodeType for scanner');\n      }\n      if (Platform.OS === 'ios') {\n        if (Array.isArray(barCodeTypes) && !barCodeTypes.includes(BarCodeType.qr)) {\n          throw new Error('Only QR type is supported by scanFromURLAsync() on iOS');\n        }\n        return yield ExpoBarCodeScannerModule.scanFromURLAsync(url, [BarCodeType.qr]);\n      }\n      return yield ExpoBarCodeScannerModule.scanFromURLAsync(url, barCodeTypes);\n    })();\n  }\n  render() {\n    var nativeProps = this.convertNativeProps(this.props);\n    var {\n      onBarCodeScanned\n    } = this.props;\n    return React.createElement(ExpoBarCodeScannerView, _extends({}, nativeProps, {\n      onBarCodeScanned: this.onObjectDetected(onBarCodeScanned),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      }\n    }));\n  }\n  convertNativeProps(props) {\n    var newProps = mapValues(props, this.convertProp);\n    return newProps;\n  }\n  convertProp(value, key) {\n    if (typeof value === 'string' && BarCodeScanner.ConversionTables[key]) {\n      return BarCodeScanner.ConversionTables[key][value];\n    }\n    return value;\n  }\n}\nBarCodeScanner.Constants = {\n  BarCodeType,\n  Type\n};\nBarCodeScanner.ConversionTables = {\n  type: Type\n};\nBarCodeScanner.propTypes = _objectSpread({}, ViewPropTypes, {\n  onBarCodeScanned: PropTypes.func,\n  barCodeTypes: PropTypes.array,\n  type: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n});\nBarCodeScanner.defaultProps = {\n  type: Type.back,\n  barCodeTypes: Object.values(BarCodeType)\n};\nexport var {\n  Constants\n} = BarCodeScanner;","map":{"version":3,"names":["UnavailabilityError","mapValues","PropTypes","React","Platform","ViewPropTypes","ExpoBarCodeScannerModule","ExpoBarCodeScannerView","BarCodeType","Type","EVENT_THROTTLE_MS","BarCodeScanner","Component","constructor","lastEvents","lastEventsTimes","onObjectDetected","callback","_ref","nativeEvent","type","JSON","stringify","Date","now","scanFromURLAsync","url","_arguments","arguments","_asyncToGenerator","barCodeTypes","length","undefined","Object","values","Array","isArray","Error","OS","includes","qr","render","nativeProps","convertNativeProps","props","onBarCodeScanned","createElement","_extends","__source","fileName","_jsxFileName","lineNumber","newProps","convertProp","value","key","ConversionTables","Constants","propTypes","_objectSpread","func","array","oneOfType","string","number","defaultProps","back"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-barcode-scanner/src/BarCodeScanner.tsx"],"sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport mapValues from 'lodash/mapValues';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Platform, ViewProps, ViewPropTypes } from 'react-native';\n\nimport ExpoBarCodeScannerModule from './ExpoBarCodeScannerModule';\nimport ExpoBarCodeScannerView from './ExpoBarCodeScannerView';\n\nconst { BarCodeType, Type } = ExpoBarCodeScannerModule;\n\nconst EVENT_THROTTLE_MS = 500;\n\ntype BarCodeEvent = {\n  type: string;\n  data: string;\n  [key: string]: any;\n};\n\nexport type BarCodeEventCallbackArguments = {\n  nativeEvent: BarCodeEvent;\n};\n\nexport type BarCodeScannedCallback = (params: BarCodeEvent) => void;\n\nexport interface BarCodeScannerProps extends ViewProps {\n  type?: 'front' | 'back' | number;\n  barCodeTypes?: string[];\n  onBarCodeScanned: BarCodeScannedCallback;\n}\n\nexport class BarCodeScanner extends React.Component<BarCodeScannerProps> {\n  lastEvents: { [key: string]: any } = {};\n  lastEventsTimes: { [key: string]: any } = {};\n\n  static Constants = {\n    BarCodeType,\n    Type,\n  };\n\n  static ConversionTables = {\n    type: Type,\n  };\n\n  static propTypes = {\n    ...ViewPropTypes,\n    onBarCodeScanned: PropTypes.func,\n    barCodeTypes: PropTypes.array,\n    type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  static defaultProps = {\n    type: Type.back,\n    barCodeTypes: Object.values(BarCodeType),\n  };\n\n  static async scanFromURLAsync(\n    url: string,\n    barCodeTypes: string[] = Object.values(BarCodeType)\n  ): Promise<{ type: string; data: string }> {\n    if (!ExpoBarCodeScannerModule.scanFromURLAsync) {\n      throw new UnavailabilityError('expo-barcode-scanner', 'scanFromURLAsync');\n    }\n    if (Array.isArray(barCodeTypes) && !barCodeTypes.length) {\n      throw new Error('No barCodeTypes specified; provide at least one barCodeType for scanner');\n    }\n\n    if (Platform.OS === 'ios') {\n      if (Array.isArray(barCodeTypes) && !barCodeTypes.includes(BarCodeType.qr)) {\n        // Only QR type is supported on iOS, fail if one tries to use other types\n        throw new Error('Only QR type is supported by scanFromURLAsync() on iOS');\n      }\n      // on iOS use only supported QR type\n      return await ExpoBarCodeScannerModule.scanFromURLAsync(url, [BarCodeType.qr]);\n    }\n\n    // On other platforms, if barCodeTypes is not provided, use all available types\n    return await ExpoBarCodeScannerModule.scanFromURLAsync(url, barCodeTypes);\n  }\n\n  render() {\n    const nativeProps = this.convertNativeProps(this.props);\n    const { onBarCodeScanned } = this.props;\n    return (\n      <ExpoBarCodeScannerView\n        {...nativeProps}\n        onBarCodeScanned={this.onObjectDetected(onBarCodeScanned)}\n      />\n    );\n  }\n\n  // coordinates of cornerPoints and boundingBox are represented in DP (Display-Indepent Points) unit\n  // React Native is using the same unit\n  onObjectDetected = (callback?: BarCodeScannedCallback) => ({\n    nativeEvent,\n  }: BarCodeEventCallbackArguments) => {\n    const { type } = nativeEvent;\n    if (\n      this.lastEvents[type] &&\n      this.lastEventsTimes[type] &&\n      JSON.stringify(nativeEvent) === this.lastEvents[type] &&\n      Date.now() - this.lastEventsTimes[type] < EVENT_THROTTLE_MS\n    ) {\n      return;\n    }\n\n    if (callback) {\n      callback(nativeEvent);\n      this.lastEventsTimes[type] = new Date();\n      this.lastEvents[type] = JSON.stringify(nativeEvent);\n    }\n  };\n\n  convertNativeProps(props: BarCodeScannerProps) {\n    const newProps = mapValues(props, this.convertProp);\n    return newProps;\n  }\n\n  convertProp(value: any, key: string): any {\n    if (typeof value === 'string' && BarCodeScanner.ConversionTables[key]) {\n      return BarCodeScanner.ConversionTables[key][value];\n    }\n    return value;\n  }\n}\n\nexport const { Constants } = BarCodeScanner;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}