{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport * as rtlDetect from 'rtl-detect';\nexport default {\n  get isRTL() {\n    return rtlDetect.isRtlLang(this.locale);\n  },\n  get locale() {\n    var locale = navigator.language || navigator['systemLanguage'] || navigator['browserLanguage'] || navigator['userLanguage'] || this.locales[0];\n    return locale;\n  },\n  get locales() {\n    var {\n      languages = []\n    } = navigator;\n    return Array.from(languages);\n  },\n  get timezone() {\n    var defaultTimeZone = 'Etc/UTC';\n    if (typeof Intl === 'undefined') {\n      return defaultTimeZone;\n    }\n    return Intl.DateTimeFormat().resolvedOptions().timeZone || defaultTimeZone;\n  },\n  get isoCurrencyCodes() {\n    return [];\n  },\n  get country() {\n    var {\n      locale\n    } = this;\n    if (typeof locale === 'string' && locale.length) {\n      var isoCountryCode = locale.substring(locale.lastIndexOf('-') + 1);\n      return isoCountryCode.toUpperCase();\n    }\n    return undefined;\n  },\n  getLocalizationAsync() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var {\n        country,\n        isoCurrencyCodes,\n        timezone,\n        locales,\n        locale,\n        isRTL\n      } = _this;\n      return {\n        country,\n        isoCurrencyCodes,\n        timezone,\n        locales,\n        locale,\n        isRTL\n      };\n    })();\n  }\n};","map":{"version":3,"names":["rtlDetect","isRTL","isRtlLang","locale","navigator","language","locales","languages","Array","from","timezone","defaultTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","isoCurrencyCodes","country","length","isoCountryCode","substring","lastIndexOf","toUpperCase","undefined","getLocalizationAsync","_this","_asyncToGenerator"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-localization/src/ExpoLocalization.web.ts"],"sourcesContent":["import * as rtlDetect from 'rtl-detect';\n\nimport { Localization } from './Localization.types';\n\nexport default {\n  get isRTL(): boolean {\n    return rtlDetect.isRtlLang(this.locale);\n  },\n  get locale(): string {\n    const locale =\n      navigator.language ||\n      navigator['systemLanguage'] ||\n      navigator['browserLanguage'] ||\n      navigator['userLanguage'] ||\n      this.locales[0];\n    return locale;\n  },\n  get locales(): string[] {\n    const { languages = [] } = navigator;\n    return Array.from(languages);\n  },\n  get timezone(): string {\n    const defaultTimeZone = 'Etc/UTC';\n    if (typeof Intl === 'undefined') {\n      return defaultTimeZone;\n    }\n    return Intl.DateTimeFormat().resolvedOptions().timeZone || defaultTimeZone;\n  },\n  get isoCurrencyCodes(): string[] {\n    // TODO: Bacon: Add this - very low priority\n    return [];\n  },\n  get country(): string | undefined {\n    const { locale } = this;\n    if (typeof locale === 'string' && locale.length) {\n      const isoCountryCode = locale.substring(locale.lastIndexOf('-') + 1);\n      return isoCountryCode.toUpperCase();\n    }\n    return undefined;\n  },\n  async getLocalizationAsync(): Promise<Localization> {\n    const { country, isoCurrencyCodes, timezone, locales, locale, isRTL } = this;\n    return {\n      country,\n      isoCurrencyCodes,\n      timezone,\n      locales,\n      locale,\n      isRTL,\n    };\n  },\n};\n"],"mappings":";;AAAA,OAAO,KAAKA,SAAS,MAAM,YAAY;AAIvC,eAAe;EACb,IAAIC,KAAKA,CAAA;IACP,OAAOD,SAAS,CAACE,SAAS,CAAC,IAAI,CAACC,MAAM,CAAC;EACzC,CAAC;EACD,IAAIA,MAAMA,CAAA;IACR,IAAMA,MAAM,GACVC,SAAS,CAACC,QAAQ,IAClBD,SAAS,CAAC,gBAAgB,CAAC,IAC3BA,SAAS,CAAC,iBAAiB,CAAC,IAC5BA,SAAS,CAAC,cAAc,CAAC,IACzB,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC;IACjB,OAAOH,MAAM;EACf,CAAC;EACD,IAAIG,OAAOA,CAAA;IACT,IAAM;MAAEC,SAAS,GAAG;IAAE,CAAE,GAAGH,SAAS;IACpC,OAAOI,KAAK,CAACC,IAAI,CAACF,SAAS,CAAC;EAC9B,CAAC;EACD,IAAIG,QAAQA,CAAA;IACV,IAAMC,eAAe,GAAG,SAAS;IACjC,IAAI,OAAOC,IAAI,KAAK,WAAW,EAAE;MAC/B,OAAOD,eAAe;;IAExB,OAAOC,IAAI,CAACC,cAAc,EAAE,CAACC,eAAe,EAAE,CAACC,QAAQ,IAAIJ,eAAe;EAC5E,CAAC;EACD,IAAIK,gBAAgBA,CAAA;IAElB,OAAO,EAAE;EACX,CAAC;EACD,IAAIC,OAAOA,CAAA;IACT,IAAM;MAAEd;IAAM,CAAE,GAAG,IAAI;IACvB,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACe,MAAM,EAAE;MAC/C,IAAMC,cAAc,GAAGhB,MAAM,CAACiB,SAAS,CAACjB,MAAM,CAACkB,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MACpE,OAAOF,cAAc,CAACG,WAAW,EAAE;;IAErC,OAAOC,SAAS;EAClB,CAAC;EACKC,oBAAoBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACxB,IAAM;QAAET,OAAO;QAAED,gBAAgB;QAAEN,QAAQ;QAAEJ,OAAO;QAAEH,MAAM;QAAEF;MAAK,CAAE,GAAGwB,KAAI;MAC5E,OAAO;QACLR,OAAO;QACPD,gBAAgB;QAChBN,QAAQ;QACRJ,OAAO;QACPH,MAAM;QACNF;OACD;IAAC;EACJ;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}