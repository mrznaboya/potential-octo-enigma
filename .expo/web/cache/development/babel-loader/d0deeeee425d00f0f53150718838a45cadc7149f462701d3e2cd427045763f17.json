{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport ExponentAV from \"./ExponentAV\";\nimport { Asset } from 'expo-asset';\nimport { Platform } from '@unimodules/core';\nexport var PitchCorrectionQuality;\n(function (PitchCorrectionQuality) {\n  PitchCorrectionQuality[PitchCorrectionQuality[\"Low\"] = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Low] = \"Low\";\n  PitchCorrectionQuality[PitchCorrectionQuality[\"Medium\"] = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Medium] = \"Medium\";\n  PitchCorrectionQuality[PitchCorrectionQuality[\"High\"] = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.High] = \"High\";\n})(PitchCorrectionQuality || (PitchCorrectionQuality = {}));\nexport var _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = 500;\nexport var _DEFAULT_INITIAL_PLAYBACK_STATUS = {\n  positionMillis: 0,\n  progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n  shouldPlay: false,\n  rate: 1.0,\n  shouldCorrectPitch: false,\n  volume: 1.0,\n  isMuted: false,\n  isLooping: false\n};\nexport function getNativeSourceFromSource(source) {\n  var uri = null;\n  var overridingExtension = null;\n  var headers;\n  if (typeof source === 'string' && Platform.OS === 'web') {\n    return {\n      uri: source,\n      overridingExtension,\n      headers\n    };\n  }\n  var asset = _getAssetFromPlaybackSource(source);\n  if (asset != null) {\n    uri = asset.localUri || asset.uri;\n  } else if (source != null && typeof source !== 'number' && 'uri' in source && typeof source.uri === 'string') {\n    uri = source.uri;\n  }\n  if (uri == null) {\n    return null;\n  }\n  if (source != null && typeof source !== 'number' && 'overrideFileExtensionAndroid' in source && typeof source.overrideFileExtensionAndroid === 'string') {\n    overridingExtension = source.overrideFileExtensionAndroid;\n  }\n  if (source != null && typeof source !== 'number' && 'headers' in source && typeof source.headers === 'object') {\n    headers = source.headers;\n  }\n  return {\n    uri,\n    overridingExtension,\n    headers\n  };\n}\nfunction _getAssetFromPlaybackSource(source) {\n  if (source == null) {\n    return null;\n  }\n  var asset = null;\n  if (typeof source === 'number') {\n    asset = Asset.fromModule(source);\n  } else if (source instanceof Asset) {\n    asset = source;\n  }\n  return asset;\n}\nexport function assertStatusValuesInBounds(status) {\n  if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n    throw new RangeError('Rate value must be between 0.0 and 32.0');\n  }\n  if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n    throw new RangeError('Volume value must be between 0.0 and 1.0');\n  }\n}\nexport function getNativeSourceAndFullInitialStatusForLoadAsync(_x, _x2, _x3) {\n  return _getNativeSourceAndFullInitialStatusForLoadAsync.apply(this, arguments);\n}\nfunction _getNativeSourceAndFullInitialStatusForLoadAsync() {\n  _getNativeSourceAndFullInitialStatusForLoadAsync = _asyncToGenerator(function* (source, initialStatus, downloadFirst) {\n    var fullInitialStatus = initialStatus == null ? _DEFAULT_INITIAL_PLAYBACK_STATUS : _objectSpread({}, _DEFAULT_INITIAL_PLAYBACK_STATUS, {}, initialStatus);\n    assertStatusValuesInBounds(fullInitialStatus);\n    if (typeof source === 'string' && Platform.OS === 'web') {\n      return {\n        nativeSource: {\n          uri: source,\n          overridingExtension: null\n        },\n        fullInitialStatus\n      };\n    }\n    var asset = _getAssetFromPlaybackSource(source);\n    if (downloadFirst && asset) {\n      yield asset.downloadAsync();\n    }\n    var nativeSource = getNativeSourceFromSource(source);\n    if (nativeSource === null) {\n      throw new Error(\"Cannot load an AV asset from a null playback source\");\n    }\n    return {\n      nativeSource,\n      fullInitialStatus\n    };\n  });\n  return _getNativeSourceAndFullInitialStatusForLoadAsync.apply(this, arguments);\n}\nexport function getUnloadedStatus() {\n  var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return _objectSpread({\n    isLoaded: false\n  }, error ? {\n    error\n  } : null);\n}\nexport var PlaybackMixin = {\n  playAsync() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.setStatusAsync({\n        shouldPlay: true\n      });\n    })();\n  },\n  playFromPositionAsync(positionMillis) {\n    var _arguments = arguments,\n      _this2 = this;\n    return _asyncToGenerator(function* () {\n      var tolerances = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n      return _this2.setStatusAsync({\n        positionMillis,\n        shouldPlay: true,\n        seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n        seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n      });\n    })();\n  },\n  pauseAsync() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.setStatusAsync({\n        shouldPlay: false\n      });\n    })();\n  },\n  stopAsync() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return _this4.setStatusAsync({\n        positionMillis: 0,\n        shouldPlay: false\n      });\n    })();\n  },\n  setPositionAsync(positionMillis) {\n    var _arguments2 = arguments,\n      _this5 = this;\n    return _asyncToGenerator(function* () {\n      var tolerances = _arguments2.length > 1 && _arguments2[1] !== undefined ? _arguments2[1] : {};\n      return _this5.setStatusAsync({\n        positionMillis,\n        seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n        seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n      });\n    })();\n  },\n  setRateAsync(rate) {\n    var _arguments3 = arguments,\n      _this6 = this;\n    return _asyncToGenerator(function* () {\n      var shouldCorrectPitch = _arguments3.length > 1 && _arguments3[1] !== undefined ? _arguments3[1] : false;\n      var pitchCorrectionQuality = _arguments3.length > 2 && _arguments3[2] !== undefined ? _arguments3[2] : PitchCorrectionQuality.Low;\n      return _this6.setStatusAsync({\n        rate,\n        shouldCorrectPitch,\n        pitchCorrectionQuality\n      });\n    })();\n  },\n  setVolumeAsync(volume) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      return _this7.setStatusAsync({\n        volume\n      });\n    })();\n  },\n  setIsMutedAsync(isMuted) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      return _this8.setStatusAsync({\n        isMuted\n      });\n    })();\n  },\n  setIsLoopingAsync(isLooping) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      return _this9.setStatusAsync({\n        isLooping\n      });\n    })();\n  },\n  setProgressUpdateIntervalAsync(progressUpdateIntervalMillis) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      return _this10.setStatusAsync({\n        progressUpdateIntervalMillis\n      });\n    })();\n  }\n};","map":{"version":3,"names":["ExponentAV","Asset","Platform","PitchCorrectionQuality","Qualities","Low","Medium","High","_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS","_DEFAULT_INITIAL_PLAYBACK_STATUS","positionMillis","progressUpdateIntervalMillis","shouldPlay","rate","shouldCorrectPitch","volume","isMuted","isLooping","getNativeSourceFromSource","source","uri","overridingExtension","headers","OS","asset","_getAssetFromPlaybackSource","localUri","overrideFileExtensionAndroid","fromModule","assertStatusValuesInBounds","status","RangeError","getNativeSourceAndFullInitialStatusForLoadAsync","_x","_x2","_x3","_getNativeSourceAndFullInitialStatusForLoadAsync","apply","arguments","_asyncToGenerator","initialStatus","downloadFirst","fullInitialStatus","_objectSpread","nativeSource","downloadAsync","Error","getUnloadedStatus","error","length","undefined","isLoaded","PlaybackMixin","playAsync","_this","setStatusAsync","playFromPositionAsync","_arguments","_this2","tolerances","seekMillisToleranceAfter","toleranceMillisAfter","seekMillisToleranceBefore","toleranceMillisBefore","pauseAsync","_this3","stopAsync","_this4","setPositionAsync","_arguments2","_this5","setRateAsync","_arguments3","_this6","pitchCorrectionQuality","setVolumeAsync","_this7","setIsMutedAsync","_this8","setIsLoopingAsync","_this9","setProgressUpdateIntervalAsync","_this10"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-av/src/AV.ts"],"sourcesContent":["import ExponentAV from './ExponentAV';\nimport { Asset } from 'expo-asset';\nimport { Platform } from '@unimodules/core';\n// TODO add:\n//  disableFocusOnAndroid\n//  audio routes (at least did become noisy on android)\n//  pan\n//  pitch\n//  API to explicitly request audio focus / session\n//  API to select stream type on Android\n//  subtitles API\n\nexport enum PitchCorrectionQuality {\n  Low = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Low,\n  Medium = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Medium,\n  High = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.High,\n}\n\nexport type PlaybackSource =\n  | number\n  | {\n    uri: string;\n    overrideFileExtensionAndroid?: string;\n    headers?: { [fieldName: string]: string };\n  }\n  | Asset;\n\nexport type PlaybackNativeSource = {\n  uri: string;\n  overridingExtension?: string | null;\n  headers?: { [fieldName: string]: string };\n};\n\nexport type PlaybackStatus =\n  | {\n      isLoaded: false;\n      androidImplementation?: string;\n      error?: string; // populated exactly once when an error forces the object to unload\n    }\n  | {\n      isLoaded: true;\n      androidImplementation?: string;\n\n      uri: string;\n\n      progressUpdateIntervalMillis: number;\n      durationMillis?: number;\n      positionMillis: number;\n      playableDurationMillis?: number;\n      seekMillisToleranceBefore?: number;\n      seekMillisToleranceAfter?: number;\n\n      shouldPlay: boolean;\n      isPlaying: boolean;\n      isBuffering: boolean;\n\n      rate: number;\n      shouldCorrectPitch: boolean;\n      volume: number;\n      isMuted: boolean;\n      isLooping: boolean;\n\n      didJustFinish: boolean; // true exactly once when the track plays to finish\n    };\n\nexport type PlaybackStatusToSet = {\n  androidImplementation?: string;\n  progressUpdateIntervalMillis?: number;\n  positionMillis?: number;\n  seekMillisToleranceBefore?: number;\n  seekMillisToleranceAfter?: number;\n  shouldPlay?: boolean;\n  rate?: number;\n  shouldCorrectPitch?: boolean;\n  volume?: number;\n  isMuted?: boolean;\n  isLooping?: boolean;\n  pitchCorrectionQuality?: PitchCorrectionQuality;\n};\n\nexport const _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS: number = 500;\nexport const _DEFAULT_INITIAL_PLAYBACK_STATUS: PlaybackStatusToSet = {\n  positionMillis: 0,\n  progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n  shouldPlay: false,\n  rate: 1.0,\n  shouldCorrectPitch: false,\n  volume: 1.0,\n  isMuted: false,\n  isLooping: false,\n};\n\nexport function getNativeSourceFromSource(\n  source?: PlaybackSource | null\n): PlaybackNativeSource | null {\n  let uri: string | null = null;\n  let overridingExtension: string | null = null;\n  let headers: { [fieldName: string]: string } | undefined;\n\n  if (typeof source === 'string' && Platform.OS === 'web') {\n    return {\n      uri: source,\n      overridingExtension,\n      headers,\n    };\n  }\n\n  let asset: Asset | null = _getAssetFromPlaybackSource(source);\n  if (asset != null) {\n    uri = asset.localUri || asset.uri;\n  } else if (\n    source != null &&\n    typeof source !== 'number' &&\n    'uri' in source &&\n    typeof source.uri === 'string'\n  ) {\n    uri = source.uri;\n  }\n\n  if (uri == null) {\n    return null;\n  }\n\n  if (\n    source != null &&\n    typeof source !== 'number' &&\n    'overrideFileExtensionAndroid' in source &&\n    typeof source.overrideFileExtensionAndroid === 'string'\n  ) {\n    overridingExtension = source.overrideFileExtensionAndroid;\n  }\n\n  if (\n    source != null &&\n    typeof source !== 'number' &&\n    'headers' in source &&\n    typeof source.headers === 'object'\n  ) {\n    headers = source.headers;\n  }\n  return { uri, overridingExtension, headers };\n}\n\nfunction _getAssetFromPlaybackSource(source?: PlaybackSource | null): Asset | null {\n  if (source == null) {\n    return null;\n  }\n\n  let asset: Asset | null = null;\n  if (typeof source === 'number') {\n    asset = Asset.fromModule(source);\n  } else if (source instanceof Asset) {\n    asset = source;\n  }\n  return asset;\n}\n\nexport function assertStatusValuesInBounds(status: PlaybackStatusToSet): void {\n  if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n    throw new RangeError('Rate value must be between 0.0 and 32.0');\n  }\n  if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n    throw new RangeError('Volume value must be between 0.0 and 1.0');\n  }\n}\n\nexport async function getNativeSourceAndFullInitialStatusForLoadAsync(\n  source: PlaybackSource | null,\n  initialStatus: PlaybackStatusToSet | null,\n  downloadFirst: boolean\n): Promise<{\n  nativeSource: PlaybackNativeSource;\n  fullInitialStatus: PlaybackStatusToSet;\n}> {\n  // Get the full initial status\n  const fullInitialStatus: PlaybackStatusToSet =\n    initialStatus == null\n      ? _DEFAULT_INITIAL_PLAYBACK_STATUS\n      : {\n          ..._DEFAULT_INITIAL_PLAYBACK_STATUS,\n          ...initialStatus,\n        };\n  assertStatusValuesInBounds(fullInitialStatus);\n\n  if (typeof source === 'string' && Platform.OS === 'web') {\n    return {\n      nativeSource: {\n        uri: source,\n        overridingExtension: null,\n      },\n      fullInitialStatus,\n    };\n  }\n\n  // Download first if necessary.\n  let asset = _getAssetFromPlaybackSource(source);\n  if (downloadFirst && asset) {\n    // TODO we can download remote uri too once @nikki93 has integrated this into Asset\n    await asset.downloadAsync();\n  }\n\n  // Get the native source\n  const nativeSource: PlaybackNativeSource | null = getNativeSourceFromSource(source);\n\n  if (nativeSource === null) {\n    throw new Error(`Cannot load an AV asset from a null playback source`);\n  }\n\n  return { nativeSource, fullInitialStatus };\n}\n\nexport function getUnloadedStatus(error: string | null = null): PlaybackStatus {\n  return {\n    isLoaded: false,\n    ...(error ? { error } : null),\n  };\n}\n\nexport interface AV {\n  setStatusAsync(status: PlaybackStatusToSet): Promise<PlaybackStatus>;\n}\n\nexport interface Playback extends AV {\n  playAsync(): Promise<PlaybackStatus>;\n  playFromPositionAsync(\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ): Promise<PlaybackStatus>;\n  pauseAsync(): Promise<PlaybackStatus>;\n  stopAsync(): Promise<PlaybackStatus>;\n  setPositionAsync(\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ): Promise<PlaybackStatus>;\n  setRateAsync(\n    rate: number,\n    shouldCorrectPitch: boolean,\n    pitchCorrectionQuality?: PitchCorrectionQuality\n  ): Promise<PlaybackStatus>;\n  setVolumeAsync(volume: number): Promise<PlaybackStatus>;\n  setIsMutedAsync(isMuted: boolean): Promise<PlaybackStatus>;\n  setIsLoopingAsync(isLooping: boolean): Promise<PlaybackStatus>;\n  setProgressUpdateIntervalAsync(progressUpdateIntervalMillis: number): Promise<PlaybackStatus>;\n}\n\n/**\n * A mixin that defines common playback methods for A/V classes so they implement the `Playback`\n * interface\n */\nexport const PlaybackMixin = {\n  async playAsync(): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ shouldPlay: true });\n  },\n\n  async playFromPositionAsync(\n    positionMillis: number,\n    tolerances: { toleranceMillisBefore?: number; toleranceMillisAfter?: number } = {}\n  ): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({\n      positionMillis,\n      shouldPlay: true,\n      seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n      seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n    });\n  },\n\n  async pauseAsync(): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ shouldPlay: false });\n  },\n\n  async stopAsync(): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ positionMillis: 0, shouldPlay: false });\n  },\n\n  async setPositionAsync(\n    positionMillis: number,\n    tolerances: { toleranceMillisBefore?: number; toleranceMillisAfter?: number } = {}\n  ): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({\n      positionMillis,\n      seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n      seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n    });\n  },\n\n  async setRateAsync(\n    rate: number,\n    shouldCorrectPitch: boolean = false,\n    pitchCorrectionQuality: PitchCorrectionQuality = PitchCorrectionQuality.Low\n  ): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({\n      rate,\n      shouldCorrectPitch,\n      pitchCorrectionQuality,\n    });\n  },\n\n  async setVolumeAsync(volume: number): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ volume });\n  },\n\n  async setIsMutedAsync(isMuted: boolean): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ isMuted });\n  },\n\n  async setIsLoopingAsync(isLooping: boolean): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ isLooping });\n  },\n\n  async setProgressUpdateIntervalAsync(\n    progressUpdateIntervalMillis: number\n  ): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ progressUpdateIntervalMillis });\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}