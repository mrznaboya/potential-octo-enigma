{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NativeModulesProxy } from '@unimodules/core';\nexport var BrightnessMode;\n(function (BrightnessMode) {\n  BrightnessMode[BrightnessMode[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  BrightnessMode[BrightnessMode[\"AUTOMATIC\"] = 1] = \"AUTOMATIC\";\n  BrightnessMode[BrightnessMode[\"MANUAL\"] = 2] = \"MANUAL\";\n})(BrightnessMode || (BrightnessMode = {}));\n;\nexport function getBrightnessAsync() {\n  return _getBrightnessAsync.apply(this, arguments);\n}\nfunction _getBrightnessAsync() {\n  _getBrightnessAsync = _asyncToGenerator(function* () {\n    return yield NativeModulesProxy.ExpoBrightness.getBrightnessAsync();\n  });\n  return _getBrightnessAsync.apply(this, arguments);\n}\nexport function setBrightnessAsync(_x) {\n  return _setBrightnessAsync.apply(this, arguments);\n}\nfunction _setBrightnessAsync() {\n  _setBrightnessAsync = _asyncToGenerator(function* (brightnessValue) {\n    var clampedBrightnessValue = Math.max(0, Math.min(brightnessValue, 1));\n    if (isNaN(clampedBrightnessValue)) {\n      throw new TypeError(\"setBrightnessAsync cannot be called with \".concat(brightnessValue));\n    }\n    return yield NativeModulesProxy.ExpoBrightness.setBrightnessAsync(clampedBrightnessValue);\n  });\n  return _setBrightnessAsync.apply(this, arguments);\n}\nexport function getSystemBrightnessAsync() {\n  return _getSystemBrightnessAsync.apply(this, arguments);\n}\nfunction _getSystemBrightnessAsync() {\n  _getSystemBrightnessAsync = _asyncToGenerator(function* () {\n    if (Platform.OS !== 'android') {\n      return yield getBrightnessAsync();\n    }\n    return yield NativeModulesProxy.ExpoBrightness.getSystemBrightnessAsync();\n  });\n  return _getSystemBrightnessAsync.apply(this, arguments);\n}\nexport function setSystemBrightnessAsync(_x2) {\n  return _setSystemBrightnessAsync.apply(this, arguments);\n}\nfunction _setSystemBrightnessAsync() {\n  _setSystemBrightnessAsync = _asyncToGenerator(function* (brightnessValue) {\n    var clampedBrightnessValue = Math.max(0, Math.min(brightnessValue, 1));\n    if (isNaN(clampedBrightnessValue)) {\n      throw new TypeError(\"setSystemBrightnessAsync cannot be called with \".concat(brightnessValue));\n    }\n    if (Platform.OS !== 'android') {\n      return yield setBrightnessAsync(clampedBrightnessValue);\n    }\n    return yield NativeModulesProxy.ExpoBrightness.setSystemBrightnessAsync(clampedBrightnessValue);\n  });\n  return _setSystemBrightnessAsync.apply(this, arguments);\n}\nexport function useSystemBrightnessAsync() {\n  return _useSystemBrightnessAsync.apply(this, arguments);\n}\nfunction _useSystemBrightnessAsync() {\n  _useSystemBrightnessAsync = _asyncToGenerator(function* () {\n    if (Platform.OS !== 'android') {\n      return;\n    }\n    return yield NativeModulesProxy.ExpoBrightness.useSystemBrightnessAsync();\n  });\n  return _useSystemBrightnessAsync.apply(this, arguments);\n}\nexport function isUsingSystemBrightnessAsync() {\n  return _isUsingSystemBrightnessAsync.apply(this, arguments);\n}\nfunction _isUsingSystemBrightnessAsync() {\n  _isUsingSystemBrightnessAsync = _asyncToGenerator(function* () {\n    if (Platform.OS !== 'android') {\n      return false;\n    }\n    return yield NativeModulesProxy.ExpoBrightness.isUsingSystemBrightnessAsync();\n  });\n  return _isUsingSystemBrightnessAsync.apply(this, arguments);\n}\nexport function getSystemBrightnessModeAsync() {\n  return _getSystemBrightnessModeAsync.apply(this, arguments);\n}\nfunction _getSystemBrightnessModeAsync() {\n  _getSystemBrightnessModeAsync = _asyncToGenerator(function* () {\n    if (Platform.OS !== 'android') {\n      return BrightnessMode.UNKNOWN;\n    }\n    return yield NativeModulesProxy.ExpoBrightness.getSystemBrightnessModeAsync();\n  });\n  return _getSystemBrightnessModeAsync.apply(this, arguments);\n}\nexport function setSystemBrightnessModeAsync(_x3) {\n  return _setSystemBrightnessModeAsync.apply(this, arguments);\n}\nfunction _setSystemBrightnessModeAsync() {\n  _setSystemBrightnessModeAsync = _asyncToGenerator(function* (brightnessMode) {\n    if (Platform.OS !== 'android' || brightnessMode === BrightnessMode.UNKNOWN) {\n      return;\n    }\n    return yield NativeModulesProxy.ExpoBrightness.setSystemBrightnessModeAsync(brightnessMode);\n  });\n  return _setSystemBrightnessModeAsync.apply(this, arguments);\n}","map":{"version":3,"names":["NativeModulesProxy","BrightnessMode","getBrightnessAsync","_getBrightnessAsync","apply","arguments","_asyncToGenerator","ExpoBrightness","setBrightnessAsync","_x","_setBrightnessAsync","brightnessValue","clampedBrightnessValue","Math","max","min","isNaN","TypeError","concat","getSystemBrightnessAsync","_getSystemBrightnessAsync","Platform","OS","setSystemBrightnessAsync","_x2","_setSystemBrightnessAsync","useSystemBrightnessAsync","_useSystemBrightnessAsync","isUsingSystemBrightnessAsync","_isUsingSystemBrightnessAsync","getSystemBrightnessModeAsync","_getSystemBrightnessModeAsync","UNKNOWN","setSystemBrightnessModeAsync","_x3","_setSystemBrightnessModeAsync","brightnessMode"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-brightness/src/Brightness.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport { NativeModulesProxy } from '@unimodules/core';\n\nexport enum BrightnessMode {\n  UNKNOWN = 0,\n  AUTOMATIC = 1,\n  MANUAL = 2,\n};\n\nexport async function getBrightnessAsync(): Promise<number> {\n  return await NativeModulesProxy.ExpoBrightness.getBrightnessAsync();\n}\n\nexport async function setBrightnessAsync(brightnessValue: number): Promise<void> {\n  let clampedBrightnessValue = Math.max(0, Math.min(brightnessValue, 1));\n  if (isNaN(clampedBrightnessValue)) {\n    throw new TypeError(`setBrightnessAsync cannot be called with ${brightnessValue}`);\n  }\n  return await NativeModulesProxy.ExpoBrightness.setBrightnessAsync(clampedBrightnessValue);\n}\n\nexport async function getSystemBrightnessAsync(): Promise<number> {\n  if (Platform.OS !== 'android') {\n    return await getBrightnessAsync();\n  }\n  return await NativeModulesProxy.ExpoBrightness.getSystemBrightnessAsync();\n}\n\nexport async function setSystemBrightnessAsync(brightnessValue: number): Promise<void> {\n  let clampedBrightnessValue = Math.max(0, Math.min(brightnessValue, 1));\n  if (isNaN(clampedBrightnessValue)) {\n    throw new TypeError(`setSystemBrightnessAsync cannot be called with ${brightnessValue}`);\n  }\n  if (Platform.OS !== 'android') {\n    return await setBrightnessAsync(clampedBrightnessValue);\n  }\n  return await NativeModulesProxy.ExpoBrightness.setSystemBrightnessAsync(clampedBrightnessValue);\n}\n\nexport async function useSystemBrightnessAsync(): Promise<void> {\n  if (Platform.OS !== 'android') {\n    return;\n  }\n  return await NativeModulesProxy.ExpoBrightness.useSystemBrightnessAsync();\n}\n\nexport async function isUsingSystemBrightnessAsync(): Promise<boolean> {\n  if (Platform.OS !== 'android') {\n    return false;\n  }\n  return await NativeModulesProxy.ExpoBrightness.isUsingSystemBrightnessAsync();\n}\n\nexport async function getSystemBrightnessModeAsync(): Promise<BrightnessMode> {\n  if (Platform.OS !== 'android') {\n    return BrightnessMode.UNKNOWN;\n  }\n  return await NativeModulesProxy.ExpoBrightness.getSystemBrightnessModeAsync();\n}\n\nexport async function setSystemBrightnessModeAsync(brightnessMode: BrightnessMode): Promise<void> {\n  if (Platform.OS !== 'android' || brightnessMode === BrightnessMode.UNKNOWN) {\n    return;\n  }\n  return await NativeModulesProxy.ExpoBrightness.setSystemBrightnessModeAsync(brightnessMode);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}