{"ast":null,"code":"import FontObserver from 'fontfaceobserver';\nexport default {\n  get name() {\n    return 'ExpoFontLoader';\n  },\n  loadAsync(fontFamilyName, resource) {\n    var canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new Error('E_FONT_CREATION_FAILED : document element cannot support injecting fonts');\n    }\n    var style = _createWebStyle(fontFamilyName, resource);\n    document.head.appendChild(style);\n    return new FontObserver(fontFamilyName).load();\n  }\n};\nfunction _createWebStyle(fontFamily, resource) {\n  var fontStyle = \"@font-face {\\n    font-family: \".concat(fontFamily, \";\\n    src: url(\").concat(resource, \");\\n  }\");\n  var styleElement = document.createElement('style');\n  styleElement.type = 'text/css';\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = fontStyle;\n  } else {\n    var textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}","map":{"version":3,"names":["FontObserver","name","loadAsync","fontFamilyName","resource","canInjectStyle","document","head","appendChild","Error","style","_createWebStyle","load","fontFamily","fontStyle","concat","styleElement","createElement","type","styleSheet","cssText","textNode","createTextNode"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-font/src/ExpoFontLoader.web.ts"],"sourcesContent":["import FontObserver from 'fontfaceobserver';\n\nexport default {\n  get name(): string {\n    return 'ExpoFontLoader';\n  },\n\n  loadAsync(fontFamilyName: string, resource: string): Promise<void> {\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new Error('E_FONT_CREATION_FAILED : document element cannot support injecting fonts');\n    }\n\n    const style = _createWebStyle(fontFamilyName, resource);\n    document.head!.appendChild(style);\n    return new FontObserver(fontFamilyName).load();\n  },\n};\n\nfunction _createWebStyle(fontFamily: string, resource: string): HTMLStyleElement {\n  const fontStyle = `@font-face {\n    font-family: ${fontFamily};\n    src: url(${resource});\n  }`;\n\n  const styleElement = document.createElement('style');\n  styleElement.type = 'text/css';\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    // @ts-ignore\n    styleElement.styleSheet.cssText = fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,kBAAkB;AAE3C,eAAe;EACb,IAAIC,IAAIA,CAAA;IACN,OAAO,gBAAgB;EACzB,CAAC;EAEDC,SAASA,CAACC,cAAsB,EAAEC,QAAgB;IAChD,IAAMC,cAAc,GAAGC,QAAQ,CAACC,IAAI,IAAI,OAAOD,QAAQ,CAACC,IAAI,CAACC,WAAW,KAAK,UAAU;IACvF,IAAI,CAACH,cAAc,EAAE;MACnB,MAAM,IAAII,KAAK,CAAC,0EAA0E,CAAC;;IAG7F,IAAMC,KAAK,GAAGC,eAAe,CAACR,cAAc,EAAEC,QAAQ,CAAC;IACvDE,QAAQ,CAACC,IAAK,CAACC,WAAW,CAACE,KAAK,CAAC;IACjC,OAAO,IAAIV,YAAY,CAACG,cAAc,CAAC,CAACS,IAAI,EAAE;EAChD;CACD;AAED,SAASD,eAAeA,CAACE,UAAkB,EAAET,QAAgB;EAC3D,IAAMU,SAAS,qCAAAC,MAAA,CACEF,UAAU,sBAAAE,MAAA,CACdX,QAAQ,YACnB;EAEF,IAAMY,YAAY,GAAGV,QAAQ,CAACW,aAAa,CAAC,OAAO,CAAC;EACpDD,YAAY,CAACE,IAAI,GAAG,UAAU;EAG9B,IAAIF,YAAY,CAACG,UAAU,EAAE;IAE3BH,YAAY,CAACG,UAAU,CAACC,OAAO,GAAGN,SAAS;GAC5C,MAAM;IACL,IAAMO,QAAQ,GAAGf,QAAQ,CAACgB,cAAc,CAACR,SAAS,CAAC;IACnDE,YAAY,CAACR,WAAW,CAACa,QAAQ,CAAC;;EAEpC,OAAOL,YAAY;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}