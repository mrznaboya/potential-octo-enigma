{"ast":null,"code":"var _jsxFileName = \"/Users/zuyax/Developer/rn-starter/node_modules/expo-gl/build/GLView.web.js\";\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { UnavailabilityError, CodedError } from '@unimodules/core';\nfunction getImageForAsset(asset) {\n  if (asset != null && typeof asset === 'object' && asset !== null && asset.downloadAsync) {\n    var dataURI = asset.localUri || asset.uri || '';\n    var image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n  return asset;\n}\nfunction asExpoContext(gl) {\n  gl.endFrameEXP = function glEndFrameEXP() {};\n  if (!gl['_expo_texImage2D']) {\n    gl['_expo_texImage2D'] = gl.texImage2D;\n    gl.texImage2D = function () {\n      for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n        props[_key] = arguments[_key];\n      }\n      var nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texImage2D'](...nextProps);\n    };\n  }\n  if (!gl['_expo_texSubImage2D']) {\n    gl['_expo_texSubImage2D'] = gl.texSubImage2D;\n    gl.texSubImage2D = function () {\n      for (var _len2 = arguments.length, props = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        props[_key2] = arguments[_key2];\n      }\n      var nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texSubImage2D'](...nextProps);\n    };\n  }\n  return gl;\n}\nfunction ensureContext(canvas, contextAttributes) {\n  if (!canvas) {\n    throw new CodedError('ERR_GL_INVALID', 'Attempting to use the GL context before it has been created.');\n  }\n  var context = canvas.getContext('webgl', contextAttributes) || canvas.getContext('webgl-experimental', contextAttributes) || canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context);\n}\nfunction stripNonDOMProps(props) {\n  for (var k in propTypes) {\n    if (k in props) {\n      delete props[k];\n    }\n  }\n  return props;\n}\nvar propTypes = {\n  onContextCreate: PropTypes.func.isRequired,\n  onContextRestored: PropTypes.func,\n  onContextLost: PropTypes.func,\n  webglContextAttributes: PropTypes.object\n};\nexport class GLView extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n    this._hasContextBeenCreated = false;\n    this._contextCreated = () => {\n      this.gl = this._createContext();\n      this.props.onContextCreate(this.gl);\n      if (this.canvas) {\n        this.canvas.addEventListener('webglcontextlost', this._contextLost);\n        this.canvas.addEventListener('webglcontextrestored', this._contextRestored);\n      }\n    };\n    this._updateLayout = () => {\n      if (this.container) {\n        var {\n          clientWidth: width = 0,\n          clientHeight: height = 0\n        } = this.container;\n        this.setState({\n          width,\n          height\n        });\n      }\n    };\n    this._contextLost = event => {\n      event.preventDefault();\n      this.gl = undefined;\n      if (this.props.onContextLost) {\n        this.props.onContextLost();\n      }\n    };\n    this._contextRestored = () => {\n      if (this.props.onContextRestored) {\n        this.gl = this._createContext();\n        this.props.onContextRestored(this.gl);\n      }\n    };\n    this._assignCanvasRef = canvas => {\n      this.canvas = canvas;\n    };\n    this._assignContainerRef = element => {\n      if (element) {\n        this.container = element;\n      } else {\n        this.container = undefined;\n      }\n      this._updateLayout();\n    };\n  }\n  static createContextAsync() {\n    return _asyncToGenerator(function* () {\n      var canvas = document.createElement('canvas');\n      canvas.width = window.innerWidth * window.devicePixelRatio;\n      canvas.height = window.innerHeight * window.devicePixelRatio;\n      return ensureContext(canvas);\n    })();\n  }\n  static destroyContextAsync(exgl) {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  static takeSnapshotAsync(exgl) {\n    var _arguments = arguments;\n    return _asyncToGenerator(function* () {\n      var options = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n      invariant(exgl, 'GLView.takeSnapshotAsync(): canvas is not defined');\n      var canvas = exgl.canvas;\n      return yield new Promise(resolve => {\n        canvas.toBlob(blob => {\n          resolve({\n            uri: blob,\n            localUri: '',\n            width: canvas.width,\n            height: canvas.height\n          });\n        }, options.format, options.compress);\n      });\n    })();\n  }\n  componentDidMount() {\n    if (window.addEventListener) {\n      window.addEventListener('resize', this._updateLayout);\n    }\n  }\n  componentWillUnmount() {\n    if (this.gl) {\n      var loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n      if (loseContextExt) {\n        loseContextExt.loseContext();\n      }\n      this.gl = undefined;\n    }\n    if (this.canvas) {\n      this.canvas.removeEventListener('webglcontextlost', this._contextLost);\n      this.canvas.removeEventListener('webglcontextrestored', this._contextRestored);\n    }\n    window.removeEventListener('resize', this._updateLayout);\n  }\n  render() {\n    var {\n      devicePixelRatio = 1\n    } = window;\n    var _this$props = this.props,\n      {\n        style\n      } = _this$props,\n      props = _objectWithoutProperties(_this$props, [\"style\"]);\n    var {\n      width,\n      height\n    } = this.state;\n    var domProps = stripNonDOMProps(props);\n    var containerStyle = StyleSheet.flatten([{\n      flex: 1\n    }, style]);\n    return React.createElement(\"div\", {\n      ref: this._assignContainerRef,\n      style: containerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      }\n    }, React.createElement(\"canvas\", _extends({\n      ref: this._assignCanvasRef,\n      style: {\n        flex: 1,\n        width,\n        height\n      },\n      width: width * devicePixelRatio,\n      height: height * devicePixelRatio\n    }, domProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      }\n    })));\n  }\n  componentDidUpdate() {\n    if (this.canvas && !this._hasContextBeenCreated) {\n      this._hasContextBeenCreated = true;\n      this._contextCreated();\n    }\n  }\n  _createContext() {\n    var {\n      webglContextAttributes\n    } = this.props;\n    var gl = ensureContext(this.canvas, webglContextAttributes);\n    this._webglContextAttributes = webglContextAttributes || {};\n    return gl;\n  }\n  _getGlOrReject() {\n    if (!this.gl) {\n      throw new CodedError('ERR_GL_INVALID', 'Attempting to use the GL context before it has been created.');\n    }\n    return this.gl;\n  }\n  takeSnapshotAsync() {\n    var _arguments2 = arguments,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      var options = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {};\n      if (!GLView.takeSnapshotAsync) {\n        throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n      }\n      var gl = _this._getGlOrReject();\n      return yield GLView.takeSnapshotAsync(gl, options);\n    })();\n  }\n  startARSessionAsync() {\n    return _asyncToGenerator(function* () {\n      throw new UnavailabilityError('GLView', 'startARSessionAsync');\n    })();\n  }\n  createCameraTextureAsync() {\n    return _asyncToGenerator(function* () {\n      throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n    })();\n  }\n  destroyObjectAsync(glObject) {\n    return _asyncToGenerator(function* () {\n      throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n    })();\n  }\n}\nGLView.propTypes = propTypes;","map":{"version":3,"names":["invariant","PropTypes","React","StyleSheet","UnavailabilityError","CodedError","getImageForAsset","asset","downloadAsync","dataURI","localUri","uri","image","Image","src","asExpoContext","gl","endFrameEXP","glEndFrameEXP","texImage2D","_len","arguments","length","props","Array","_key","nextProps","push","pop","texSubImage2D","_len2","_key2","ensureContext","canvas","contextAttributes","context","getContext","stripNonDOMProps","k","propTypes","onContextCreate","func","isRequired","onContextRestored","onContextLost","webglContextAttributes","object","GLView","Component","constructor","state","width","height","_hasContextBeenCreated","_contextCreated","_createContext","addEventListener","_contextLost","_contextRestored","_updateLayout","container","clientWidth","clientHeight","setState","event","preventDefault","undefined","_assignCanvasRef","_assignContainerRef","element","createContextAsync","_asyncToGenerator","document","createElement","window","innerWidth","devicePixelRatio","innerHeight","destroyContextAsync","exgl","takeSnapshotAsync","_arguments","options","Promise","resolve","toBlob","blob","format","compress","componentDidMount","componentWillUnmount","loseContextExt","getExtension","loseContext","removeEventListener","render","_this$props","style","_objectWithoutProperties","domProps","containerStyle","flatten","flex","ref","__source","fileName","_jsxFileName","lineNumber","_extends","componentDidUpdate","_webglContextAttributes","_getGlOrReject","_arguments2","_this","startARSessionAsync","createCameraTextureAsync","destroyObjectAsync","glObject"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-gl/src/GLView.web.tsx"],"sourcesContent":["import invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { UnavailabilityError, CodedError } from '@unimodules/core';\nimport {\n  BaseGLViewProps,\n  GLSnapshot,\n  ExpoWebGLRenderingContext,\n  SnapshotOptions,\n} from './GLView.types';\nexport { BaseGLViewProps, ExpoWebGLRenderingContext, SnapshotOptions, GLViewProps };\n\ndeclare const window: Window;\n\nfunction getImageForAsset(asset: {\n  downloadAsync: () => Promise<any>;\n  uri?: string;\n  localUri?: string;\n}): HTMLImageElement | any {\n  if (asset != null && typeof asset === 'object' && asset !== null && asset.downloadAsync) {\n    const dataURI = asset.localUri || asset.uri || '';\n    const image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n  return asset;\n}\n\nfunction asExpoContext(gl: ExpoWebGLRenderingContext): WebGLRenderingContext {\n  gl.endFrameEXP = function glEndFrameEXP(): void {};\n\n  if (!gl['_expo_texImage2D']) {\n    gl['_expo_texImage2D'] = gl.texImage2D;\n    gl.texImage2D = (...props: any[]): any => {\n      let nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texImage2D'](...nextProps);\n    };\n  }\n\n  if (!gl['_expo_texSubImage2D']) {\n    gl['_expo_texSubImage2D'] = gl.texSubImage2D;\n    gl.texSubImage2D = (...props: any[]): any => {\n      let nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texSubImage2D'](...nextProps);\n    };\n  }\n\n  return gl;\n}\n\nfunction ensureContext(\n  canvas?: HTMLCanvasElement,\n  contextAttributes?: WebGLContextAttributes\n): WebGLRenderingContext {\n  if (!canvas) {\n    throw new CodedError(\n      'ERR_GL_INVALID',\n      'Attempting to use the GL context before it has been created.'\n    );\n  }\n  const context =\n    canvas.getContext('webgl', contextAttributes) ||\n    canvas.getContext('webgl-experimental', contextAttributes) ||\n    canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context as ExpoWebGLRenderingContext);\n}\n\nfunction stripNonDOMProps(props: { [key: string]: any }): { [key: string]: any } {\n  for (let k in propTypes) {\n    if (k in props) {\n      delete props[k];\n    }\n  }\n  return props;\n}\n\nconst propTypes = {\n  onContextCreate: PropTypes.func.isRequired,\n  onContextRestored: PropTypes.func,\n  onContextLost: PropTypes.func,\n  webglContextAttributes: PropTypes.object,\n};\n\ninterface GLViewProps extends BaseGLViewProps {\n  onContextCreate: (gl: WebGLRenderingContext) => void;\n  onContextRestored?: (gl?: WebGLRenderingContext) => void;\n  onContextLost?: () => void;\n  webglContextAttributes?: WebGLContextAttributes;\n}\n\ntype State = {\n  width: number;\n  height: number;\n};\n\nexport class GLView extends React.Component<GLViewProps, State> {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  static propTypes = propTypes;\n\n  _hasContextBeenCreated = false;\n\n  _webglContextAttributes: WebGLContextAttributes | undefined;\n\n  canvas: HTMLCanvasElement | undefined;\n\n  container?: HTMLElement;\n\n  gl?: WebGLRenderingContext;\n\n  static async createContextAsync(): Promise<WebGLRenderingContext> {\n    const canvas = document.createElement('canvas');\n    canvas.width = window.innerWidth * window.devicePixelRatio;\n    canvas.height = window.innerHeight * window.devicePixelRatio;\n    return ensureContext(canvas);\n  }\n\n  static async destroyContextAsync(exgl?: WebGLRenderingContext | number): Promise<boolean> {\n    // Do nothing\n    return true;\n  }\n\n  static async takeSnapshotAsync(\n    exgl: WebGLRenderingContext,\n    options: SnapshotOptions = {}\n  ): Promise<GLSnapshot> {\n    invariant(exgl, 'GLView.takeSnapshotAsync(): canvas is not defined');\n    const canvas: HTMLCanvasElement = exgl.canvas;\n    return await new Promise(resolve => {\n      canvas.toBlob(\n        (blob: Blob | null) => {\n          // TODO: Bacon: Should we add data URI?\n          resolve({\n            uri: blob,\n            localUri: '',\n            width: canvas.width,\n            height: canvas.height,\n          });\n        },\n        options.format,\n        options.compress\n      );\n    });\n  }\n\n  componentDidMount() {\n    if (window.addEventListener) {\n      window.addEventListener('resize', this._updateLayout);\n    }\n  }\n\n  _contextCreated = (): void => {\n    this.gl = this._createContext();\n    this.props.onContextCreate(this.gl);\n    if (this.canvas) {\n      this.canvas.addEventListener('webglcontextlost', this._contextLost);\n      this.canvas.addEventListener('webglcontextrestored', this._contextRestored);\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.gl) {\n      const loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n      if (loseContextExt) {\n        loseContextExt.loseContext();\n      }\n      this.gl = undefined;\n    }\n    if (this.canvas) {\n      this.canvas.removeEventListener('webglcontextlost', this._contextLost);\n      this.canvas.removeEventListener('webglcontextrestored', this._contextRestored);\n    }\n    window.removeEventListener('resize', this._updateLayout);\n  }\n\n  _updateLayout = (): void => {\n    if (this.container) {\n      const { clientWidth: width = 0, clientHeight: height = 0 } = this.container;\n      this.setState({ width, height });\n    }\n  };\n\n  render() {\n    const { devicePixelRatio = 1 } = window;\n    const { style, ...props } = this.props;\n    const { width, height } = this.state;\n    const domProps = stripNonDOMProps(props);\n\n    const containerStyle: any = StyleSheet.flatten([{ flex: 1 }, style]);\n    return (\n      <div ref={this._assignContainerRef} style={containerStyle}>\n        <canvas\n          ref={this._assignCanvasRef}\n          style={{ flex: 1, width, height }}\n          width={width * devicePixelRatio}\n          height={height * devicePixelRatio}\n          {...domProps}\n        />\n      </div>\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.canvas && !this._hasContextBeenCreated) {\n      this._hasContextBeenCreated = true;\n      this._contextCreated();\n    }\n  }\n\n  _createContext(): WebGLRenderingContext {\n    const { webglContextAttributes } = this.props;\n    const gl = ensureContext(this.canvas, webglContextAttributes);\n    this._webglContextAttributes = webglContextAttributes || {};\n    return gl;\n  }\n\n  _getGlOrReject(): WebGLRenderingContext {\n    if (!this.gl) {\n      throw new CodedError(\n        'ERR_GL_INVALID',\n        'Attempting to use the GL context before it has been created.'\n      );\n    }\n    return this.gl;\n  }\n\n  _contextLost = (event: Event): void => {\n    event.preventDefault();\n    this.gl = undefined;\n    if (this.props.onContextLost) {\n      this.props.onContextLost();\n    }\n  };\n\n  _contextRestored = (): void => {\n    if (this.props.onContextRestored) {\n      this.gl = this._createContext();\n      this.props.onContextRestored(this.gl);\n    }\n  };\n\n  _assignCanvasRef = (canvas: HTMLCanvasElement): void => {\n    this.canvas = canvas;\n  };\n\n  _assignContainerRef = (element: HTMLElement | null): void => {\n    if (element) {\n      this.container = element;\n    } else {\n      this.container = undefined;\n    }\n    this._updateLayout();\n  };\n\n  async takeSnapshotAsync(options: SnapshotOptions = {}): Promise<GLSnapshot> {\n    if (!GLView.takeSnapshotAsync) {\n      throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n    }\n\n    const gl = this._getGlOrReject();\n\n    return await GLView.takeSnapshotAsync(gl, options);\n  }\n\n  async startARSessionAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'startARSessionAsync');\n  }\n\n  async createCameraTextureAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n  }\n\n  async destroyObjectAsync(glObject: WebGLObject): Promise<void> {\n    throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}