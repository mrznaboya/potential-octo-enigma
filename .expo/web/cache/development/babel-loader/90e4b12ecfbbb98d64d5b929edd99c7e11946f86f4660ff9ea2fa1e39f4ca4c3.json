{"ast":null,"code":"import EventEmitter from 'react-native/Libraries/vendor/emitter/EventEmitter';\nimport RCTDeviceEventEmitter from 'react-native/Libraries/EventEmitter/RCTDeviceEventEmitter';\nclass SyntheticPlatformEmitter {\n  constructor() {\n    this._emitter = new EventEmitter(RCTDeviceEventEmitter.sharedSubscriber);\n  }\n  emit(eventName, props) {\n    this._emitter.emit(eventName, props);\n  }\n}\nexport default new SyntheticPlatformEmitter();","map":{"version":3,"names":["EventEmitter","RCTDeviceEventEmitter","SyntheticPlatformEmitter","constructor","_emitter","sharedSubscriber","emit","eventName","props"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/@unimodules/react-native-adapter/src/SyntheticPlatformEmitter.ts"],"sourcesContent":["import EventEmitter from 'react-native/Libraries/vendor/emitter/EventEmitter';\nimport RCTDeviceEventEmitter from 'react-native/Libraries/EventEmitter/RCTDeviceEventEmitter';\n\n/**\n * This emitter is used for sending synthetic native events to listeners\n * registered in the API layer with `NativeEventEmitter`.\n */\nclass SyntheticPlatformEmitter {\n  _emitter = new EventEmitter(RCTDeviceEventEmitter.sharedSubscriber);\n\n  emit(eventName: string, props: any): void {\n    this._emitter.emit(eventName, props);\n  }\n}\n\nexport default new SyntheticPlatformEmitter();\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,oDAAoD;AAC7E,OAAOC,qBAAqB,MAAM,2DAA2D;AAM7F,MAAMC,wBAAwB;EAA9BC,YAAA;IACE,KAAAC,QAAQ,GAAG,IAAIJ,YAAY,CAACC,qBAAqB,CAACI,gBAAgB,CAAC;EAKrE;EAHEC,IAAIA,CAACC,SAAiB,EAAEC,KAAU;IAChC,IAAI,CAACJ,QAAQ,CAACE,IAAI,CAACC,SAAS,EAAEC,KAAK,CAAC;EACtC;;AAGF,eAAe,IAAIN,wBAAwB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}