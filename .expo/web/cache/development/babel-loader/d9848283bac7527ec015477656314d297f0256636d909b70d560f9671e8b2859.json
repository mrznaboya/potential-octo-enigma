{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport { findDOMNode } from 'react-dom';\nimport * as Creator from \"./Creator.web\";\nexport default function captureRef(_x) {\n  return _captureRef.apply(this, arguments);\n}\nfunction _captureRef() {\n  _captureRef = _asyncToGenerator(function* (component) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var element = getElement(component || document.body);\n    var {\n      format = 'png'\n    } = options;\n    var finalFormat = format.toLowerCase();\n    switch (finalFormat) {\n      case 'jpg':\n        return Creator.createJPEGAsync(element, options);\n      case 'png':\n        return Creator.createPNGAsync(element, options);\n      case 'raw':\n        return Creator.createPixelDataAsync(element, options);\n      case 'svg':\n        return Creator.createSVGAsync(element, options);\n      case 'blob':\n        return Creator.createBlobAsync(element, options);\n      default:\n        throw new Error(\"takeSnapshotAsync: Unsupported format: \".concat(finalFormat));\n    }\n  });\n  return _captureRef.apply(this, arguments);\n}\nvar getElement = component => {\n  try {\n    return findDOMNode(component);\n  } catch (e) {\n    return component;\n  }\n};","map":{"version":3,"names":["findDOMNode","Creator","captureRef","_x","_captureRef","apply","arguments","_asyncToGenerator","component","options","length","undefined","element","getElement","document","body","format","finalFormat","toLowerCase","createJPEGAsync","createPNGAsync","createPixelDataAsync","createSVGAsync","createBlobAsync","Error","concat","e"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo/src/takeSnapshotAsync/captureRef.web.ts"],"sourcesContent":["import { findDOMNode } from 'react-dom';\nimport { CaptureOptions } from 'react-native-view-shot';\n\nimport * as Creator from './Creator.web';\n\ndeclare const document: Document;\n/**\n * Taking a snapshot of DOM is not part of native browser behavior. \n * This is a hack to best emulate mobile functionality. \n * This implementation is based on https://github.com/pbakaus/domvas by Paul Bakaus http://paulbakaus.com/\n */\nexport default async function captureRef(\n  component: Element,\n  options: CaptureOptions = {}\n): Promise<string | Uint8ClampedArray | Blob> {\n  const element = getElement(component || document.body);\n  const { format = 'png' } = options;\n  const finalFormat = format.toLowerCase();\n  switch (finalFormat) {\n    case 'jpg':\n      return Creator.createJPEGAsync(element, options);\n    case 'png':\n      return Creator.createPNGAsync(element, options);\n    case 'raw':\n      return Creator.createPixelDataAsync(element, options);\n    case 'svg':\n      return Creator.createSVGAsync(element, options);\n    case 'blob':\n      return Creator.createBlobAsync(element, options);\n    default:\n      throw new Error(`takeSnapshotAsync: Unsupported format: ${finalFormat}`);\n  }\n}\n\nconst getElement = component => {\n  try {\n    return findDOMNode(component);\n  } catch (e) {\n    return component;\n  }\n};\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,WAAW;AAGvC,OAAO,KAAKC,OAAO;AAQnB,wBAA8BC,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAqBvC,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CArBc,WACbC,SAAkB,EACU;IAAA,IAA5BC,OAAA,GAAAH,SAAA,CAAAI,MAAA,QAAAJ,SAAA,QAAAK,SAAA,GAAAL,SAAA,MAA0B,EAAE;IAE5B,IAAMM,OAAO,GAAGC,UAAU,CAACL,SAAS,IAAIM,QAAQ,CAACC,IAAI,CAAC;IACtD,IAAM;MAAEC,MAAM,GAAG;IAAK,CAAE,GAAGP,OAAO;IAClC,IAAMQ,WAAW,GAAGD,MAAM,CAACE,WAAW,EAAE;IACxC,QAAQD,WAAW;MACjB,KAAK,KAAK;QACR,OAAOhB,OAAO,CAACkB,eAAe,CAACP,OAAO,EAAEH,OAAO,CAAC;MAClD,KAAK,KAAK;QACR,OAAOR,OAAO,CAACmB,cAAc,CAACR,OAAO,EAAEH,OAAO,CAAC;MACjD,KAAK,KAAK;QACR,OAAOR,OAAO,CAACoB,oBAAoB,CAACT,OAAO,EAAEH,OAAO,CAAC;MACvD,KAAK,KAAK;QACR,OAAOR,OAAO,CAACqB,cAAc,CAACV,OAAO,EAAEH,OAAO,CAAC;MACjD,KAAK,MAAM;QACT,OAAOR,OAAO,CAACsB,eAAe,CAACX,OAAO,EAAEH,OAAO,CAAC;MAClD;QACE,MAAM,IAAIe,KAAK,2CAAAC,MAAA,CAA2CR,WAAW,CAAE,CAAC;;EAE9E,CAAC;EAAA,OAAAb,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,IAAMO,UAAU,GAAGL,SAAS,IAAG;EAC7B,IAAI;IACF,OAAOR,WAAW,CAACQ,SAAS,CAAC;GAC9B,CAAC,OAAOkB,CAAC,EAAE;IACV,OAAOlB,SAAS;;AAEpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}