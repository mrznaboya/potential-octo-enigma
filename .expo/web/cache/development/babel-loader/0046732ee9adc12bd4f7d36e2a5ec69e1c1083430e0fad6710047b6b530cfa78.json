{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport uuidv4 from 'uuid/v4';\nimport { batchResolveAllFontsAsync } from \"./Fonts.web\";\nimport { processAllImagesAsync } from \"./Images.web\";\nimport * as util from \"./Utils.web\";\nfunction generateSVGAsync(_x) {\n  return _generateSVGAsync.apply(this, arguments);\n}\nfunction _generateSVGAsync() {\n  _generateSVGAsync = _asyncToGenerator(function* (element) {\n    var {\n      width,\n      height,\n      bgcolor,\n      style\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var clone = yield cloneElement(element);\n    if (clone === undefined) {\n      throw new Error('Cannot clone null element');\n    }\n    yield Promise.all([batchResolveAllFontsAsync(clone), processAllImagesAsync(clone)]);\n    if (bgcolor) {\n      clone.style.backgroundColor = bgcolor;\n    }\n    if (width) {\n      clone.style.width = \"\".concat(width, \"px\");\n    }\n    if (height) {\n      clone.style.height = \"\".concat(height, \"px\");\n    }\n    if (style) {\n      _extends(clone.style, style);\n    }\n    var svgDataUri = yield makeSVGDataURIAsync(clone, width || util.getWidthForElement(element), height || util.getHeightForElement(element));\n    return svgDataUri;\n  });\n  return _generateSVGAsync.apply(this, arguments);\n}\nexport function createSVGAsync(_x2) {\n  return _createSVGAsync.apply(this, arguments);\n}\nfunction _createSVGAsync() {\n  _createSVGAsync = _asyncToGenerator(function* (element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return yield generateSVGAsync(element, options);\n  });\n  return _createSVGAsync.apply(this, arguments);\n}\nexport function createPixelDataAsync(_x3, _x4) {\n  return _createPixelDataAsync.apply(this, arguments);\n}\nfunction _createPixelDataAsync() {\n  _createPixelDataAsync = _asyncToGenerator(function* (element, options) {\n    var canvas = yield draw(element, options);\n    var context = canvas.getContext('2d');\n    if (!context) {\n      throw new Error('Canvas context is not supported.');\n    }\n    return context.getImageData(0, 0, util.getWidthForElement(element), util.getHeightForElement(element)).data;\n  });\n  return _createPixelDataAsync.apply(this, arguments);\n}\nexport function createPNGAsync(_x5, _x6) {\n  return _createPNGAsync.apply(this, arguments);\n}\nfunction _createPNGAsync() {\n  _createPNGAsync = _asyncToGenerator(function* (element, options) {\n    var canvas = yield draw(element, options);\n    return yield canvas.toDataURL('image/png');\n  });\n  return _createPNGAsync.apply(this, arguments);\n}\nexport function createJPEGAsync(_x7, _x8) {\n  return _createJPEGAsync.apply(this, arguments);\n}\nfunction _createJPEGAsync() {\n  _createJPEGAsync = _asyncToGenerator(function* (element, _ref) {\n    var {\n        quality\n      } = _ref,\n      options = _objectWithoutProperties(_ref, [\"quality\"]);\n    var canvas = yield draw(element, options);\n    return yield canvas.toDataURL('image/jpeg', quality);\n  });\n  return _createJPEGAsync.apply(this, arguments);\n}\nexport function createBlobAsync(_x9, _x10) {\n  return _createBlobAsync.apply(this, arguments);\n}\nfunction _createBlobAsync() {\n  _createBlobAsync = _asyncToGenerator(function* (element, _ref2) {\n    var {\n        quality\n      } = _ref2,\n      options = _objectWithoutProperties(_ref2, [\"quality\"]);\n    var canvas = yield draw(element, options);\n    return yield util.getBlobFromCanvasAsync(canvas, quality);\n  });\n  return _createBlobAsync.apply(this, arguments);\n}\nfunction draw(_x11, _x12) {\n  return _draw.apply(this, arguments);\n}\nfunction _draw() {\n  _draw = _asyncToGenerator(function* (element, options) {\n    var fromSVG = yield generateSVGAsync(element, options);\n    var image = yield util.getImageElementFromURIAsync(fromSVG);\n    var canvas = newCanvas(element, options);\n    var context = canvas.getContext('2d');\n    if (!context) {\n      throw new Error('Canvas context is not supported.');\n    }\n    context.drawImage(image, 0, 0);\n    return canvas;\n  });\n  return _draw.apply(this, arguments);\n}\nfunction newCanvas(element, options) {\n  var canvas = document.createElement('canvas');\n  canvas.width = options.width || util.getWidthForElement(element);\n  canvas.height = options.height || util.getHeightForElement(element);\n  if (options.bgcolor) {\n    var ctx = canvas.getContext('2d');\n    if (ctx) {\n      ctx.fillStyle = options.bgcolor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n  }\n  return canvas;\n}\nfunction getDeepCopyForElement(_x13) {\n  return _getDeepCopyForElement.apply(this, arguments);\n}\nfunction _getDeepCopyForElement() {\n  _getDeepCopyForElement = _asyncToGenerator(function* (element) {\n    if (element instanceof HTMLCanvasElement) {\n      var dataURL = element.toDataURL();\n      return util.getImageElementFromURIAsync(dataURL);\n    }\n    return element.cloneNode(false);\n  });\n  return _getDeepCopyForElement.apply(this, arguments);\n}\nfunction cloneElement(_x14) {\n  return _cloneElement.apply(this, arguments);\n}\nfunction _cloneElement() {\n  _cloneElement = _asyncToGenerator(function* (element) {\n    var clonedNode = yield getDeepCopyForElement(element);\n    var clone = yield cloneChildren(element, clonedNode);\n    return yield processClone(element, clone);\n  });\n  return _cloneElement.apply(this, arguments);\n}\nfunction cloneChildren(_x15, _x16) {\n  return _cloneChildren.apply(this, arguments);\n}\nfunction _cloneChildren() {\n  _cloneChildren = _asyncToGenerator(function* (_ref3, clone) {\n    var {\n      childNodes\n    } = _ref3;\n    var children = Array.from(childNodes);\n    if (children.length === 0) {\n      return clone;\n    }\n    for (var child of children) {\n      var childClone = yield cloneElement(child);\n      if (childClone) {\n        clone.appendChild(childClone);\n      }\n    }\n    return clone;\n  });\n  return _cloneChildren.apply(this, arguments);\n}\nfunction processClone(_x17, _x18) {\n  return _processClone.apply(this, arguments);\n}\nfunction _processClone() {\n  _processClone = _asyncToGenerator(function* (original, clone) {\n    if (!(clone instanceof HTMLElement)) {\n      return clone;\n    }\n    var source = window.getComputedStyle(original);\n    var target = clone.style;\n    if (source.cssText) {\n      target.cssText = source.cssText;\n    } else {\n      for (var prop in source) {\n        var name = source[prop];\n        target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n      }\n    }\n    clonePseudoElement(':before', original, clone);\n    clonePseudoElement(':after', original, clone);\n    mutateInputElement(original, clone);\n    mutateSVGElementClone(clone);\n    return clone;\n  });\n  return _processClone.apply(this, arguments);\n}\nfunction clonePseudoElement(element, original, clone) {\n  var style = window.getComputedStyle(original, element);\n  var content = style.getPropertyValue('content');\n  if (content === '' || content === 'none') {\n    return;\n  }\n  var className = uuidv4();\n  clone.className = \"\".concat(clone.className, \" \").concat(className);\n  var styleElement = document.createElement('style');\n  styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n  clone.appendChild(styleElement);\n}\nfunction formatPseudoElementStyle(className, element, style) {\n  var selector = \".\".concat(className, \":\").concat(element);\n  var cssText = style.cssText ? formatCSSText(style) : formatCSSProperties(style);\n  return document.createTextNode(\"\".concat(selector, \"{\").concat(cssText, \"}\"));\n}\nfunction formatCSSText(style) {\n  var content = style.getPropertyValue('content');\n  return \"\".concat(style.cssText, \" content: \").concat(content, \";\");\n}\nfunction formatCSSProperties(style) {\n  var parsed = Array.from(style).map(name => formatProperty(name, style)).join('; ');\n  return \"\".concat(parsed, \";\");\n}\nfunction formatProperty(name, style) {\n  return \"\".concat(name, \": \").concat(style.getPropertyValue(name)).concat(style.getPropertyPriority(name) ? ' !important' : '');\n}\nfunction mutateInputElement(element, clone) {\n  if (element instanceof HTMLTextAreaElement) {\n    clone.innerHTML = element.value;\n  }\n  if (element instanceof HTMLInputElement) {\n    clone.setAttribute('value', element.value);\n  }\n}\nfunction mutateSVGElementClone(element) {\n  if (!(element instanceof SVGElement)) {\n    return;\n  }\n  element.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  if (element instanceof SVGRectElement) {\n    for (var attribute of ['width', 'height']) {\n      var value = element.getAttribute(attribute);\n      if (!value) {\n        continue;\n      }\n      element.style.setProperty(attribute, value);\n    }\n  }\n}\nfunction makeSVGDataURIAsync(_x19, _x20, _x21) {\n  return _makeSVGDataURIAsync.apply(this, arguments);\n}\nfunction _makeSVGDataURIAsync() {\n  _makeSVGDataURIAsync = _asyncToGenerator(function* (element, width, height) {\n    element.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n    var serializedNode = new XMLSerializer().serializeToString(element);\n    var xhtml = util.getEscapedXHTMLString(serializedNode);\n    var foreignObject = \"<foreignObject x=\\\"0\\\" y=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\">\".concat(xhtml, \"</foreignObject>\");\n    var svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(width, \"\\\" height=\\\"\").concat(height, \"\\\">\").concat(foreignObject, \"</svg>\");\n    return \"data:image/svg+xml;charset=utf-8,\".concat(svg);\n  });\n  return _makeSVGDataURIAsync.apply(this, arguments);\n}","map":{"version":3,"names":["uuidv4","batchResolveAllFontsAsync","processAllImagesAsync","util","generateSVGAsync","_x","_generateSVGAsync","apply","arguments","_asyncToGenerator","element","width","height","bgcolor","style","length","undefined","clone","cloneElement","Error","Promise","all","backgroundColor","concat","_extends","svgDataUri","makeSVGDataURIAsync","getWidthForElement","getHeightForElement","createSVGAsync","_x2","_createSVGAsync","options","createPixelDataAsync","_x3","_x4","_createPixelDataAsync","canvas","draw","context","getContext","getImageData","data","createPNGAsync","_x5","_x6","_createPNGAsync","toDataURL","createJPEGAsync","_x7","_x8","_createJPEGAsync","_ref","quality","_objectWithoutProperties","createBlobAsync","_x9","_x10","_createBlobAsync","_ref2","getBlobFromCanvasAsync","_x11","_x12","_draw","fromSVG","image","getImageElementFromURIAsync","newCanvas","drawImage","document","createElement","ctx","fillStyle","fillRect","getDeepCopyForElement","_x13","_getDeepCopyForElement","HTMLCanvasElement","dataURL","cloneNode","_x14","_cloneElement","clonedNode","cloneChildren","processClone","_x15","_x16","_cloneChildren","_ref3","childNodes","children","Array","from","child","childClone","appendChild","_x17","_x18","_processClone","original","HTMLElement","source","window","getComputedStyle","target","cssText","prop","name","setProperty","getPropertyValue","getPropertyPriority","clonePseudoElement","mutateInputElement","mutateSVGElementClone","content","className","styleElement","formatPseudoElementStyle","selector","formatCSSText","formatCSSProperties","createTextNode","parsed","map","formatProperty","join","HTMLTextAreaElement","innerHTML","value","HTMLInputElement","setAttribute","SVGElement","SVGRectElement","attribute","getAttribute","_x19","_x20","_x21","_makeSVGDataURIAsync","serializedNode","XMLSerializer","serializeToString","xhtml","getEscapedXHTMLString","foreignObject","svg"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo/src/takeSnapshotAsync/Creator.web.ts"],"sourcesContent":["import { CaptureOptions } from 'react-native-view-shot';\nimport uuidv4 from 'uuid/v4';\n\nimport { batchResolveAllFontsAsync } from './Fonts.web';\nimport { processAllImagesAsync } from './Images.web';\nimport * as util from './Utils.web';\n\ntype FillStyle = string | CanvasGradient | CanvasPattern;\n\ninterface SVGOptions {\n  bgcolor?: FillStyle;\n  width?: number;\n  height?: number;\n  style?: any;\n  quality?: number;\n  missingImageSource?: string;\n  preventCaching?: boolean;\n}\n\nasync function generateSVGAsync(\n  element: Element,\n  { width, height, bgcolor, style }: SVGOptions = {}\n): Promise<string> {\n  const clone = await cloneElement(element);\n\n  if (clone === undefined) {\n    throw new Error('Cannot clone null element');\n  }\n\n  await Promise.all([batchResolveAllFontsAsync(clone), processAllImagesAsync(clone)]);\n\n  if (bgcolor) {\n    clone.style.backgroundColor = bgcolor as string;\n  }\n\n  if (width) {\n    clone.style.width = `${width}px`;\n  }\n  if (height) {\n    clone.style.height = `${height}px`;\n  }\n\n  if (style) {\n    Object.assign(clone.style, style);\n  }\n\n  const svgDataUri = await makeSVGDataURIAsync(\n    clone,\n    width || util.getWidthForElement(element),\n    height || util.getHeightForElement(element)\n  );\n  return svgDataUri;\n}\n\nexport async function createSVGAsync(element: Element, options: SVGOptions = {}): Promise<string> {\n  return await generateSVGAsync(element, options);\n}\n\nexport async function createPixelDataAsync(\n  element: Element,\n  options: CaptureOptions\n): Promise<Uint8ClampedArray> {\n  const canvas = await draw(element, options);\n\n  const context = canvas.getContext('2d');\n  if (!context) {\n    throw new Error('Canvas context is not supported.');\n  }\n\n  return context.getImageData(\n    0,\n    0,\n    util.getWidthForElement(element),\n    util.getHeightForElement(element)\n  ).data;\n}\n\nexport async function createPNGAsync(element: Element, options: CaptureOptions): Promise<string> {\n  const canvas = await draw(element, options);\n  return await canvas.toDataURL('image/png');\n}\n\nexport async function createJPEGAsync(\n  element: Element,\n  { quality, ...options }: CaptureOptions\n): Promise<string> {\n  const canvas = await draw(element, options);\n  return await canvas.toDataURL('image/jpeg', quality);\n}\n\nexport async function createBlobAsync(\n  element: Element,\n  { quality, ...options }: CaptureOptions\n): Promise<Blob> {\n  const canvas = await draw(element, options);\n  return await util.getBlobFromCanvasAsync(canvas, quality);\n}\n\nasync function draw(\n  element: Element,\n  options: {\n    width?: number;\n    height?: number;\n    bgcolor?: string | CanvasGradient | CanvasPattern;\n    [key: string]: any;\n  }\n): Promise<HTMLCanvasElement> {\n  const fromSVG = await generateSVGAsync(element, options);\n  const image = await util.getImageElementFromURIAsync(fromSVG);\n\n  const canvas = newCanvas(element, options);\n  const context = canvas.getContext('2d');\n  if (!context) {\n    throw new Error('Canvas context is not supported.');\n  }\n  context.drawImage(image, 0, 0);\n  return canvas;\n}\n\nfunction newCanvas(\n  element: Element,\n  options: { width?: number; height?: number; bgcolor?: string | CanvasGradient | CanvasPattern }\n) {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = options.width || util.getWidthForElement(element);\n  canvas.height = options.height || util.getHeightForElement(element);\n\n  if (options.bgcolor) {\n    const ctx = canvas.getContext('2d');\n    if (ctx) {\n      ctx.fillStyle = options.bgcolor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  return canvas;\n}\n\nasync function getDeepCopyForElement(\n  element: HTMLCanvasElement | Element\n): Promise<HTMLImageElement | Node> {\n  if (element instanceof HTMLCanvasElement) {\n    const dataURL = element.toDataURL();\n    return util.getImageElementFromURIAsync(dataURL);\n  }\n  return element.cloneNode(false);\n}\n\nasync function cloneElement(\n  element: HTMLCanvasElement | Element\n): Promise<HTMLElement | undefined> {\n  const clonedNode = await getDeepCopyForElement(element);\n  const clone = await cloneChildren(element, clonedNode);\n  return await processClone(element, clone as any);\n}\n\nasync function cloneChildren(\n  { childNodes },\n  clone: HTMLImageElement | Node\n): Promise<HTMLElement | Node> {\n  const children: any[] = Array.from(childNodes);\n  if (children.length === 0) {\n    return clone;\n  }\n\n  for (const child of children) {\n    const childClone = await cloneElement(child);\n    if (childClone) {\n      clone.appendChild(childClone);\n    }\n  }\n\n  return clone;\n}\nasync function processClone(original: Element, clone: HTMLElement): Promise<HTMLElement | any> {\n  if (!(clone instanceof HTMLElement)) {\n    // TODO: Bacon: Avoid or throw error\n    return clone;\n  }\n\n  const source = window.getComputedStyle(original);\n  const target = clone.style;\n\n  if (source.cssText) {\n    target.cssText = source.cssText;\n  } else {\n    for (const prop in source) {\n      const name = source[prop];\n      target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n    }\n  }\n\n  clonePseudoElement(':before', original, clone);\n  clonePseudoElement(':after', original, clone);\n  mutateInputElement(original, clone);\n  mutateSVGElementClone(clone);\n  return clone;\n}\n\nfunction clonePseudoElement(element: string, original: Element, clone: HTMLElement): void {\n  const style = window.getComputedStyle(original, element);\n  const content = style.getPropertyValue('content');\n\n  if (content === '' || content === 'none') {\n    return;\n  }\n\n  const className = uuidv4();\n  clone.className = `${clone.className} ${className}`;\n  const styleElement = document.createElement('style');\n  styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n  clone.appendChild(styleElement);\n}\n\nfunction formatPseudoElementStyle(\n  className: string,\n  element: string,\n  style: CSSStyleDeclaration\n): Text {\n  const selector = `.${className}:${element}`;\n  const cssText = style.cssText ? formatCSSText(style) : formatCSSProperties(style);\n  return document.createTextNode(`${selector}{${cssText}}`);\n}\n\nfunction formatCSSText(style: CSSStyleDeclaration): string {\n  const content = style.getPropertyValue('content');\n  return `${style.cssText} content: ${content};`;\n}\n\nfunction formatCSSProperties(style: CSSStyleDeclaration): string {\n  const parsed = Array.from(style)\n    .map(name => formatProperty(name, style))\n    .join('; ');\n\n  return `${parsed};`;\n}\n\nfunction formatProperty(name: string, style: CSSStyleDeclaration): string {\n  return `${name}: ${style.getPropertyValue(name)}${\n    style.getPropertyPriority(name) ? ' !important' : ''\n  }`;\n}\n\nfunction mutateInputElement(element: Element, clone: HTMLElement): void {\n  if (element instanceof HTMLTextAreaElement) {\n    clone.innerHTML = element.value;\n  }\n  if (element instanceof HTMLInputElement) {\n    clone.setAttribute('value', element.value);\n  }\n}\n\nfunction mutateSVGElementClone(element: HTMLElement): void {\n  if (!(element instanceof SVGElement)) {\n    return;\n  }\n  element.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n  if (element instanceof SVGRectElement) {\n    for (const attribute of ['width', 'height']) {\n      const value = element.getAttribute(attribute);\n      if (!value) {\n        continue;\n      }\n      element.style.setProperty(attribute, value);\n    }\n  }\n}\n\nasync function makeSVGDataURIAsync(\n  element: HTMLElement,\n  width: number,\n  height: number\n): Promise<string> {\n  element.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  const serializedNode: string = new XMLSerializer().serializeToString(element);\n  const xhtml: string = util.getEscapedXHTMLString(serializedNode);\n\n  const foreignObject = `<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">${xhtml}</foreignObject>`;\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\">${foreignObject}</svg>`;\n  return `data:image/svg+xml;charset=utf-8,${svg}`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}