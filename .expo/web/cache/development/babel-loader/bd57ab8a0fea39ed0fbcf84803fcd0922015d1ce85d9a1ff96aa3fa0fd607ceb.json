{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport { CodedError, UnavailabilityError } from '@unimodules/core';\nimport invariant from 'invariant';\nimport ExpoAppAuth from \"./ExpoAppAuth\";\nfunction isValidServiceConfiguration(config) {\n  return !!(config && typeof config.authorizationEndpoint === 'string' && typeof config.tokenEndpoint === 'string');\n}\nfunction assertValidClientId(clientId) {\n  if (typeof clientId !== 'string' || !clientId.length) {\n    throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG', '`clientId` must be a string with more than 0 characters');\n  }\n}\nfunction assertValidProps(_ref) {\n  var {\n    issuer,\n    redirectUrl,\n    clientId,\n    serviceConfiguration\n  } = _ref;\n  if (typeof issuer !== 'string' && !isValidServiceConfiguration(serviceConfiguration)) {\n    throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG', 'You must provide either an `issuer` or both `authorizationEndpoint` and `tokenEndpoint`');\n  }\n  if (typeof redirectUrl !== 'string') {\n    throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG', '`redirectUrl` must be a string');\n  }\n  assertValidClientId(clientId);\n}\nfunction _executeAsync(_x) {\n  return _executeAsync2.apply(this, arguments);\n}\nfunction _executeAsync2() {\n  _executeAsync2 = _asyncToGenerator(function* (props) {\n    if (!props.redirectUrl) {\n      props.redirectUrl = getDefaultOAuthRedirect();\n    }\n    assertValidProps(props);\n    return yield ExpoAppAuth.executeAsync(props);\n  });\n  return _executeAsync2.apply(this, arguments);\n}\nexport function getDefaultOAuthRedirect() {\n  return \"\".concat(ExpoAppAuth.OAuthRedirect, \":/oauthredirect\");\n}\nexport function authAsync(_x2) {\n  return _authAsync.apply(this, arguments);\n}\nfunction _authAsync() {\n  _authAsync = _asyncToGenerator(function* (props) {\n    if (!ExpoAppAuth.executeAsync) {\n      throw new UnavailabilityError('expo-app-auth', 'authAsync');\n    }\n    return yield _executeAsync(props);\n  });\n  return _authAsync.apply(this, arguments);\n}\nexport function refreshAsync(_x3, _x4) {\n  return _refreshAsync.apply(this, arguments);\n}\nfunction _refreshAsync() {\n  _refreshAsync = _asyncToGenerator(function* (props, refreshToken) {\n    if (!ExpoAppAuth.executeAsync) {\n      throw new UnavailabilityError('expo-app-auth', 'refreshAsync');\n    }\n    if (!refreshToken) {\n      throw new CodedError('ERR_APP_AUTH_TOKEN', 'Cannot refresh with null `refreshToken`');\n    }\n    return yield _executeAsync(_objectSpread({\n      isRefresh: true,\n      refreshToken\n    }, props));\n  });\n  return _refreshAsync.apply(this, arguments);\n}\nexport function revokeAsync(_x5, _x6) {\n  return _revokeAsync.apply(this, arguments);\n}\nfunction _revokeAsync() {\n  _revokeAsync = _asyncToGenerator(function* (_ref2, _ref3) {\n    var {\n      clientId,\n      issuer,\n      serviceConfiguration\n    } = _ref2;\n    var {\n      token,\n      isClientIdProvided = false\n    } = _ref3;\n    if (!token) {\n      throw new CodedError('ERR_APP_AUTH_TOKEN', 'Cannot revoke a null `token`');\n    }\n    assertValidClientId(clientId);\n    var revocationEndpoint;\n    if (serviceConfiguration && serviceConfiguration.revocationEndpoint) {\n      revocationEndpoint = serviceConfiguration.revocationEndpoint;\n    } else {\n      var response = yield fetch(\"\".concat(issuer, \"/.well-known/openid-configuration\"));\n      var openidConfig = yield response.json();\n      invariant(openidConfig.revocation_endpoint, 'The OpenID config does not specify a revocation endpoint');\n      revocationEndpoint = openidConfig.revocation_endpoint;\n    }\n    var encodedClientID = encodeURIComponent(clientId);\n    var encodedToken = encodeURIComponent(token);\n    var body = \"token=\".concat(encodedToken).concat(isClientIdProvided ? \"&client_id=\".concat(encodedClientID) : '');\n    var headers = {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    };\n    try {\n      var results = yield fetch(revocationEndpoint, {\n        method: 'POST',\n        headers,\n        body\n      });\n      return results;\n    } catch (error) {\n      throw new CodedError('ERR_APP_AUTH_REVOKE_FAILED', error.message);\n    }\n  });\n  return _revokeAsync.apply(this, arguments);\n}\nfunction parseAuthRevocationResults(_x7) {\n  return _parseAuthRevocationResults.apply(this, arguments);\n}\nfunction _parseAuthRevocationResults() {\n  _parseAuthRevocationResults = _asyncToGenerator(function* (results) {\n    var data = yield results.json();\n    var token = results.headers['update-client-auth'];\n    if (results.ok) {\n      return {\n        type: 'success',\n        status: results.status,\n        data,\n        token\n      };\n    } else if (results.status == 503 && results.headers['retry-after']) {\n      var retryAfterValue = results.headers['retry-after'];\n      var retryAfter;\n      if (retryAfterValue) {\n        retryAfter = parseRetryTime(retryAfterValue);\n      }\n      return {\n        type: 'failed',\n        status: results.status,\n        data,\n        token,\n        retryAfter\n      };\n    } else {\n      return {\n        type: 'error',\n        status: results.status,\n        data,\n        token\n      };\n    }\n  });\n  return _parseAuthRevocationResults.apply(this, arguments);\n}\nfunction parseRetryTime(value) {\n  if (/^\\d+$/.test(value)) {\n    return parseInt(value, 10) * 1000;\n  }\n  var retry = Date.parse(value);\n  if (isNaN(retry)) {\n    throw new CodedError('ERR_APP_AUTH_FETCH_RETRY_TIME', 'Cannot parse the Retry-After header value returned by the server: ' + value);\n  }\n  var now = Date.now();\n  var parsedDate = new Date(retry);\n  return parsedDate.getTime() - now;\n}\nexport var {\n  OAuthRedirect,\n  URLSchemes\n} = ExpoAppAuth;","map":{"version":3,"names":["CodedError","UnavailabilityError","invariant","ExpoAppAuth","isValidServiceConfiguration","config","authorizationEndpoint","tokenEndpoint","assertValidClientId","clientId","length","assertValidProps","_ref","issuer","redirectUrl","serviceConfiguration","_executeAsync","_x","_executeAsync2","apply","arguments","_asyncToGenerator","props","getDefaultOAuthRedirect","executeAsync","concat","OAuthRedirect","authAsync","_x2","_authAsync","refreshAsync","_x3","_x4","_refreshAsync","refreshToken","_objectSpread","isRefresh","revokeAsync","_x5","_x6","_revokeAsync","_ref2","_ref3","token","isClientIdProvided","revocationEndpoint","response","fetch","openidConfig","json","revocation_endpoint","encodedClientID","encodeURIComponent","encodedToken","body","headers","results","method","error","message","parseAuthRevocationResults","_x7","_parseAuthRevocationResults","data","ok","type","status","retryAfterValue","retryAfter","parseRetryTime","value","test","parseInt","retry","Date","parse","isNaN","now","parsedDate","getTime","URLSchemes"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-app-auth/src/AppAuth.ts"],"sourcesContent":["import { CodedError, UnavailabilityError } from '@unimodules/core';\nimport invariant from 'invariant';\n\nimport {\n  OAuthBaseProps,\n  OAuthProps,\n  OAuthRevokeOptions,\n  OAuthServiceConfiguration,\n  TokenResponse,\n} from './AppAuth.types';\nimport ExpoAppAuth from './ExpoAppAuth';\n\nexport * from './AppAuth.types';\n\nfunction isValidServiceConfiguration(config?: OAuthServiceConfiguration): boolean {\n  return !!(\n    config &&\n    typeof config.authorizationEndpoint === 'string' &&\n    typeof config.tokenEndpoint === 'string'\n  );\n}\n\nfunction assertValidClientId(clientId?: string): void {\n  if (typeof clientId !== 'string' || !clientId.length) {\n    throw new CodedError(\n      'ERR_APP_AUTH_INVALID_CONFIG',\n      '`clientId` must be a string with more than 0 characters'\n    );\n  }\n}\n\nfunction assertValidProps({\n  issuer,\n  redirectUrl,\n  clientId,\n  serviceConfiguration,\n}: OAuthProps): void {\n  if (typeof issuer !== 'string' && !isValidServiceConfiguration(serviceConfiguration)) {\n    throw new CodedError(\n      'ERR_APP_AUTH_INVALID_CONFIG',\n      'You must provide either an `issuer` or both `authorizationEndpoint` and `tokenEndpoint`'\n    );\n  }\n  if (typeof redirectUrl !== 'string') {\n    throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG', '`redirectUrl` must be a string');\n  }\n  assertValidClientId(clientId);\n}\n\nasync function _executeAsync(props: OAuthProps): Promise<TokenResponse> {\n  if (!props.redirectUrl) {\n    props.redirectUrl = getDefaultOAuthRedirect();\n  }\n  assertValidProps(props);\n  return await ExpoAppAuth.executeAsync(props);\n}\n\nexport function getDefaultOAuthRedirect(): string {\n  return `${ExpoAppAuth.OAuthRedirect}:/oauthredirect`;\n}\n\nexport async function authAsync(props: OAuthProps): Promise<TokenResponse> {\n  if (!ExpoAppAuth.executeAsync) {\n    throw new UnavailabilityError('expo-app-auth', 'authAsync');\n  }\n  return await _executeAsync(props);\n}\n\nexport async function refreshAsync(\n  props: OAuthProps,\n  refreshToken: string\n): Promise<TokenResponse> {\n  if (!ExpoAppAuth.executeAsync) {\n    throw new UnavailabilityError('expo-app-auth', 'refreshAsync');\n  }\n  if (!refreshToken) {\n    throw new CodedError('ERR_APP_AUTH_TOKEN', 'Cannot refresh with null `refreshToken`');\n  }\n  return await _executeAsync({\n    isRefresh: true,\n    refreshToken,\n    ...props,\n  });\n}\n\n/* JS Method */\nexport async function revokeAsync(\n  { clientId, issuer, serviceConfiguration }: OAuthBaseProps,\n  { token, isClientIdProvided = false }: OAuthRevokeOptions\n): Promise<any> {\n  if (!token) {\n    throw new CodedError('ERR_APP_AUTH_TOKEN', 'Cannot revoke a null `token`');\n  }\n\n  assertValidClientId(clientId);\n\n  let revocationEndpoint;\n  if (serviceConfiguration && serviceConfiguration.revocationEndpoint) {\n    revocationEndpoint = serviceConfiguration.revocationEndpoint;\n  } else {\n    // For Open IDC providers only.\n    const response = await fetch(`${issuer}/.well-known/openid-configuration`);\n    const openidConfig = await response.json();\n\n    invariant(\n      openidConfig.revocation_endpoint,\n      'The OpenID config does not specify a revocation endpoint'\n    );\n\n    revocationEndpoint = openidConfig.revocation_endpoint;\n  }\n\n  const encodedClientID = encodeURIComponent(clientId);\n  const encodedToken = encodeURIComponent(token);\n  const body = `token=${encodedToken}${isClientIdProvided ? `&client_id=${encodedClientID}` : ''}`;\n  const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n  try {\n    // https://tools.ietf.org/html/rfc7009#section-2.2\n    const results = await fetch(revocationEndpoint, {\n      method: 'POST',\n      headers,\n      body,\n    });\n\n    return results;\n  } catch (error) {\n    throw new CodedError('ERR_APP_AUTH_REVOKE_FAILED', error.message);\n  }\n}\n\nasync function parseAuthRevocationResults(results: Response): Promise<any> {\n  const data = await results.json();\n  const token = results.headers['update-client-auth'];\n  // the token has been revoked successfully or the client submitted an invalid token.\n  if (results.ok) {\n    // successful op\n    return { type: 'success', status: results.status, data, token };\n  } else if (results.status == 503 && results.headers['retry-after']) {\n    // Failed op\n    const retryAfterValue = results.headers['retry-after'];\n    let retryAfter: number | undefined;\n    if (retryAfterValue) {\n      retryAfter = parseRetryTime(retryAfterValue);\n    }\n    // the client must assume the token still exists and may retry after a reasonable delay.\n    return { type: 'failed', status: results.status, data, token, retryAfter };\n  } else {\n    // Error\n    return { type: 'error', status: results.status, data, token };\n  }\n}\n\nfunction parseRetryTime(value: string): number {\n  // In accordance with RFC2616, Section 14.37. Timout may be of format seconds or future date time value\n  if (/^\\d+$/.test(value)) {\n    return parseInt(value, 10) * 1000;\n  }\n  const retry = Date.parse(value);\n  if (isNaN(retry)) {\n    throw new CodedError(\n      'ERR_APP_AUTH_FETCH_RETRY_TIME',\n      'Cannot parse the Retry-After header value returned by the server: ' + value\n    );\n  }\n  const now = Date.now();\n  const parsedDate = new Date(retry);\n  return parsedDate.getTime() - now;\n}\n\nexport const { OAuthRedirect, URLSchemes } = ExpoAppAuth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}