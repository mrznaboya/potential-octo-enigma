{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport { Platform } from '@unimodules/core';\nimport ExpoSMS from \"./ExpoSMS\";\nexport function sendSMSAsync(_x, _x2) {\n  return _sendSMSAsync.apply(this, arguments);\n}\nfunction _sendSMSAsync() {\n  _sendSMSAsync = _asyncToGenerator(function* (addresses, message) {\n    var finalAddresses = Array.isArray(addresses) ? addresses : [addresses];\n    if (!ExpoSMS.sendSMSAsync) {\n      throw new Error(\"SMS.sendSMSAsync is not supported on \".concat(Platform.OS));\n    }\n    return ExpoSMS.sendSMSAsync(finalAddresses, message);\n  });\n  return _sendSMSAsync.apply(this, arguments);\n}\nexport function isAvailableAsync() {\n  return _isAvailableAsync.apply(this, arguments);\n}\nfunction _isAvailableAsync() {\n  _isAvailableAsync = _asyncToGenerator(function* () {\n    return ExpoSMS.isAvailableAsync();\n  });\n  return _isAvailableAsync.apply(this, arguments);\n}","map":{"version":3,"names":["Platform","ExpoSMS","sendSMSAsync","_x","_x2","_sendSMSAsync","apply","arguments","_asyncToGenerator","addresses","message","finalAddresses","Array","isArray","Error","concat","OS","isAvailableAsync","_isAvailableAsync"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-sms/src/SMS.ts"],"sourcesContent":["import { Platform } from '@unimodules/core';\nimport ExpoSMS from './ExpoSMS';\n\ntype SMSResponse = {\n  result: 'unknown' | 'sent' | 'cancelled';\n};\n\nexport async function sendSMSAsync(\n  addresses: string | string[],\n  message: string\n): Promise<SMSResponse> {\n  const finalAddresses = Array.isArray(addresses) ? addresses : [addresses];\n  if (!ExpoSMS.sendSMSAsync) {\n    throw new Error(`SMS.sendSMSAsync is not supported on ${Platform.OS}`);\n  }\n  return ExpoSMS.sendSMSAsync(finalAddresses, message);\n}\n\nexport async function isAvailableAsync(): Promise<boolean> {\n  return ExpoSMS.isAvailableAsync();\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,OAAO;AAMd,gBAAsBC,YAAYA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AASjC,SAAAF,cAAA;EAAAA,aAAA,GAAAG,iBAAA,CATM,WACLC,SAA4B,EAC5BC,OAAe;IAEf,IAAMC,cAAc,GAAGC,KAAK,CAACC,OAAO,CAACJ,SAAS,CAAC,GAAGA,SAAS,GAAG,CAACA,SAAS,CAAC;IACzE,IAAI,CAACR,OAAO,CAACC,YAAY,EAAE;MACzB,MAAM,IAAIY,KAAK,yCAAAC,MAAA,CAAyCf,QAAQ,CAACgB,EAAE,CAAE,CAAC;;IAExE,OAAOf,OAAO,CAACC,YAAY,CAACS,cAAc,EAAED,OAAO,CAAC;EACtD,CAAC;EAAA,OAAAL,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBU,gBAAgBA,CAAA;EAAA,OAAAC,iBAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA;AAErC,SAAAW,kBAAA;EAAAA,iBAAA,GAAAV,iBAAA,CAFM,aAA+B;IACpC,OAAOP,OAAO,CAACgB,gBAAgB,EAAE;EACnC,CAAC;EAAA,OAAAC,iBAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}