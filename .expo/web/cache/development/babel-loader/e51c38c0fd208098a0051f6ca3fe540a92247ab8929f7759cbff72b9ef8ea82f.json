{"ast":null,"code":"import { Platform } from '@unimodules/core';\nimport { UnavailabilityError } from '@unimodules/core';\nimport invariant from 'invariant';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nfunction getBasePath(_ref) {\n  var {\n    httpServerLocation\n  } = _ref;\n  if (httpServerLocation[0] === '/') {\n    return httpServerLocation.substr(1);\n  }\n  return httpServerLocation;\n}\nfunction getScale() {\n  return Dimensions.get('window').scale;\n}\nfunction getScaledAssetPath(asset) {\n  var scale = AssetSourceResolver.pickScale(asset.scales, getScale());\n  var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  var assetDir = getBasePath(asset);\n  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;\n}\nexport default class AssetSourceResolver {\n  constructor(serverUrl, jsbundleUrl, asset) {\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = jsbundleUrl;\n    this.asset = asset;\n  }\n  isLoadedFromServer() {\n    return !!this.serverUrl;\n  }\n  isLoadedFromFileSystem() {\n    return !!(this.jsbundleUrl && this.jsbundleUrl.startsWith('file://'));\n  }\n  defaultAsset() {\n    if (this.isLoadedFromServer()) {\n      return this.assetServerURL();\n    }\n    return this.scaledAssetURLNearBundle();\n  }\n  assetServerURL() {\n    invariant(!!this.serverUrl, 'need server to load from');\n    return this.fromSource(this.serverUrl + getScaledAssetPath(this.asset) + '?platform=' + Platform.OS + '&hash=' + this.asset.hash);\n  }\n  scaledAssetPath() {\n    return this.fromSource(getScaledAssetPath(this.asset));\n  }\n  scaledAssetURLNearBundle() {\n    var path = this.jsbundleUrl || 'file://';\n    return this.fromSource(path + getScaledAssetPath(this.asset));\n  }\n  resourceIdentifierWithoutScale() {\n    throw new UnavailabilityError('react-native', 'resourceIdentifierWithoutScale()');\n  }\n  drawableFolderInBundle() {\n    throw new UnavailabilityError('react-native', 'drawableFolderInBundle()');\n  }\n  fromSource(source) {\n    return {\n      __packager_asset: true,\n      width: this.asset.width,\n      height: this.asset.height,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, getScale())\n    };\n  }\n  static pickScale(scales, deviceScale) {\n    for (var i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n    return scales[scales.length - 1] || 1;\n  }\n}","map":{"version":3,"names":["Platform","UnavailabilityError","invariant","Dimensions","getBasePath","_ref","httpServerLocation","substr","getScale","get","scale","getScaledAssetPath","asset","AssetSourceResolver","pickScale","scales","scaleSuffix","assetDir","name","type","constructor","serverUrl","jsbundleUrl","isLoadedFromServer","isLoadedFromFileSystem","startsWith","defaultAsset","assetServerURL","scaledAssetURLNearBundle","fromSource","OS","hash","scaledAssetPath","path","resourceIdentifierWithoutScale","drawableFolderInBundle","source","__packager_asset","width","height","uri","deviceScale","i","length"],"sources":["/Users/zuyax/Developer/rn-starter/node_modules/expo-asset/src/AssetSourceResolver.web.ts"],"sourcesContent":["import { Platform } from '@unimodules/core';\nimport { UnavailabilityError } from '@unimodules/core';\nimport invariant from 'invariant';\nimport { Dimensions } from 'react-native';\n\ntype PackagerAsset = any;\n\nfunction getBasePath({ httpServerLocation }: PackagerAsset): string {\n  if (httpServerLocation[0] === '/') {\n    return httpServerLocation.substr(1);\n  }\n  return httpServerLocation;\n}\n\nexport type ResolvedAssetSource = {\n  __packager_asset: boolean;\n  width?: number;\n  height?: number;\n  uri: string;\n  scale: number;\n};\n\nfunction getScale(): number {\n  return Dimensions.get('window').scale;\n}\n\nfunction getScaledAssetPath(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, getScale());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const assetDir = getBasePath(asset);\n  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;\n}\n\nexport default class AssetSourceResolver {\n  serverUrl?: string | null;\n  // where the jsbundle is being run from\n  jsbundleUrl?: string | null;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(\n    serverUrl: string | undefined | null,\n    jsbundleUrl: string | undefined | null,\n    asset: PackagerAsset\n  ) {\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = jsbundleUrl;\n    this.asset = asset;\n  }\n  isLoadedFromServer(): boolean {\n    return !!this.serverUrl;\n  }\n  isLoadedFromFileSystem(): boolean {\n    return !!(this.jsbundleUrl && this.jsbundleUrl.startsWith('file://'));\n  }\n  defaultAsset(): ResolvedAssetSource {\n    if (this.isLoadedFromServer()) {\n      return this.assetServerURL();\n    }\n\n    return this.scaledAssetURLNearBundle();\n  }\n  assetServerURL(): ResolvedAssetSource {\n    invariant(!!this.serverUrl, 'need server to load from');\n    return this.fromSource(\n      this.serverUrl +\n        getScaledAssetPath(this.asset) +\n        '?platform=' +\n        Platform.OS +\n        '&hash=' +\n        this.asset.hash\n    );\n  }\n  scaledAssetPath(): ResolvedAssetSource {\n    return this.fromSource(getScaledAssetPath(this.asset));\n  }\n  scaledAssetURLNearBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || 'file://';\n    return this.fromSource(path + getScaledAssetPath(this.asset));\n  }\n  resourceIdentifierWithoutScale(): ResolvedAssetSource {\n    throw new UnavailabilityError('react-native', 'resourceIdentifierWithoutScale()');\n  }\n  drawableFolderInBundle(): ResolvedAssetSource {\n    throw new UnavailabilityError('react-native', 'drawableFolderInBundle()');\n  }\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width,\n      height: this.asset.height,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, getScale()),\n    };\n  }\n\n  static pickScale(scales: number[], deviceScale: number): number {\n    for (let i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n    return scales[scales.length - 1] || 1;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}